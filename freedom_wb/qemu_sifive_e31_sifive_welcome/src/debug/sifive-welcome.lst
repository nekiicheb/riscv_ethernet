
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/debug/sifive-welcome.elf:     file format elf32-littleriscv
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/debug/sifive-welcome.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00001158 memsz 0x00001158 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x204074a8 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00000d08 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002180 vaddr 0x20401180 paddr 0x20401180 align 2**12
         filesz 0x00006322 memsz 0x00006322 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000df0  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00006322  20401180  20401180  00002180  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  204074a8  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000106  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  800008d0  800008d0  000097c8  2**4  ALLOC
  8 .heap             00000800  80000cd0  80000cd0  000097c8  2**3  ALLOC
  9 .debug_info       0001f9fd  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002d3c  00000000  00000000  000291c5  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000c30  00000000  00000000  0002bf08  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000a00  00000000  00000000  0002cb38  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000b884  00000000  00000000  0002d538  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004e2d  00000000  00000000  00038dbc  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003dbe9  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003dc19  2**0  CONTENTS, READONLY
 17 .debug_frame      00002fd0  00000000  00000000  0003dc48  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401180 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
800008d0 l    d  .stack	00000000 .stack
80000cd0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
204005e0 l       .rodata	00000000 argv
204005e4 l       .rodata	00000000 envp
204005e8 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20405a22 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405a3c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405a56 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405a6c l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405a80 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405a92 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405aa2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405ab8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405aca l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204007e4 l     O .rodata	00000880 pll_configs
20405ae0 l     F .text	0000004e get_pll_config_freq
20405d42 l     F .text	000000ac find_closest_config
20405dee l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 sifive-welcome.c
00000000 l    df *ABS*	00000000 checksum.c
204011fc l     F .text	0000007e sum
2040127a l     F .text	0000006e checksum
2040049c l     O .rodata	0000000e __func__.0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20401600 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 findfp.c
20401cc4 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20402e50 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402e7a l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402ea2 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20402ede l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040303e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403582 l     F .text	00000024 __metal_driver_cpu_hartid
204035a6 l     F .text	0000002a __metal_driver_cpu_timebase
204035d0 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
204035fa l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20404f72 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20404f9c l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20404fc4 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20404fec l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405014 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20405036 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
2040617c l     F .text	00000026 __metal_driver_sifive_gpio0_base
204061a2 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
204061cc l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406aa0 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406aca l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406af8 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406b20 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406b4e l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406b78 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406ba0 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20406f6a l     F .text	000000da pre_rate_change_callback_func
20407044 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20405832 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
2040584c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20405862 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405876 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405932 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2040594c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405962 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405976 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20406104 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20406a30 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407400 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 netinet_in.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_getpid.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_kill.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007d8 l     O .bss	00000004 init_done.1
800007dc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 vector.o
20407380 l       .text	00000000 IRQ_0
20407384 l       .text	00000000 IRQ_1
20407388 l       .text	00000000 IRQ_2
2040738c l       .text	00000000 IRQ_3
20407390 l       .text	00000000 IRQ_4
20407394 l       .text	00000000 IRQ_5
20407398 l       .text	00000000 IRQ_6
2040739c l       .text	00000000 IRQ_7
204073a0 l       .text	00000000 IRQ_8
204073a4 l       .text	00000000 IRQ_9
204073a8 l       .text	00000000 IRQ_10
204073ac l       .text	00000000 IRQ_11
204073b0 l       .text	00000000 IRQ_12
204073b4 l       .text	00000000 IRQ_13
204073b8 l       .text	00000000 IRQ_14
204073bc l       .text	00000000 IRQ_15
204073c0 l       .text	00000000 IRQ_LC0
204073c4 l       .text	00000000 IRQ_LC1
204073c8 l       .text	00000000 IRQ_LC2
204073cc l       .text	00000000 IRQ_LC3
204073d0 l       .text	00000000 IRQ_LC4
204073d4 l       .text	00000000 IRQ_LC5
204073d8 l       .text	00000000 IRQ_LC6
204073dc l       .text	00000000 IRQ_LC7
204073e0 l       .text	00000000 IRQ_LC8
204073e4 l       .text	00000000 IRQ_LC9
204073e8 l       .text	00000000 IRQ_LC10
204073ec l       .text	00000000 IRQ_LC11
204073f0 l       .text	00000000 IRQ_LC12
204073f4 l       .text	00000000 IRQ_LC13
204073f8 l       .text	00000000 IRQ_LC14
204073fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
204010ec g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
204027b8 g     F .text	0000002e _isatty_r
20403e52  w    F .text	00000096 metal_lc4_interrupt_vector_handler
204028a8 g     F .text	00000010 _getpid
204027e6 g     F .text	00000032 _lseek_r
204071dc g     F .text	00000026 metal_clock_get_rate_hz
20406eca g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2040321a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406d1e g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20403dbc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20404664 g     F .text	00000058 __metal_valid_interrupt_id
2040263c g     F .text	00000030 _kill_r
20401904 g     F .text	0000003c printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404ae2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20407188 g     F .text	00000054 _metal_clock_append_to_callbacks
20405090 g     F .text	00000046 __metal_plic0_complete_interrupt
204048a8 g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
204026ec g     F .text	00000036 __sseek
20401d7a g     F .text	0000006a __sinit
20401940 g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401d36 g     F .text	00000044 __sfmoreglue
204013d6 g     F .text	000000c6 test_checksum
2040281a g     F .text	00000002 __malloc_unlock
204072d8 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
2040660a g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204005f4 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
800008ce g       .bss	00000000 metal_segment_bss_target_end
20402f0e g     F .text	0000009a __metal_clint0_mtime_get
20404ee6 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20406de2 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204063c0 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20406a56 g     F .text	0000004a __metal_driver_sifive_test0_exit
20402a48 g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406cee g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406c7c g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
20402fa8 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402788 g     F .text	00000030 _fstat_r
2040685a g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d0 g     O .bss	00000004 errno
20405bd2 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
8000086c g     O .bss	00000062 pkt
2040724e g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20404140  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
20402d42  w    F .text	00000014 metal_init_run
20400780 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
2040073c g     O .rodata	00000044 __metal_driver_vtable_cpu
20402e22 g     F .text	0000002e metal_uart_set_baud_rate
20407074 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20401524 g     F .text	000000dc memcpy
20400370 g     O .rodata	00000062 correct_ping_packet
20404b6e g     F .text	00000070 __metal_driver_cpu_mcycle_get
20401064 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000cd0 g       .heap	00000000 metal_segment_heap_target_start
20401d2c g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
204040aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20405f9e g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405796 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20404398  w    F .text	00000096 metal_lc13_interrupt_vector_handler
2040378c g     F .text	00000018 __metal_default_exception_handler
204025ce g     F .text	00000062 _raise_r
20402882 g     F .text	00000026 _fstat
2040149c g     F .text	0000003a __assert_func
2040354e g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404afe g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
2040361e g     F .text	00000030 __metal_driver_cpu_get
204006d8 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20401310 g     F .text	000000c6 check_ip_crc
2040266c g     F .text	00000002 _getpid_r
20403680 g     F .text	00000018 __metal_interrupt_global_disable
2040580a g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404014  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204041d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
204025a0 g     F .text	0000002e _sbrk_r
204055b6 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404778 g     F .text	0000004e __metal_exception_register
20402c52 g     F .text	00000078 metal_init
2040281c g     F .text	00000032 _read_r
20404d00 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
204064a2 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
2040387c g     F .text	00000068 __metal_default_sw_handler
20407280 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406bca g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
204028b8 g     F .text	00000020 _isatty
20406568 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406c0a g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20401150 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20401130 g     O .rodata	00000004 _global_impure_ptr
204038e4  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402ab0 g     F .text	0000005e __libc_init_array
204064e2 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040426c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20405a00 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20401b0a g     F .text	00000010 abort
20404a8a g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402952 g     F .text	0000007e _sbrk
2040645c g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20407146 g     F .text	00000042 _metal_clock_call_all_callbacks
204002ba g     F .init	00000002 _init
204036e2 g     F .text	0000001a __metal_interrupt_timer_disable
20406654 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20404dbe g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
204010b0 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406c44 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204065a8 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402a7a g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
204069e2 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20402cca g     F .text	00000078 metal_fini
20404d48 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404f52 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20403734 g     F .text	0000002c __metal_interrupt_local_enable
2040351a g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20402da2 g     F .text	00000026 metal_tty_putc
204003d4 g     O .rodata	00000062 incorrect_ping_packet
2040528e g     F .text	00000018 __metal_plic0_default_handler
204029d0  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
204014d6 g     F .text	00000028 fprintf
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405606 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403976 g     F .text	00000016 __metal_default_beu_handler
20400500 g     O .rodata	00000020 __sf_fake_stderr
20403718 g     F .text	0000001c __metal_interrupt_external_disable
20406bea g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404b52 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
204047c6 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20401628 g     F .text	00000042 __sfputs_r
20404ea0 g     F .text	00000046 __metal_driver_cpu_exception_register
20403698 g     F .text	00000018 __metal_interrupt_software_enable
20403c90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20401fe4 g     F .text	0000001a memchr
204020a6 g     F .text	000000a6 _free_r
800007d4 g     O .bss	00000004 _global_atexit
20405156 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
2040455a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402b8a g     F .text	000000c8 __call_exitprocs
80000cd0 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
2040588c g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
204028fe g     F .text	0000002a _lseek
20404e80 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20404f14 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
204036fc g     F .text	0000001c __metal_interrupt_external_enable
20402b0e g     F .text	0000007c __register_exitproc
20406e12 g     F .text	00000042 __metal_driver_sifive_uart0_putc
2040534c g     F .text	00000158 __metal_driver_riscv_plic0_init
20405566 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20406430 g     F .text	0000002c __metal_driver_sifive_gpio0_output
20403f7e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
2040364e g     F .text	0000001a __metal_myhart_id
20406a02 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
204012e8 g     F .text	00000028 get_ip_chksum
204037ea  w    F .text	00000092 metal_software_interrupt_vector_handler
20404ab6 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
2040275a g     F .text	0000002e _close_r
20406eaa g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204014fe g     F .text	00000026 memcmp
204030fc g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401a00 g     F .text	0000010a __swsetup_r
20401de4 g     F .text	0000009c __sfp
20407202 g     F .text	0000004c metal_clock_set_rate_hz
2040266e g     F .text	00000030 __sread
20406380 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
204037bc  w    F .text	0000002e metal_interrupt_vector_handler
20402818 g     F .text	00000002 __malloc_lock
20406cb6 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401c60 g     F .text	00000064 _fflush_r
2040511c g     F .text	0000003a __metal_plic0_get_threshold
20406116 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20400520 g     O .rodata	00000020 __sf_fake_stdin
204046bc g     F .text	000000bc __metal_local_interrupt_enable
204033da g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20401ffe g     F .text	000000a8 memset
20403ee8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401180 g     F .text	00000022 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406d98 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20401134 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20404d5c g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404e20 g     F .text	00000060 __metal_driver_cpu_get_msip
20402d8c g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20404f32 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20405054 g     F .text	0000003c __metal_plic0_claim_interrupt
20406d68 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20402722 g     F .text	00000006 __sclose
20404302  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
204011da g     F .text	00000022 ntohs
2040214c g     F .text	000000d8 _malloc_r
204031fe g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404bde g     F .text	00000046 __metal_driver_cpu_timebase_get
204056fa g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20407306 g     F .text	0000001a metal_cpu_get_current_hartid
2040598c g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407380 g       .text	00000000 __metal_vector_table
20401158 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002ba g     F .init	00000002 _fini
20401904 g     F .text	0000003c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
204051b8 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
20403668 g     F .text	00000018 __metal_interrupt_global_enable
20402a3e g     F .text	0000000a atexit
20402728 g     F .text	00000032 _write_r
204036c8 g     F .text	0000001a __metal_interrupt_timer_enable
20406e54 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20403324 g     F .text	000000b6 __metal_driver_riscv_clint0_disable
20402224 g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404c8a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401b1a g     F .text	00000146 __sflush_r
20402d6a g     F .text	00000022 __metal_shutdown_exit
20405636 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405b2e g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20406144 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20407462 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20403272 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
2040114c g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
204074a8 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
800014d0 g       .heap	00000000 metal_segment_heap_target_end
204045b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401eea g     F .text	0000005c __swhatbuf_r
20406522 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
2040398c g     F .text	00000066 __metal_default_timer_handler
204029d0 g     F .text	0000006e _write
204052a6 g     F .text	000000a6 __metal_plic0_handler
20403d26  w    F .text	00000096 metal_lc2_interrupt_vector_handler
204011a2 g     F .text	00000038 htons
204044c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204072b2 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
2040269e g     F .text	0000004e __swrite
20402a52 g     F .text	00000028 exit
204014d6 g     F .text	00000028 fiprintf
2040166a g     F .text	0000029a _vfiprintf_r
20401e80 g     F .text	0000006a _fwalk_reent
204028d8 g     F .text	00000026 _kill
20407480 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20401158 g       *ABS*	00000000 metal_segment_lim_source_start
20400540 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
204037a4 g     F .text	00000018 __metal_default_interrupt_handler
20402df4 g     F .text	0000002e metal_uart_putc
20402928 g     F .text	0000002a _read
20402d56  w    F .text	00000014 metal_fini_run
20406406 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403a00 g     F .text	00000180 __metal_exception_handler
20403bfa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20402870 g     F .text	00000012 _exit
20404c24 g     F .text	00000066 __metal_driver_cpu_mtime_get
20401f46 g     F .text	0000009e __smakebuf_r
204031d6 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20402330 g     F .text	00000270 _printf_i
800007cc g     O .bss	00000004 __malloc_sbrk_start
2040442e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
2040113c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20403074 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007c8 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
2040166a g     F .text	0000029a _vfprintf_r
20404d1a g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204051ec g     F .text	000000a2 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
20405910 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20404d2e g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20403760 g     F .text	0000002c __metal_interrupt_local_disable
204036b0 g     F .text	00000018 __metal_interrupt_software_disable
20402dc8 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
204050d6 g     F .text	00000046 __metal_plic0_set_threshold
2040565e g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040284e g     F .text	00000022 _close
20402630 g     F .text	0000000c raise
20401144 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
204054a4 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	d3018113          	addi	sp,gp,-720 # 80000cd0 <_sp>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00007297          	auipc	t0,0x7
20400166:	34628293          	addi	t0,t0,838 # 204074a8 <metal_segment_data_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	fc628293          	addi	t0,t0,-58 # 20401158 <metal_segment_itim_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	f9228293          	addi	t0,t0,-110 # 20401158 <metal_segment_itim_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	92e18393          	addi	t2,gp,-1746 # 800008ce <metal_segment_bss_target_end>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00003517          	auipc	a0,0x3
20400224:	85a50513          	addi	a0,a0,-1958 # 20402a7a <__libc_fini_array>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	017020ef          	jal	ra,20402a3e <atexit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	085020ef          	jal	ra,20402ab0 <__libc_init_array>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00003517          	auipc	a0,0x3
20400234:	b2650513          	addi	a0,a0,-1242 # 20402d56 <metal_fini_run>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	007020ef          	jal	ra,20402a3e <atexit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	307020ef          	jal	ra,20402d42 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	34058593          	addi	a1,a1,832 # 204005e0 <argv>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	33c60613          	addi	a2,a2,828 # 204005e4 <envp>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	7a0020ef          	jal	ra,20402a52 <exit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	6af000ef          	jal	ra,20401180 <main>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20400302:	2c7020ef          	jal	ra,20402dc8 <metal_uart_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	78a050ef          	jal	ra,20405aa2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2c0>
2040032e:	001050ef          	jal	ra,20405b2e <__metal_driver_sifive_fe310_g000_pll_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	75e050ef          	jal	ra,20405aa2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2c0>
20400358:	6ab060ef          	jal	ra,20407202 <metal_clock_set_rate_hz>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401180 <main>:
main():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:24
struct metal_cpu *cpu;
struct metal_interrupt *cpu_intr, *tmr_intr;
int tmr_id;
volatile uint32_t timer_isr_flag;

int main(void) {
20401180:	1141                	addi	sp,sp,-16
20401182:	c606                	sw	ra,12(sp)
20401184:	c422                	sw	s0,8(sp)
20401186:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:26
  #ifdef CHECKSUM_TEST
  test_checksum();
20401188:	24b9                	jal	204013d6 <test_checksum>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:28
  #endif
  printf("test");
2040118a:	204007b7          	lui	a5,0x20400
2040118e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20401192:	772000ef          	jal	ra,20401904 <iprintf>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:29
  return 0;
20401196:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:30
}
20401198:	853e                	mv	a0,a5
2040119a:	40b2                	lw	ra,12(sp)
2040119c:	4422                	lw	s0,8(sp)
2040119e:	0141                	addi	sp,sp,16
204011a0:	8082                	ret

204011a2 <htons>:
htons():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:5
#include "project_cfg.h"
#include "netinet_in.h"

#if IS_LITTLE_ENDIAN
uint16_t htons(uint16_t v) {
204011a2:	1101                	addi	sp,sp,-32
204011a4:	ce22                	sw	s0,28(sp)
204011a6:	1000                	addi	s0,sp,32
204011a8:	87aa                	mv	a5,a0
204011aa:	fef41723          	sh	a5,-18(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:6
  return (v >> 8) | (v << 8);
204011ae:	fee45783          	lhu	a5,-18(s0)
204011b2:	83a1                	srli	a5,a5,0x8
204011b4:	07c2                	slli	a5,a5,0x10
204011b6:	83c1                	srli	a5,a5,0x10
204011b8:	01079713          	slli	a4,a5,0x10
204011bc:	8741                	srai	a4,a4,0x10
204011be:	fee45783          	lhu	a5,-18(s0)
204011c2:	07a2                	slli	a5,a5,0x8
204011c4:	07c2                	slli	a5,a5,0x10
204011c6:	87c1                	srai	a5,a5,0x10
204011c8:	8fd9                	or	a5,a5,a4
204011ca:	07c2                	slli	a5,a5,0x10
204011cc:	87c1                	srai	a5,a5,0x10
204011ce:	07c2                	slli	a5,a5,0x10
204011d0:	83c1                	srli	a5,a5,0x10
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:7
}
204011d2:	853e                	mv	a0,a5
204011d4:	4472                	lw	s0,28(sp)
204011d6:	6105                	addi	sp,sp,32
204011d8:	8082                	ret

204011da <ntohs>:
ntohs():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:20
uint32_t htonl(uint32_t v) {
  return v;
}
#endif

uint16_t ntohs(uint16_t v) {
204011da:	1101                	addi	sp,sp,-32
204011dc:	ce06                	sw	ra,28(sp)
204011de:	cc22                	sw	s0,24(sp)
204011e0:	1000                	addi	s0,sp,32
204011e2:	87aa                	mv	a5,a0
204011e4:	fef41723          	sh	a5,-18(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:21
  return htons(v);
204011e8:	fee45783          	lhu	a5,-18(s0)
204011ec:	853e                	mv	a0,a5
204011ee:	3f55                	jal	204011a2 <htons>
204011f0:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:22
}
204011f2:	853e                	mv	a0,a5
204011f4:	40f2                	lw	ra,28(sp)
204011f6:	4462                	lw	s0,24(sp)
204011f8:	6105                	addi	sp,sp,32
204011fa:	8082                	ret

204011fc <sum>:
sum():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:39
#define IP_HEADER_SIZE 20
#define IP_CRC_MSB_OFFSET 10
#define IP_CRC_LSB_OFFSET 11

static uint32_t sum(uint16_t *data, int size, uint32_t origsum)
{
204011fc:	1101                	addi	sp,sp,-32
204011fe:	ce06                	sw	ra,28(sp)
20401200:	cc22                	sw	s0,24(sp)
20401202:	1000                	addi	s0,sp,32
20401204:	fea42623          	sw	a0,-20(s0)
20401208:	feb42423          	sw	a1,-24(s0)
2040120c:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:40
	while (size > 1)
20401210:	a025                	j	20401238 <sum+0x3c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:42
	{
		origsum += *data++;
20401212:	fec42783          	lw	a5,-20(s0)
20401216:	00278713          	addi	a4,a5,2
2040121a:	fee42623          	sw	a4,-20(s0)
2040121e:	0007d783          	lhu	a5,0(a5)
20401222:	873e                	mv	a4,a5
20401224:	fe442783          	lw	a5,-28(s0)
20401228:	97ba                	add	a5,a5,a4
2040122a:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:43
		size -= 2;
2040122e:	fe842783          	lw	a5,-24(s0)
20401232:	17f9                	addi	a5,a5,-2
20401234:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:40
	while (size > 1)
20401238:	fe842703          	lw	a4,-24(s0)
2040123c:	4785                	li	a5,1
2040123e:	fce7cae3          	blt	a5,a4,20401212 <sum+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:45
	}
	if (size)
20401242:	fe842783          	lw	a5,-24(s0)
20401246:	c39d                	beqz	a5,2040126c <sum+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:46
		origsum += ntohs(((*(uint8_t *)data) & 0xff) << 8);
20401248:	fec42783          	lw	a5,-20(s0)
2040124c:	0007c783          	lbu	a5,0(a5)
20401250:	07c2                	slli	a5,a5,0x10
20401252:	83c1                	srli	a5,a5,0x10
20401254:	07a2                	slli	a5,a5,0x8
20401256:	07c2                	slli	a5,a5,0x10
20401258:	83c1                	srli	a5,a5,0x10
2040125a:	853e                	mv	a0,a5
2040125c:	3fbd                	jal	204011da <ntohs>
2040125e:	87aa                	mv	a5,a0
20401260:	873e                	mv	a4,a5
20401262:	fe442783          	lw	a5,-28(s0)
20401266:	97ba                	add	a5,a5,a4
20401268:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:47
	return origsum;
2040126c:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:48
}
20401270:	853e                	mv	a0,a5
20401272:	40f2                	lw	ra,28(sp)
20401274:	4462                	lw	s0,24(sp)
20401276:	6105                	addi	sp,sp,32
20401278:	8082                	ret

2040127a <checksum>:
checksum():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:51

static uint16_t checksum(uint16_t *data, int size, uint16_t origsum)
{
2040127a:	1101                	addi	sp,sp,-32
2040127c:	ce06                	sw	ra,28(sp)
2040127e:	cc22                	sw	s0,24(sp)
20401280:	1000                	addi	s0,sp,32
20401282:	fea42623          	sw	a0,-20(s0)
20401286:	feb42423          	sw	a1,-24(s0)
2040128a:	87b2                	mv	a5,a2
2040128c:	fef41323          	sh	a5,-26(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:52
	origsum = sum(data, size, origsum);
20401290:	fe645783          	lhu	a5,-26(s0)
20401294:	863e                	mv	a2,a5
20401296:	fe842583          	lw	a1,-24(s0)
2040129a:	fec42503          	lw	a0,-20(s0)
2040129e:	3fb9                	jal	204011fc <sum>
204012a0:	87aa                	mv	a5,a0
204012a2:	fef41323          	sh	a5,-26(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:53
	origsum = (origsum & 0xffff) + (origsum >> 16);
204012a6:	fe645783          	lhu	a5,-26(s0)
204012aa:	87c1                	srai	a5,a5,0x10
204012ac:	01079713          	slli	a4,a5,0x10
204012b0:	8341                	srli	a4,a4,0x10
204012b2:	fe645783          	lhu	a5,-26(s0)
204012b6:	97ba                	add	a5,a5,a4
204012b8:	fef41323          	sh	a5,-26(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:54
	origsum = (origsum & 0xffff) + (origsum >> 16);
204012bc:	fe645783          	lhu	a5,-26(s0)
204012c0:	87c1                	srai	a5,a5,0x10
204012c2:	01079713          	slli	a4,a5,0x10
204012c6:	8341                	srli	a4,a4,0x10
204012c8:	fe645783          	lhu	a5,-26(s0)
204012cc:	97ba                	add	a5,a5,a4
204012ce:	fef41323          	sh	a5,-26(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:55
	return (~origsum & 0xffff);
204012d2:	fe645783          	lhu	a5,-26(s0)
204012d6:	fff7c793          	not	a5,a5
204012da:	07c2                	slli	a5,a5,0x10
204012dc:	83c1                	srli	a5,a5,0x10
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:56
}
204012de:	853e                	mv	a0,a5
204012e0:	40f2                	lw	ra,28(sp)
204012e2:	4462                	lw	s0,24(sp)
204012e4:	6105                	addi	sp,sp,32
204012e6:	8082                	ret

204012e8 <get_ip_chksum>:
get_ip_chksum():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:59

uint16_t get_ip_chksum(uint8_t *data, int size)
{
204012e8:	1101                	addi	sp,sp,-32
204012ea:	ce06                	sw	ra,28(sp)
204012ec:	cc22                	sw	s0,24(sp)
204012ee:	1000                	addi	s0,sp,32
204012f0:	fea42623          	sw	a0,-20(s0)
204012f4:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:60
	return checksum(data, size, 0);
204012f8:	4601                	li	a2,0
204012fa:	fe842583          	lw	a1,-24(s0)
204012fe:	fec42503          	lw	a0,-20(s0)
20401302:	3fa5                	jal	2040127a <checksum>
20401304:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:61
}
20401306:	853e                	mv	a0,a5
20401308:	40f2                	lw	ra,28(sp)
2040130a:	4462                	lw	s0,24(sp)
2040130c:	6105                	addi	sp,sp,32
2040130e:	8082                	ret

20401310 <check_ip_crc>:
check_ip_crc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:64

bool check_ip_crc(uint8_t* buf, size_t len)
{
20401310:	7179                	addi	sp,sp,-48
20401312:	d606                	sw	ra,44(sp)
20401314:	d422                	sw	s0,40(sp)
20401316:	d226                	sw	s1,36(sp)
20401318:	1800                	addi	s0,sp,48
2040131a:	fca42e23          	sw	a0,-36(s0)
2040131e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:65
  uint8_t* ptr = buf;
20401322:	fdc42783          	lw	a5,-36(s0)
20401326:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:67
  #ifdef L2_ENABLE
	if(len < MIN_PACKET_SIZE)
2040132a:	fd842703          	lw	a4,-40(s0)
2040132e:	03b00793          	li	a5,59
20401332:	00e7e463          	bltu	a5,a4,2040133a <check_ip_crc+0x2a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:70
	{
		//ethernet Ð¿Ð°ÐºÐµÑ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ 60 Ð±Ð°Ð¹Ñ
		return false;
20401336:	4781                	li	a5,0
20401338:	a849                	j	204013ca <check_ip_crc+0xba>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:72
	}
	ptr = ptr + 12;
2040133a:	fec42783          	lw	a5,-20(s0)
2040133e:	07b1                	addi	a5,a5,12
20401340:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:73
	uint16_t eth_type = ntohs(*((uint16_t*)ptr));
20401344:	fec42783          	lw	a5,-20(s0)
20401348:	0007d783          	lhu	a5,0(a5)
2040134c:	853e                	mv	a0,a5
2040134e:	3571                	jal	204011da <ntohs>
20401350:	87aa                	mv	a5,a0
20401352:	fef41523          	sh	a5,-22(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:74
	if(eth_type != IP4TYPE)
20401356:	fea45783          	lhu	a5,-22(s0)
2040135a:	80078793          	addi	a5,a5,-2048
2040135e:	c399                	beqz	a5,20401364 <check_ip_crc+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:77
	{
		// Ð² ÑÐ· Ð½Ðµ ÑÐ°ÑÐ¿Ð¸ÑÐ°Ð½ ÑÑÐ¾Ñ Ð²Ð°ÑÐ¸Ð°Ð½Ñ, Ð¾ÑÐ±ÑÐ¾ÑÐ¸Ð¼ Ð¿Ð°ÐºÐµÑ
		return false;
20401360:	4781                	li	a5,0
20401362:	a0a5                	j	204013ca <check_ip_crc+0xba>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:79
	}
	ptr = ptr + 2;
20401364:	fec42783          	lw	a5,-20(s0)
20401368:	0789                	addi	a5,a5,2
2040136a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:81
  #endif
	uint16_t crc_from_packet = ntohs(*((uint16_t*)(ptr + IP_CRC_MSB_OFFSET)));
2040136e:	fec42783          	lw	a5,-20(s0)
20401372:	07a9                	addi	a5,a5,10
20401374:	0007d783          	lhu	a5,0(a5)
20401378:	853e                	mv	a0,a5
2040137a:	3585                	jal	204011da <ntohs>
2040137c:	87aa                	mv	a5,a0
2040137e:	fef41423          	sh	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:82
	(*((uint16_t*)(ptr + IP_CRC_MSB_OFFSET))) = 0;
20401382:	fec42783          	lw	a5,-20(s0)
20401386:	07a9                	addi	a5,a5,10
20401388:	00079023          	sh	zero,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:83
	uint16_t calc_crc = ntohs(get_ip_chksum(ptr, IP_HEADER_SIZE));
2040138c:	45d1                	li	a1,20
2040138e:	fec42503          	lw	a0,-20(s0)
20401392:	3f99                	jal	204012e8 <get_ip_chksum>
20401394:	87aa                	mv	a5,a0
20401396:	853e                	mv	a0,a5
20401398:	3589                	jal	204011da <ntohs>
2040139a:	87aa                	mv	a5,a0
2040139c:	fef41323          	sh	a5,-26(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:84
	(*((uint16_t*)(ptr + IP_CRC_MSB_OFFSET))) = htons(crc_from_packet);
204013a0:	fec42783          	lw	a5,-20(s0)
204013a4:	00a78493          	addi	s1,a5,10
204013a8:	fe845783          	lhu	a5,-24(s0)
204013ac:	853e                	mv	a0,a5
204013ae:	3bd5                	jal	204011a2 <htons>
204013b0:	87aa                	mv	a5,a0
204013b2:	00f49023          	sh	a5,0(s1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:85
	return (calc_crc == crc_from_packet);
204013b6:	fe645703          	lhu	a4,-26(s0)
204013ba:	fe845783          	lhu	a5,-24(s0)
204013be:	40f707b3          	sub	a5,a4,a5
204013c2:	0017b793          	seqz	a5,a5
204013c6:	0ff7f793          	zext.b	a5,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:86
}
204013ca:	853e                	mv	a0,a5
204013cc:	50b2                	lw	ra,44(sp)
204013ce:	5422                	lw	s0,40(sp)
204013d0:	5492                	lw	s1,36(sp)
204013d2:	6145                	addi	sp,sp,48
204013d4:	8082                	ret

204013d6 <test_checksum>:
test_checksum():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:91

#ifdef CHECKSUM_TEST
uint8_t pkt[(sizeof(correct_ping_packet))];
void test_checksum()
{
204013d6:	1141                	addi	sp,sp,-16
204013d8:	c606                	sw	ra,12(sp)
204013da:	c422                	sw	s0,8(sp)
204013dc:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:93
  // test with correct pkt
  memcpy(&pkt[0], &correct_ping_packet[0], sizeof(pkt));
204013de:	06200613          	li	a2,98
204013e2:	204007b7          	lui	a5,0x20400
204013e6:	37078593          	addi	a1,a5,880 # 20400370 <correct_ping_packet>
204013ea:	800017b7          	lui	a5,0x80001
204013ee:	86c78513          	addi	a0,a5,-1940 # 8000086c <metal_segment_heap_target_end+0xfffff39c>
204013f2:	2a0d                	jal	20401524 <memcpy>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:94
  assert(check_ip_crc(&pkt[0], sizeof(pkt)) == true);
204013f4:	06200593          	li	a1,98
204013f8:	800017b7          	lui	a5,0x80001
204013fc:	86c78513          	addi	a0,a5,-1940 # 8000086c <metal_segment_heap_target_end+0xfffff39c>
20401400:	3f01                	jal	20401310 <check_ip_crc>
20401402:	87aa                	mv	a5,a0
20401404:	873e                	mv	a4,a5
20401406:	4785                	li	a5,1
20401408:	02f70163          	beq	a4,a5,2040142a <test_checksum+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:94 (discriminator 1)
2040140c:	204007b7          	lui	a5,0x20400
20401410:	43878693          	addi	a3,a5,1080 # 20400438 <incorrect_ping_packet+0x64>
20401414:	204007b7          	lui	a5,0x20400
20401418:	49c78613          	addi	a2,a5,1180 # 2040049c <__func__.0>
2040141c:	05e00593          	li	a1,94
20401420:	204007b7          	lui	a5,0x20400
20401424:	46478513          	addi	a0,a5,1124 # 20400464 <incorrect_ping_packet+0x90>
20401428:	2895                	jal	2040149c <__assert_func>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:96
  // test src pkt correct
  if(memcmp(&pkt[0], &correct_ping_packet[0], sizeof(correct_ping_packet)) != 0)
2040142a:	06200613          	li	a2,98
2040142e:	204007b7          	lui	a5,0x20400
20401432:	37078593          	addi	a1,a5,880 # 20400370 <correct_ping_packet>
20401436:	800017b7          	lui	a5,0x80001
2040143a:	86c78513          	addi	a0,a5,-1940 # 8000086c <metal_segment_heap_target_end+0xfffff39c>
2040143e:	20c1                	jal	204014fe <memcmp>
20401440:	87aa                	mv	a5,a0
20401442:	eba1                	bnez	a5,20401492 <test_checksum+0xbc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:102
  {
    assert("src packet spoiled");
    return;
  }
  // test with correct pkt
  memcpy(&pkt[0], &incorrect_ping_packet[0], sizeof(pkt));
20401444:	06200613          	li	a2,98
20401448:	204007b7          	lui	a5,0x20400
2040144c:	3d478593          	addi	a1,a5,980 # 204003d4 <incorrect_ping_packet>
20401450:	800017b7          	lui	a5,0x80001
20401454:	86c78513          	addi	a0,a5,-1940 # 8000086c <metal_segment_heap_target_end+0xfffff39c>
20401458:	20f1                	jal	20401524 <memcpy>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:103
  assert(check_ip_crc(&pkt[0], sizeof(pkt)) == false);
2040145a:	06200593          	li	a1,98
2040145e:	800017b7          	lui	a5,0x80001
20401462:	86c78513          	addi	a0,a5,-1940 # 8000086c <metal_segment_heap_target_end+0xfffff39c>
20401466:	356d                	jal	20401310 <check_ip_crc>
20401468:	87aa                	mv	a5,a0
2040146a:	0017c793          	xori	a5,a5,1
2040146e:	0ff7f793          	zext.b	a5,a5
20401472:	e38d                	bnez	a5,20401494 <test_checksum+0xbe>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:103 (discriminator 1)
20401474:	204007b7          	lui	a5,0x20400
20401478:	47078693          	addi	a3,a5,1136 # 20400470 <incorrect_ping_packet+0x9c>
2040147c:	204007b7          	lui	a5,0x20400
20401480:	49c78613          	addi	a2,a5,1180 # 2040049c <__func__.0>
20401484:	06700593          	li	a1,103
20401488:	204007b7          	lui	a5,0x20400
2040148c:	46478513          	addi	a0,a5,1124 # 20400464 <incorrect_ping_packet+0x90>
20401490:	2031                	jal	2040149c <__assert_func>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:99
    return;
20401492:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/checksum.c:104
}
20401494:	40b2                	lw	ra,12(sp)
20401496:	4422                	lw	s0,8(sp)
20401498:	0141                	addi	sp,sp,16
2040149a:	8082                	ret

2040149c <__assert_func>:
__assert_func():
2040149c:	1141                	addi	sp,sp,-16
2040149e:	5fbff797          	auipc	a5,0x5fbff
204014a2:	3027a783          	lw	a5,770(a5) # 800007a0 <_impure_ptr>
204014a6:	8832                	mv	a6,a2
204014a8:	c606                	sw	ra,12(sp)
204014aa:	88aa                	mv	a7,a0
204014ac:	872e                	mv	a4,a1
204014ae:	47c8                	lw	a0,12(a5)
204014b0:	8636                	mv	a2,a3
204014b2:	fffff797          	auipc	a5,0xfffff
204014b6:	ffa78793          	addi	a5,a5,-6 # 204004ac <__func__.0+0x10>
204014ba:	00081763          	bnez	a6,204014c8 <__assert_func+0x2c>
204014be:	fffff797          	auipc	a5,0xfffff
204014c2:	ffa78793          	addi	a5,a5,-6 # 204004b8 <__func__.0+0x1c>
204014c6:	883e                	mv	a6,a5
204014c8:	86c6                	mv	a3,a7
204014ca:	fffff597          	auipc	a1,0xfffff
204014ce:	ff258593          	addi	a1,a1,-14 # 204004bc <__func__.0+0x20>
204014d2:	2011                	jal	204014d6 <fiprintf>
204014d4:	2d1d                	jal	20401b0a <abort>

204014d6 <fiprintf>:
fprintf():
204014d6:	7139                	addi	sp,sp,-64
204014d8:	d432                	sw	a2,40(sp)
204014da:	d636                	sw	a3,44(sp)
204014dc:	862e                	mv	a2,a1
204014de:	1034                	addi	a3,sp,40
204014e0:	85aa                	mv	a1,a0
204014e2:	5fbff517          	auipc	a0,0x5fbff
204014e6:	2be52503          	lw	a0,702(a0) # 800007a0 <_impure_ptr>
204014ea:	ce06                	sw	ra,28(sp)
204014ec:	d83a                	sw	a4,48(sp)
204014ee:	da3e                	sw	a5,52(sp)
204014f0:	dc42                	sw	a6,56(sp)
204014f2:	de46                	sw	a7,60(sp)
204014f4:	c636                	sw	a3,12(sp)
204014f6:	2a95                	jal	2040166a <_vfiprintf_r>
204014f8:	40f2                	lw	ra,28(sp)
204014fa:	6121                	addi	sp,sp,64
204014fc:	8082                	ret

204014fe <memcmp>:
memcmp():
204014fe:	4701                	li	a4,0
20401500:	00e61463          	bne	a2,a4,20401508 <memcmp+0xa>
20401504:	4501                	li	a0,0
20401506:	8082                	ret
20401508:	00e507b3          	add	a5,a0,a4
2040150c:	0705                	addi	a4,a4,1
2040150e:	00e586b3          	add	a3,a1,a4
20401512:	0007c783          	lbu	a5,0(a5)
20401516:	fff6c683          	lbu	a3,-1(a3)
2040151a:	fed783e3          	beq	a5,a3,20401500 <memcmp+0x2>
2040151e:	40d78533          	sub	a0,a5,a3
20401522:	8082                	ret

20401524 <memcpy>:
memcpy():
20401524:	00a5c7b3          	xor	a5,a1,a0
20401528:	8b8d                	andi	a5,a5,3
2040152a:	00c506b3          	add	a3,a0,a2
2040152e:	e781                	bnez	a5,20401536 <memcpy+0x12>
20401530:	478d                	li	a5,3
20401532:	00c7ee63          	bltu	a5,a2,2040154e <memcpy+0x2a>
20401536:	87aa                	mv	a5,a0
20401538:	06d57163          	bgeu	a0,a3,2040159a <memcpy+0x76>
2040153c:	0005c703          	lbu	a4,0(a1)
20401540:	0785                	addi	a5,a5,1
20401542:	0585                	addi	a1,a1,1
20401544:	fee78fa3          	sb	a4,-1(a5)
20401548:	fed7eae3          	bltu	a5,a3,2040153c <memcpy+0x18>
2040154c:	8082                	ret
2040154e:	00357713          	andi	a4,a0,3
20401552:	87aa                	mv	a5,a0
20401554:	cb11                	beqz	a4,20401568 <memcpy+0x44>
20401556:	0005c703          	lbu	a4,0(a1)
2040155a:	0785                	addi	a5,a5,1
2040155c:	0585                	addi	a1,a1,1
2040155e:	fee78fa3          	sb	a4,-1(a5)
20401562:	0037f713          	andi	a4,a5,3
20401566:	b7fd                	j	20401554 <memcpy+0x30>
20401568:	ffc6f713          	andi	a4,a3,-4
2040156c:	40f70833          	sub	a6,a4,a5
20401570:	02000613          	li	a2,32
20401574:	03064463          	blt	a2,a6,2040159c <memcpy+0x78>
20401578:	882e                	mv	a6,a1
2040157a:	863e                	mv	a2,a5
2040157c:	06e66b63          	bltu	a2,a4,204015f2 <memcpy+0xce>
20401580:	ffd78813          	addi	a6,a5,-3
20401584:	4601                	li	a2,0
20401586:	01076663          	bltu	a4,a6,20401592 <memcpy+0x6e>
2040158a:	070d                	addi	a4,a4,3
2040158c:	8f1d                	sub	a4,a4,a5
2040158e:	ffc77613          	andi	a2,a4,-4
20401592:	97b2                	add	a5,a5,a2
20401594:	95b2                	add	a1,a1,a2
20401596:	fad7e3e3          	bltu	a5,a3,2040153c <memcpy+0x18>
2040159a:	8082                	ret
2040159c:	0005a383          	lw	t2,0(a1)
204015a0:	0045a283          	lw	t0,4(a1)
204015a4:	0085af83          	lw	t6,8(a1)
204015a8:	00c5af03          	lw	t5,12(a1)
204015ac:	0105ae83          	lw	t4,16(a1)
204015b0:	0145ae03          	lw	t3,20(a1)
204015b4:	0185a303          	lw	t1,24(a1)
204015b8:	01c5a883          	lw	a7,28(a1)
204015bc:	0077a023          	sw	t2,0(a5)
204015c0:	0057a223          	sw	t0,4(a5)
204015c4:	0205a803          	lw	a6,32(a1)
204015c8:	01f7a423          	sw	t6,8(a5)
204015cc:	01e7a623          	sw	t5,12(a5)
204015d0:	01d7a823          	sw	t4,16(a5)
204015d4:	01c7aa23          	sw	t3,20(a5)
204015d8:	0067ac23          	sw	t1,24(a5)
204015dc:	0117ae23          	sw	a7,28(a5)
204015e0:	02478793          	addi	a5,a5,36
204015e4:	02458593          	addi	a1,a1,36
204015e8:	ff07ae23          	sw	a6,-4(a5)
204015ec:	40f70833          	sub	a6,a4,a5
204015f0:	b751                	j	20401574 <memcpy+0x50>
204015f2:	00082883          	lw	a7,0(a6)
204015f6:	0611                	addi	a2,a2,4
204015f8:	0811                	addi	a6,a6,4
204015fa:	ff162e23          	sw	a7,-4(a2)
204015fe:	bfbd                	j	2040157c <memcpy+0x58>

20401600 <__sfputc_r>:
__sfputc_r():
20401600:	461c                	lw	a5,8(a2)
20401602:	17fd                	addi	a5,a5,-1
20401604:	c61c                	sw	a5,8(a2)
20401606:	0007d963          	bgez	a5,20401618 <__sfputc_r+0x18>
2040160a:	4e18                	lw	a4,24(a2)
2040160c:	00e7c563          	blt	a5,a4,20401616 <__sfputc_r+0x16>
20401610:	47a9                	li	a5,10
20401612:	00f59363          	bne	a1,a5,20401618 <__sfputc_r+0x18>
20401616:	a62d                	j	20401940 <__swbuf_r>
20401618:	421c                	lw	a5,0(a2)
2040161a:	852e                	mv	a0,a1
2040161c:	00178713          	addi	a4,a5,1
20401620:	c218                	sw	a4,0(a2)
20401622:	00b78023          	sb	a1,0(a5)
20401626:	8082                	ret

20401628 <__sfputs_r>:
__sfputs_r():
20401628:	1101                	addi	sp,sp,-32
2040162a:	cc22                	sw	s0,24(sp)
2040162c:	ca26                	sw	s1,20(sp)
2040162e:	c84a                	sw	s2,16(sp)
20401630:	c64e                	sw	s3,12(sp)
20401632:	c452                	sw	s4,8(sp)
20401634:	ce06                	sw	ra,28(sp)
20401636:	892a                	mv	s2,a0
20401638:	89ae                	mv	s3,a1
2040163a:	8432                	mv	s0,a2
2040163c:	00d604b3          	add	s1,a2,a3
20401640:	5a7d                	li	s4,-1
20401642:	00941463          	bne	s0,s1,2040164a <__sfputs_r+0x22>
20401646:	4501                	li	a0,0
20401648:	a809                	j	2040165a <__sfputs_r+0x32>
2040164a:	00044583          	lbu	a1,0(s0)
2040164e:	864e                	mv	a2,s3
20401650:	854a                	mv	a0,s2
20401652:	377d                	jal	20401600 <__sfputc_r>
20401654:	0405                	addi	s0,s0,1
20401656:	ff4516e3          	bne	a0,s4,20401642 <__sfputs_r+0x1a>
2040165a:	40f2                	lw	ra,28(sp)
2040165c:	4462                	lw	s0,24(sp)
2040165e:	44d2                	lw	s1,20(sp)
20401660:	4942                	lw	s2,16(sp)
20401662:	49b2                	lw	s3,12(sp)
20401664:	4a22                	lw	s4,8(sp)
20401666:	6105                	addi	sp,sp,32
20401668:	8082                	ret

2040166a <_vfiprintf_r>:
_vfiprintf_r():
2040166a:	7135                	addi	sp,sp,-160
2040166c:	cd22                	sw	s0,152(sp)
2040166e:	cb26                	sw	s1,148(sp)
20401670:	c94a                	sw	s2,144(sp)
20401672:	c74e                	sw	s3,140(sp)
20401674:	cf06                	sw	ra,156(sp)
20401676:	c552                	sw	s4,136(sp)
20401678:	c356                	sw	s5,132(sp)
2040167a:	c15a                	sw	s6,128(sp)
2040167c:	dede                	sw	s7,124(sp)
2040167e:	dce2                	sw	s8,120(sp)
20401680:	dae6                	sw	s9,116(sp)
20401682:	89aa                	mv	s3,a0
20401684:	84ae                	mv	s1,a1
20401686:	8932                	mv	s2,a2
20401688:	8436                	mv	s0,a3
2040168a:	c501                	beqz	a0,20401692 <_vfiprintf_r+0x28>
2040168c:	4d1c                	lw	a5,24(a0)
2040168e:	e391                	bnez	a5,20401692 <_vfiprintf_r+0x28>
20401690:	25ed                	jal	20401d7a <__sinit>
20401692:	fffff797          	auipc	a5,0xfffff
20401696:	e8e78793          	addi	a5,a5,-370 # 20400520 <__sf_fake_stdin>
2040169a:	0cf49c63          	bne	s1,a5,20401772 <_vfiprintf_r+0x108>
2040169e:	0049a483          	lw	s1,4(s3)
204016a2:	00c4d783          	lhu	a5,12(s1)
204016a6:	8ba1                	andi	a5,a5,8
204016a8:	c7fd                	beqz	a5,20401796 <_vfiprintf_r+0x12c>
204016aa:	489c                	lw	a5,16(s1)
204016ac:	c7ed                	beqz	a5,20401796 <_vfiprintf_r+0x12c>
204016ae:	02000793          	li	a5,32
204016b2:	02f104a3          	sb	a5,41(sp)
204016b6:	03000793          	li	a5,48
204016ba:	d202                	sw	zero,36(sp)
204016bc:	02f10523          	sb	a5,42(sp)
204016c0:	c622                	sw	s0,12(sp)
204016c2:	02500b93          	li	s7,37
204016c6:	fffffa97          	auipc	s5,0xfffff
204016ca:	e26a8a93          	addi	s5,s5,-474 # 204004ec <__func__.0+0x50>
204016ce:	4c05                	li	s8,1
204016d0:	4b29                	li	s6,10
204016d2:	844a                	mv	s0,s2
204016d4:	00044783          	lbu	a5,0(s0)
204016d8:	c399                	beqz	a5,204016de <_vfiprintf_r+0x74>
204016da:	0f779063          	bne	a5,s7,204017ba <_vfiprintf_r+0x150>
204016de:	41240cb3          	sub	s9,s0,s2
204016e2:	01240d63          	beq	s0,s2,204016fc <_vfiprintf_r+0x92>
204016e6:	86e6                	mv	a3,s9
204016e8:	864a                	mv	a2,s2
204016ea:	85a6                	mv	a1,s1
204016ec:	854e                	mv	a0,s3
204016ee:	3f2d                	jal	20401628 <__sfputs_r>
204016f0:	57fd                	li	a5,-1
204016f2:	1ef50663          	beq	a0,a5,204018de <_vfiprintf_r+0x274>
204016f6:	5792                	lw	a5,36(sp)
204016f8:	97e6                	add	a5,a5,s9
204016fa:	d23e                	sw	a5,36(sp)
204016fc:	00044783          	lbu	a5,0(s0)
20401700:	1c078f63          	beqz	a5,204018de <_vfiprintf_r+0x274>
20401704:	57fd                	li	a5,-1
20401706:	00140913          	addi	s2,s0,1
2040170a:	c802                	sw	zero,16(sp)
2040170c:	ce02                	sw	zero,28(sp)
2040170e:	ca3e                	sw	a5,20(sp)
20401710:	cc02                	sw	zero,24(sp)
20401712:	040109a3          	sb	zero,83(sp)
20401716:	d482                	sw	zero,104(sp)
20401718:	00094583          	lbu	a1,0(s2)
2040171c:	4615                	li	a2,5
2040171e:	8556                	mv	a0,s5
20401720:	0c5000ef          	jal	ra,20401fe4 <memchr>
20401724:	47c2                	lw	a5,16(sp)
20401726:	00190413          	addi	s0,s2,1
2040172a:	e951                	bnez	a0,204017be <_vfiprintf_r+0x154>
2040172c:	0107f713          	andi	a4,a5,16
20401730:	c709                	beqz	a4,2040173a <_vfiprintf_r+0xd0>
20401732:	02000713          	li	a4,32
20401736:	04e109a3          	sb	a4,83(sp)
2040173a:	0087f713          	andi	a4,a5,8
2040173e:	c709                	beqz	a4,20401748 <_vfiprintf_r+0xde>
20401740:	02b00713          	li	a4,43
20401744:	04e109a3          	sb	a4,83(sp)
20401748:	00094683          	lbu	a3,0(s2)
2040174c:	02a00713          	li	a4,42
20401750:	06e68f63          	beq	a3,a4,204017ce <_vfiprintf_r+0x164>
20401754:	47f2                	lw	a5,28(sp)
20401756:	844a                	mv	s0,s2
20401758:	4681                	li	a3,0
2040175a:	4625                	li	a2,9
2040175c:	00044703          	lbu	a4,0(s0)
20401760:	00140593          	addi	a1,s0,1
20401764:	fd070713          	addi	a4,a4,-48 # 1fffd0 <__heap_size+0x1ff7d0>
20401768:	0ae67863          	bgeu	a2,a4,20401818 <_vfiprintf_r+0x1ae>
2040176c:	caad                	beqz	a3,204017de <_vfiprintf_r+0x174>
2040176e:	ce3e                	sw	a5,28(sp)
20401770:	a0bd                	j	204017de <_vfiprintf_r+0x174>
20401772:	fffff797          	auipc	a5,0xfffff
20401776:	dce78793          	addi	a5,a5,-562 # 20400540 <__sf_fake_stdout>
2040177a:	00f49563          	bne	s1,a5,20401784 <_vfiprintf_r+0x11a>
2040177e:	0089a483          	lw	s1,8(s3)
20401782:	b705                	j	204016a2 <_vfiprintf_r+0x38>
20401784:	fffff797          	auipc	a5,0xfffff
20401788:	d7c78793          	addi	a5,a5,-644 # 20400500 <__sf_fake_stderr>
2040178c:	f0f49be3          	bne	s1,a5,204016a2 <_vfiprintf_r+0x38>
20401790:	00c9a483          	lw	s1,12(s3)
20401794:	b739                	j	204016a2 <_vfiprintf_r+0x38>
20401796:	85a6                	mv	a1,s1
20401798:	854e                	mv	a0,s3
2040179a:	249d                	jal	20401a00 <__swsetup_r>
2040179c:	d909                	beqz	a0,204016ae <_vfiprintf_r+0x44>
2040179e:	557d                	li	a0,-1
204017a0:	40fa                	lw	ra,156(sp)
204017a2:	446a                	lw	s0,152(sp)
204017a4:	44da                	lw	s1,148(sp)
204017a6:	494a                	lw	s2,144(sp)
204017a8:	49ba                	lw	s3,140(sp)
204017aa:	4a2a                	lw	s4,136(sp)
204017ac:	4a9a                	lw	s5,132(sp)
204017ae:	4b0a                	lw	s6,128(sp)
204017b0:	5bf6                	lw	s7,124(sp)
204017b2:	5c66                	lw	s8,120(sp)
204017b4:	5cd6                	lw	s9,116(sp)
204017b6:	610d                	addi	sp,sp,160
204017b8:	8082                	ret
204017ba:	0405                	addi	s0,s0,1
204017bc:	bf21                	j	204016d4 <_vfiprintf_r+0x6a>
204017be:	41550533          	sub	a0,a0,s5
204017c2:	00ac1533          	sll	a0,s8,a0
204017c6:	8fc9                	or	a5,a5,a0
204017c8:	c83e                	sw	a5,16(sp)
204017ca:	8922                	mv	s2,s0
204017cc:	b7b1                	j	20401718 <_vfiprintf_r+0xae>
204017ce:	4732                	lw	a4,12(sp)
204017d0:	00470693          	addi	a3,a4,4
204017d4:	4318                	lw	a4,0(a4)
204017d6:	c636                	sw	a3,12(sp)
204017d8:	02074963          	bltz	a4,2040180a <_vfiprintf_r+0x1a0>
204017dc:	ce3a                	sw	a4,28(sp)
204017de:	00044703          	lbu	a4,0(s0)
204017e2:	02e00793          	li	a5,46
204017e6:	04f71f63          	bne	a4,a5,20401844 <_vfiprintf_r+0x1da>
204017ea:	00144703          	lbu	a4,1(s0)
204017ee:	02a00793          	li	a5,42
204017f2:	02f71b63          	bne	a4,a5,20401828 <_vfiprintf_r+0x1be>
204017f6:	47b2                	lw	a5,12(sp)
204017f8:	0409                	addi	s0,s0,2
204017fa:	00478713          	addi	a4,a5,4
204017fe:	439c                	lw	a5,0(a5)
20401800:	c63a                	sw	a4,12(sp)
20401802:	0207c163          	bltz	a5,20401824 <_vfiprintf_r+0x1ba>
20401806:	ca3e                	sw	a5,20(sp)
20401808:	a835                	j	20401844 <_vfiprintf_r+0x1da>
2040180a:	40e00733          	neg	a4,a4
2040180e:	0027e793          	ori	a5,a5,2
20401812:	ce3a                	sw	a4,28(sp)
20401814:	c83e                	sw	a5,16(sp)
20401816:	b7e1                	j	204017de <_vfiprintf_r+0x174>
20401818:	036787b3          	mul	a5,a5,s6
2040181c:	842e                	mv	s0,a1
2040181e:	4685                	li	a3,1
20401820:	97ba                	add	a5,a5,a4
20401822:	bf2d                	j	2040175c <_vfiprintf_r+0xf2>
20401824:	57fd                	li	a5,-1
20401826:	b7c5                	j	20401806 <_vfiprintf_r+0x19c>
20401828:	0405                	addi	s0,s0,1
2040182a:	ca02                	sw	zero,20(sp)
2040182c:	4681                	li	a3,0
2040182e:	4781                	li	a5,0
20401830:	4625                	li	a2,9
20401832:	00044703          	lbu	a4,0(s0)
20401836:	00140593          	addi	a1,s0,1
2040183a:	fd070713          	addi	a4,a4,-48
2040183e:	06e67663          	bgeu	a2,a4,204018aa <_vfiprintf_r+0x240>
20401842:	f2f1                	bnez	a3,20401806 <_vfiprintf_r+0x19c>
20401844:	00044583          	lbu	a1,0(s0)
20401848:	460d                	li	a2,3
2040184a:	fffff517          	auipc	a0,0xfffff
2040184e:	caa50513          	addi	a0,a0,-854 # 204004f4 <__func__.0+0x58>
20401852:	792000ef          	jal	ra,20401fe4 <memchr>
20401856:	cd11                	beqz	a0,20401872 <_vfiprintf_r+0x208>
20401858:	fffff797          	auipc	a5,0xfffff
2040185c:	c9c78793          	addi	a5,a5,-868 # 204004f4 <__func__.0+0x58>
20401860:	8d1d                	sub	a0,a0,a5
20401862:	04000793          	li	a5,64
20401866:	00a797b3          	sll	a5,a5,a0
2040186a:	4542                	lw	a0,16(sp)
2040186c:	0405                	addi	s0,s0,1
2040186e:	8d5d                	or	a0,a0,a5
20401870:	c82a                	sw	a0,16(sp)
20401872:	00044583          	lbu	a1,0(s0)
20401876:	4619                	li	a2,6
20401878:	fffff517          	auipc	a0,0xfffff
2040187c:	c8050513          	addi	a0,a0,-896 # 204004f8 <__func__.0+0x5c>
20401880:	00140913          	addi	s2,s0,1
20401884:	02b10423          	sb	a1,40(sp)
20401888:	75c000ef          	jal	ra,20401fe4 <memchr>
2040188c:	c12d                	beqz	a0,204018ee <_vfiprintf_r+0x284>
2040188e:	00000793          	li	a5,0
20401892:	e795                	bnez	a5,204018be <_vfiprintf_r+0x254>
20401894:	4742                	lw	a4,16(sp)
20401896:	47b2                	lw	a5,12(sp)
20401898:	10077713          	andi	a4,a4,256
2040189c:	cf09                	beqz	a4,204018b6 <_vfiprintf_r+0x24c>
2040189e:	0791                	addi	a5,a5,4
204018a0:	c63e                	sw	a5,12(sp)
204018a2:	5792                	lw	a5,36(sp)
204018a4:	97d2                	add	a5,a5,s4
204018a6:	d23e                	sw	a5,36(sp)
204018a8:	b52d                	j	204016d2 <_vfiprintf_r+0x68>
204018aa:	036787b3          	mul	a5,a5,s6
204018ae:	842e                	mv	s0,a1
204018b0:	4685                	li	a3,1
204018b2:	97ba                	add	a5,a5,a4
204018b4:	bfbd                	j	20401832 <_vfiprintf_r+0x1c8>
204018b6:	079d                	addi	a5,a5,7
204018b8:	9be1                	andi	a5,a5,-8
204018ba:	07a1                	addi	a5,a5,8
204018bc:	b7d5                	j	204018a0 <_vfiprintf_r+0x236>
204018be:	0078                	addi	a4,sp,12
204018c0:	00000697          	auipc	a3,0x0
204018c4:	d6868693          	addi	a3,a3,-664 # 20401628 <__sfputs_r>
204018c8:	8626                	mv	a2,s1
204018ca:	080c                	addi	a1,sp,16
204018cc:	854e                	mv	a0,s3
204018ce:	00000097          	auipc	ra,0x0
204018d2:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
204018d6:	57fd                	li	a5,-1
204018d8:	8a2a                	mv	s4,a0
204018da:	fcf514e3          	bne	a0,a5,204018a2 <_vfiprintf_r+0x238>
204018de:	00c4d783          	lhu	a5,12(s1)
204018e2:	0407f793          	andi	a5,a5,64
204018e6:	ea079ce3          	bnez	a5,2040179e <_vfiprintf_r+0x134>
204018ea:	5512                	lw	a0,36(sp)
204018ec:	bd55                	j	204017a0 <_vfiprintf_r+0x136>
204018ee:	0078                	addi	a4,sp,12
204018f0:	00000697          	auipc	a3,0x0
204018f4:	d3868693          	addi	a3,a3,-712 # 20401628 <__sfputs_r>
204018f8:	8626                	mv	a2,s1
204018fa:	080c                	addi	a1,sp,16
204018fc:	854e                	mv	a0,s3
204018fe:	233000ef          	jal	ra,20402330 <_printf_i>
20401902:	bfd1                	j	204018d6 <_vfiprintf_r+0x26c>

20401904 <iprintf>:
printf():
20401904:	715d                	addi	sp,sp,-80
20401906:	d422                	sw	s0,40(sp)
20401908:	d606                	sw	ra,44(sp)
2040190a:	842a                	mv	s0,a0
2040190c:	da2e                	sw	a1,52(sp)
2040190e:	dc32                	sw	a2,56(sp)
20401910:	de36                	sw	a3,60(sp)
20401912:	c0ba                	sw	a4,64(sp)
20401914:	c2be                	sw	a5,68(sp)
20401916:	c4c2                	sw	a6,72(sp)
20401918:	c6c6                	sw	a7,76(sp)
2040191a:	5fbff517          	auipc	a0,0x5fbff
2040191e:	e8652503          	lw	a0,-378(a0) # 800007a0 <_impure_ptr>
20401922:	c511                	beqz	a0,2040192e <iprintf+0x2a>
20401924:	4d1c                	lw	a5,24(a0)
20401926:	e781                	bnez	a5,2040192e <iprintf+0x2a>
20401928:	c62a                	sw	a0,12(sp)
2040192a:	2981                	jal	20401d7a <__sinit>
2040192c:	4532                	lw	a0,12(sp)
2040192e:	450c                	lw	a1,8(a0)
20401930:	1854                	addi	a3,sp,52
20401932:	8622                	mv	a2,s0
20401934:	ce36                	sw	a3,28(sp)
20401936:	3b15                	jal	2040166a <_vfiprintf_r>
20401938:	50b2                	lw	ra,44(sp)
2040193a:	5422                	lw	s0,40(sp)
2040193c:	6161                	addi	sp,sp,80
2040193e:	8082                	ret

20401940 <__swbuf_r>:
__swbuf_r():
20401940:	1101                	addi	sp,sp,-32
20401942:	cc22                	sw	s0,24(sp)
20401944:	ca26                	sw	s1,20(sp)
20401946:	c84a                	sw	s2,16(sp)
20401948:	ce06                	sw	ra,28(sp)
2040194a:	c64e                	sw	s3,12(sp)
2040194c:	84aa                	mv	s1,a0
2040194e:	892e                	mv	s2,a1
20401950:	8432                	mv	s0,a2
20401952:	c501                	beqz	a0,2040195a <__swbuf_r+0x1a>
20401954:	4d1c                	lw	a5,24(a0)
20401956:	e391                	bnez	a5,2040195a <__swbuf_r+0x1a>
20401958:	210d                	jal	20401d7a <__sinit>
2040195a:	fffff797          	auipc	a5,0xfffff
2040195e:	bc678793          	addi	a5,a5,-1082 # 20400520 <__sf_fake_stdin>
20401962:	06f41963          	bne	s0,a5,204019d4 <__swbuf_r+0x94>
20401966:	40c0                	lw	s0,4(s1)
20401968:	4c1c                	lw	a5,24(s0)
2040196a:	c41c                	sw	a5,8(s0)
2040196c:	00c45783          	lhu	a5,12(s0)
20401970:	8ba1                	andi	a5,a5,8
20401972:	c3c9                	beqz	a5,204019f4 <__swbuf_r+0xb4>
20401974:	481c                	lw	a5,16(s0)
20401976:	cfbd                	beqz	a5,204019f4 <__swbuf_r+0xb4>
20401978:	481c                	lw	a5,16(s0)
2040197a:	4008                	lw	a0,0(s0)
2040197c:	0ff97993          	zext.b	s3,s2
20401980:	0ff97913          	zext.b	s2,s2
20401984:	8d1d                	sub	a0,a0,a5
20401986:	485c                	lw	a5,20(s0)
20401988:	00f54663          	blt	a0,a5,20401994 <__swbuf_r+0x54>
2040198c:	85a2                	mv	a1,s0
2040198e:	8526                	mv	a0,s1
20401990:	2cc1                	jal	20401c60 <_fflush_r>
20401992:	e52d                	bnez	a0,204019fc <__swbuf_r+0xbc>
20401994:	441c                	lw	a5,8(s0)
20401996:	0505                	addi	a0,a0,1
20401998:	17fd                	addi	a5,a5,-1
2040199a:	c41c                	sw	a5,8(s0)
2040199c:	401c                	lw	a5,0(s0)
2040199e:	00178713          	addi	a4,a5,1
204019a2:	c018                	sw	a4,0(s0)
204019a4:	01378023          	sb	s3,0(a5)
204019a8:	485c                	lw	a5,20(s0)
204019aa:	00a78963          	beq	a5,a0,204019bc <__swbuf_r+0x7c>
204019ae:	00c45783          	lhu	a5,12(s0)
204019b2:	8b85                	andi	a5,a5,1
204019b4:	cb81                	beqz	a5,204019c4 <__swbuf_r+0x84>
204019b6:	47a9                	li	a5,10
204019b8:	00f91663          	bne	s2,a5,204019c4 <__swbuf_r+0x84>
204019bc:	85a2                	mv	a1,s0
204019be:	8526                	mv	a0,s1
204019c0:	2445                	jal	20401c60 <_fflush_r>
204019c2:	ed0d                	bnez	a0,204019fc <__swbuf_r+0xbc>
204019c4:	40f2                	lw	ra,28(sp)
204019c6:	4462                	lw	s0,24(sp)
204019c8:	44d2                	lw	s1,20(sp)
204019ca:	49b2                	lw	s3,12(sp)
204019cc:	854a                	mv	a0,s2
204019ce:	4942                	lw	s2,16(sp)
204019d0:	6105                	addi	sp,sp,32
204019d2:	8082                	ret
204019d4:	fffff797          	auipc	a5,0xfffff
204019d8:	b6c78793          	addi	a5,a5,-1172 # 20400540 <__sf_fake_stdout>
204019dc:	00f41463          	bne	s0,a5,204019e4 <__swbuf_r+0xa4>
204019e0:	4480                	lw	s0,8(s1)
204019e2:	b759                	j	20401968 <__swbuf_r+0x28>
204019e4:	fffff797          	auipc	a5,0xfffff
204019e8:	b1c78793          	addi	a5,a5,-1252 # 20400500 <__sf_fake_stderr>
204019ec:	f6f41ee3          	bne	s0,a5,20401968 <__swbuf_r+0x28>
204019f0:	44c0                	lw	s0,12(s1)
204019f2:	bf9d                	j	20401968 <__swbuf_r+0x28>
204019f4:	85a2                	mv	a1,s0
204019f6:	8526                	mv	a0,s1
204019f8:	2021                	jal	20401a00 <__swsetup_r>
204019fa:	dd3d                	beqz	a0,20401978 <__swbuf_r+0x38>
204019fc:	597d                	li	s2,-1
204019fe:	b7d9                	j	204019c4 <__swbuf_r+0x84>

20401a00 <__swsetup_r>:
__swsetup_r():
20401a00:	1141                	addi	sp,sp,-16
20401a02:	c422                	sw	s0,8(sp)
20401a04:	c226                	sw	s1,4(sp)
20401a06:	c04a                	sw	s2,0(sp)
20401a08:	c606                	sw	ra,12(sp)
20401a0a:	5fbff497          	auipc	s1,0x5fbff
20401a0e:	d964a483          	lw	s1,-618(s1) # 800007a0 <_impure_ptr>
20401a12:	892a                	mv	s2,a0
20401a14:	842e                	mv	s0,a1
20401a16:	c489                	beqz	s1,20401a20 <__swsetup_r+0x20>
20401a18:	4c9c                	lw	a5,24(s1)
20401a1a:	e399                	bnez	a5,20401a20 <__swsetup_r+0x20>
20401a1c:	8526                	mv	a0,s1
20401a1e:	2eb1                	jal	20401d7a <__sinit>
20401a20:	fffff797          	auipc	a5,0xfffff
20401a24:	b0078793          	addi	a5,a5,-1280 # 20400520 <__sf_fake_stdin>
20401a28:	02f41763          	bne	s0,a5,20401a56 <__swsetup_r+0x56>
20401a2c:	40c0                	lw	s0,4(s1)
20401a2e:	00c41783          	lh	a5,12(s0)
20401a32:	01079713          	slli	a4,a5,0x10
20401a36:	0087f693          	andi	a3,a5,8
20401a3a:	8341                	srli	a4,a4,0x10
20401a3c:	eaad                	bnez	a3,20401aae <__swsetup_r+0xae>
20401a3e:	01077693          	andi	a3,a4,16
20401a42:	ea95                	bnez	a3,20401a76 <__swsetup_r+0x76>
20401a44:	4725                	li	a4,9
20401a46:	00e92023          	sw	a4,0(s2)
20401a4a:	0407e793          	ori	a5,a5,64
20401a4e:	00f41623          	sh	a5,12(s0)
20401a52:	557d                	li	a0,-1
20401a54:	a871                	j	20401af0 <__swsetup_r+0xf0>
20401a56:	fffff797          	auipc	a5,0xfffff
20401a5a:	aea78793          	addi	a5,a5,-1302 # 20400540 <__sf_fake_stdout>
20401a5e:	00f41463          	bne	s0,a5,20401a66 <__swsetup_r+0x66>
20401a62:	4480                	lw	s0,8(s1)
20401a64:	b7e9                	j	20401a2e <__swsetup_r+0x2e>
20401a66:	fffff797          	auipc	a5,0xfffff
20401a6a:	a9a78793          	addi	a5,a5,-1382 # 20400500 <__sf_fake_stderr>
20401a6e:	fcf410e3          	bne	s0,a5,20401a2e <__swsetup_r+0x2e>
20401a72:	44c0                	lw	s0,12(s1)
20401a74:	bf6d                	j	20401a2e <__swsetup_r+0x2e>
20401a76:	8b11                	andi	a4,a4,4
20401a78:	c70d                	beqz	a4,20401aa2 <__swsetup_r+0xa2>
20401a7a:	584c                	lw	a1,52(s0)
20401a7c:	c989                	beqz	a1,20401a8e <__swsetup_r+0x8e>
20401a7e:	04440793          	addi	a5,s0,68
20401a82:	00f58463          	beq	a1,a5,20401a8a <__swsetup_r+0x8a>
20401a86:	854a                	mv	a0,s2
20401a88:	2d39                	jal	204020a6 <_free_r>
20401a8a:	02042a23          	sw	zero,52(s0)
20401a8e:	00c45783          	lhu	a5,12(s0)
20401a92:	00042223          	sw	zero,4(s0)
20401a96:	fdb7f793          	andi	a5,a5,-37
20401a9a:	00f41623          	sh	a5,12(s0)
20401a9e:	481c                	lw	a5,16(s0)
20401aa0:	c01c                	sw	a5,0(s0)
20401aa2:	00c45783          	lhu	a5,12(s0)
20401aa6:	0087e793          	ori	a5,a5,8
20401aaa:	00f41623          	sh	a5,12(s0)
20401aae:	481c                	lw	a5,16(s0)
20401ab0:	ef81                	bnez	a5,20401ac8 <__swsetup_r+0xc8>
20401ab2:	00c45783          	lhu	a5,12(s0)
20401ab6:	20000713          	li	a4,512
20401aba:	2807f793          	andi	a5,a5,640
20401abe:	00e78563          	beq	a5,a4,20401ac8 <__swsetup_r+0xc8>
20401ac2:	85a2                	mv	a1,s0
20401ac4:	854a                	mv	a0,s2
20401ac6:	2141                	jal	20401f46 <__smakebuf_r>
20401ac8:	00c41783          	lh	a5,12(s0)
20401acc:	01079713          	slli	a4,a5,0x10
20401ad0:	0017f693          	andi	a3,a5,1
20401ad4:	8341                	srli	a4,a4,0x10
20401ad6:	c29d                	beqz	a3,20401afc <__swsetup_r+0xfc>
20401ad8:	4854                	lw	a3,20(s0)
20401ada:	00042423          	sw	zero,8(s0)
20401ade:	40d006b3          	neg	a3,a3
20401ae2:	cc14                	sw	a3,24(s0)
20401ae4:	4814                	lw	a3,16(s0)
20401ae6:	4501                	li	a0,0
20401ae8:	e681                	bnez	a3,20401af0 <__swsetup_r+0xf0>
20401aea:	08077713          	andi	a4,a4,128
20401aee:	ff31                	bnez	a4,20401a4a <__swsetup_r+0x4a>
20401af0:	40b2                	lw	ra,12(sp)
20401af2:	4422                	lw	s0,8(sp)
20401af4:	4492                	lw	s1,4(sp)
20401af6:	4902                	lw	s2,0(sp)
20401af8:	0141                	addi	sp,sp,16
20401afa:	8082                	ret
20401afc:	00277693          	andi	a3,a4,2
20401b00:	4601                	li	a2,0
20401b02:	e291                	bnez	a3,20401b06 <__swsetup_r+0x106>
20401b04:	4850                	lw	a2,20(s0)
20401b06:	c410                	sw	a2,8(s0)
20401b08:	bff1                	j	20401ae4 <__swsetup_r+0xe4>

20401b0a <abort>:
abort():
20401b0a:	1141                	addi	sp,sp,-16
20401b0c:	4519                	li	a0,6
20401b0e:	c606                	sw	ra,12(sp)
20401b10:	321000ef          	jal	ra,20402630 <raise>
20401b14:	4505                	li	a0,1
20401b16:	55b000ef          	jal	ra,20402870 <_exit>

20401b1a <__sflush_r>:
__sflush_r():
20401b1a:	00c5d783          	lhu	a5,12(a1)
20401b1e:	1101                	addi	sp,sp,-32
20401b20:	cc22                	sw	s0,24(sp)
20401b22:	ca26                	sw	s1,20(sp)
20401b24:	ce06                	sw	ra,28(sp)
20401b26:	c84a                	sw	s2,16(sp)
20401b28:	c64e                	sw	s3,12(sp)
20401b2a:	0087f713          	andi	a4,a5,8
20401b2e:	84aa                	mv	s1,a0
20401b30:	842e                	mv	s0,a1
20401b32:	e375                	bnez	a4,20401c16 <__sflush_r+0xfc>
20401b34:	41d8                	lw	a4,4(a1)
20401b36:	00e04763          	bgtz	a4,20401b44 <__sflush_r+0x2a>
20401b3a:	41b8                	lw	a4,64(a1)
20401b3c:	00e04463          	bgtz	a4,20401b44 <__sflush_r+0x2a>
20401b40:	4501                	li	a0,0
20401b42:	a875                	j	20401bfe <__sflush_r+0xe4>
20401b44:	5458                	lw	a4,44(s0)
20401b46:	df6d                	beqz	a4,20401b40 <__sflush_r+0x26>
20401b48:	6685                	lui	a3,0x1
20401b4a:	0004a903          	lw	s2,0(s1)
20401b4e:	8ff5                	and	a5,a5,a3
20401b50:	0004a023          	sw	zero,0(s1)
20401b54:	cfa5                	beqz	a5,20401bcc <__sflush_r+0xb2>
20401b56:	4868                	lw	a0,84(s0)
20401b58:	00c45783          	lhu	a5,12(s0)
20401b5c:	8b91                	andi	a5,a5,4
20401b5e:	c799                	beqz	a5,20401b6c <__sflush_r+0x52>
20401b60:	405c                	lw	a5,4(s0)
20401b62:	8d1d                	sub	a0,a0,a5
20401b64:	585c                	lw	a5,52(s0)
20401b66:	c399                	beqz	a5,20401b6c <__sflush_r+0x52>
20401b68:	403c                	lw	a5,64(s0)
20401b6a:	8d1d                	sub	a0,a0,a5
20401b6c:	545c                	lw	a5,44(s0)
20401b6e:	500c                	lw	a1,32(s0)
20401b70:	862a                	mv	a2,a0
20401b72:	4681                	li	a3,0
20401b74:	8526                	mv	a0,s1
20401b76:	9782                	jalr	a5
20401b78:	57fd                	li	a5,-1
20401b7a:	00c45703          	lhu	a4,12(s0)
20401b7e:	00f51d63          	bne	a0,a5,20401b98 <__sflush_r+0x7e>
20401b82:	4094                	lw	a3,0(s1)
20401b84:	47f5                	li	a5,29
20401b86:	08d7e363          	bltu	a5,a3,20401c0c <__sflush_r+0xf2>
20401b8a:	204007b7          	lui	a5,0x20400
20401b8e:	0785                	addi	a5,a5,1
20401b90:	00d7d7b3          	srl	a5,a5,a3
20401b94:	8b85                	andi	a5,a5,1
20401b96:	cbbd                	beqz	a5,20401c0c <__sflush_r+0xf2>
20401b98:	481c                	lw	a5,16(s0)
20401b9a:	00042223          	sw	zero,4(s0)
20401b9e:	c01c                	sw	a5,0(s0)
20401ba0:	6785                	lui	a5,0x1
20401ba2:	8f7d                	and	a4,a4,a5
20401ba4:	c719                	beqz	a4,20401bb2 <__sflush_r+0x98>
20401ba6:	57fd                	li	a5,-1
20401ba8:	00f51463          	bne	a0,a5,20401bb0 <__sflush_r+0x96>
20401bac:	409c                	lw	a5,0(s1)
20401bae:	e391                	bnez	a5,20401bb2 <__sflush_r+0x98>
20401bb0:	c868                	sw	a0,84(s0)
20401bb2:	584c                	lw	a1,52(s0)
20401bb4:	0124a023          	sw	s2,0(s1)
20401bb8:	d5c1                	beqz	a1,20401b40 <__sflush_r+0x26>
20401bba:	04440793          	addi	a5,s0,68
20401bbe:	00f58463          	beq	a1,a5,20401bc6 <__sflush_r+0xac>
20401bc2:	8526                	mv	a0,s1
20401bc4:	21cd                	jal	204020a6 <_free_r>
20401bc6:	02042a23          	sw	zero,52(s0)
20401bca:	bf9d                	j	20401b40 <__sflush_r+0x26>
20401bcc:	500c                	lw	a1,32(s0)
20401bce:	4685                	li	a3,1
20401bd0:	4601                	li	a2,0
20401bd2:	8526                	mv	a0,s1
20401bd4:	9702                	jalr	a4
20401bd6:	57fd                	li	a5,-1
20401bd8:	f8f510e3          	bne	a0,a5,20401b58 <__sflush_r+0x3e>
20401bdc:	409c                	lw	a5,0(s1)
20401bde:	dfad                	beqz	a5,20401b58 <__sflush_r+0x3e>
20401be0:	4775                	li	a4,29
20401be2:	00e78563          	beq	a5,a4,20401bec <__sflush_r+0xd2>
20401be6:	4759                	li	a4,22
20401be8:	00e79563          	bne	a5,a4,20401bf2 <__sflush_r+0xd8>
20401bec:	0124a023          	sw	s2,0(s1)
20401bf0:	bf81                	j	20401b40 <__sflush_r+0x26>
20401bf2:	00c45783          	lhu	a5,12(s0)
20401bf6:	0407e793          	ori	a5,a5,64
20401bfa:	00f41623          	sh	a5,12(s0)
20401bfe:	40f2                	lw	ra,28(sp)
20401c00:	4462                	lw	s0,24(sp)
20401c02:	44d2                	lw	s1,20(sp)
20401c04:	4942                	lw	s2,16(sp)
20401c06:	49b2                	lw	s3,12(sp)
20401c08:	6105                	addi	sp,sp,32
20401c0a:	8082                	ret
20401c0c:	04076713          	ori	a4,a4,64
20401c10:	00e41623          	sh	a4,12(s0)
20401c14:	b7ed                	j	20401bfe <__sflush_r+0xe4>
20401c16:	0105a983          	lw	s3,16(a1)
20401c1a:	f20983e3          	beqz	s3,20401b40 <__sflush_r+0x26>
20401c1e:	0005a903          	lw	s2,0(a1)
20401c22:	8b8d                	andi	a5,a5,3
20401c24:	0135a023          	sw	s3,0(a1)
20401c28:	41390933          	sub	s2,s2,s3
20401c2c:	4701                	li	a4,0
20401c2e:	e391                	bnez	a5,20401c32 <__sflush_r+0x118>
20401c30:	49d8                	lw	a4,20(a1)
20401c32:	c418                	sw	a4,8(s0)
20401c34:	f12056e3          	blez	s2,20401b40 <__sflush_r+0x26>
20401c38:	541c                	lw	a5,40(s0)
20401c3a:	500c                	lw	a1,32(s0)
20401c3c:	86ca                	mv	a3,s2
20401c3e:	864e                	mv	a2,s3
20401c40:	8526                	mv	a0,s1
20401c42:	9782                	jalr	a5
20401c44:	00a04a63          	bgtz	a0,20401c58 <__sflush_r+0x13e>
20401c48:	00c45783          	lhu	a5,12(s0)
20401c4c:	557d                	li	a0,-1
20401c4e:	0407e793          	ori	a5,a5,64
20401c52:	00f41623          	sh	a5,12(s0)
20401c56:	b765                	j	20401bfe <__sflush_r+0xe4>
20401c58:	99aa                	add	s3,s3,a0
20401c5a:	40a90933          	sub	s2,s2,a0
20401c5e:	bfd9                	j	20401c34 <__sflush_r+0x11a>

20401c60 <_fflush_r>:
_fflush_r():
20401c60:	499c                	lw	a5,16(a1)
20401c62:	cfb9                	beqz	a5,20401cc0 <_fflush_r+0x60>
20401c64:	1101                	addi	sp,sp,-32
20401c66:	cc22                	sw	s0,24(sp)
20401c68:	ce06                	sw	ra,28(sp)
20401c6a:	842a                	mv	s0,a0
20401c6c:	c511                	beqz	a0,20401c78 <_fflush_r+0x18>
20401c6e:	4d1c                	lw	a5,24(a0)
20401c70:	e781                	bnez	a5,20401c78 <_fflush_r+0x18>
20401c72:	c62e                	sw	a1,12(sp)
20401c74:	2219                	jal	20401d7a <__sinit>
20401c76:	45b2                	lw	a1,12(sp)
20401c78:	fffff797          	auipc	a5,0xfffff
20401c7c:	8a878793          	addi	a5,a5,-1880 # 20400520 <__sf_fake_stdin>
20401c80:	00f59b63          	bne	a1,a5,20401c96 <_fflush_r+0x36>
20401c84:	404c                	lw	a1,4(s0)
20401c86:	00c59783          	lh	a5,12(a1)
20401c8a:	c795                	beqz	a5,20401cb6 <_fflush_r+0x56>
20401c8c:	8522                	mv	a0,s0
20401c8e:	4462                	lw	s0,24(sp)
20401c90:	40f2                	lw	ra,28(sp)
20401c92:	6105                	addi	sp,sp,32
20401c94:	b559                	j	20401b1a <__sflush_r>
20401c96:	fffff797          	auipc	a5,0xfffff
20401c9a:	8aa78793          	addi	a5,a5,-1878 # 20400540 <__sf_fake_stdout>
20401c9e:	00f59463          	bne	a1,a5,20401ca6 <_fflush_r+0x46>
20401ca2:	440c                	lw	a1,8(s0)
20401ca4:	b7cd                	j	20401c86 <_fflush_r+0x26>
20401ca6:	fffff797          	auipc	a5,0xfffff
20401caa:	85a78793          	addi	a5,a5,-1958 # 20400500 <__sf_fake_stderr>
20401cae:	fcf59ce3          	bne	a1,a5,20401c86 <_fflush_r+0x26>
20401cb2:	444c                	lw	a1,12(s0)
20401cb4:	bfc9                	j	20401c86 <_fflush_r+0x26>
20401cb6:	40f2                	lw	ra,28(sp)
20401cb8:	4462                	lw	s0,24(sp)
20401cba:	4501                	li	a0,0
20401cbc:	6105                	addi	sp,sp,32
20401cbe:	8082                	ret
20401cc0:	4501                	li	a0,0
20401cc2:	8082                	ret

20401cc4 <std>:
std():
20401cc4:	1141                	addi	sp,sp,-16
20401cc6:	c422                	sw	s0,8(sp)
20401cc8:	c606                	sw	ra,12(sp)
20401cca:	842a                	mv	s0,a0
20401ccc:	00b51623          	sh	a1,12(a0)
20401cd0:	00c51723          	sh	a2,14(a0)
20401cd4:	00052023          	sw	zero,0(a0)
20401cd8:	00052223          	sw	zero,4(a0)
20401cdc:	00052423          	sw	zero,8(a0)
20401ce0:	06052223          	sw	zero,100(a0)
20401ce4:	00052823          	sw	zero,16(a0)
20401ce8:	00052a23          	sw	zero,20(a0)
20401cec:	00052c23          	sw	zero,24(a0)
20401cf0:	4621                	li	a2,8
20401cf2:	4581                	li	a1,0
20401cf4:	05c50513          	addi	a0,a0,92
20401cf8:	2619                	jal	20401ffe <memset>
20401cfa:	00001797          	auipc	a5,0x1
20401cfe:	97478793          	addi	a5,a5,-1676 # 2040266e <__sread>
20401d02:	d05c                	sw	a5,36(s0)
20401d04:	00001797          	auipc	a5,0x1
20401d08:	99a78793          	addi	a5,a5,-1638 # 2040269e <__swrite>
20401d0c:	d41c                	sw	a5,40(s0)
20401d0e:	00001797          	auipc	a5,0x1
20401d12:	9de78793          	addi	a5,a5,-1570 # 204026ec <__sseek>
20401d16:	d45c                	sw	a5,44(s0)
20401d18:	00001797          	auipc	a5,0x1
20401d1c:	a0a78793          	addi	a5,a5,-1526 # 20402722 <__sclose>
20401d20:	40b2                	lw	ra,12(sp)
20401d22:	d000                	sw	s0,32(s0)
20401d24:	d81c                	sw	a5,48(s0)
20401d26:	4422                	lw	s0,8(sp)
20401d28:	0141                	addi	sp,sp,16
20401d2a:	8082                	ret

20401d2c <_cleanup_r>:
_cleanup_r():
20401d2c:	00000597          	auipc	a1,0x0
20401d30:	f3458593          	addi	a1,a1,-204 # 20401c60 <_fflush_r>
20401d34:	a2b1                	j	20401e80 <_fwalk_reent>

20401d36 <__sfmoreglue>:
__sfmoreglue():
20401d36:	1141                	addi	sp,sp,-16
20401d38:	c226                	sw	s1,4(sp)
20401d3a:	06800613          	li	a2,104
20401d3e:	fff58493          	addi	s1,a1,-1
20401d42:	02c484b3          	mul	s1,s1,a2
20401d46:	c04a                	sw	s2,0(sp)
20401d48:	892e                	mv	s2,a1
20401d4a:	c422                	sw	s0,8(sp)
20401d4c:	c606                	sw	ra,12(sp)
20401d4e:	07448593          	addi	a1,s1,116
20401d52:	2eed                	jal	2040214c <_malloc_r>
20401d54:	842a                	mv	s0,a0
20401d56:	c919                	beqz	a0,20401d6c <__sfmoreglue+0x36>
20401d58:	00052023          	sw	zero,0(a0)
20401d5c:	01252223          	sw	s2,4(a0)
20401d60:	0531                	addi	a0,a0,12
20401d62:	c408                	sw	a0,8(s0)
20401d64:	06848613          	addi	a2,s1,104
20401d68:	4581                	li	a1,0
20401d6a:	2c51                	jal	20401ffe <memset>
20401d6c:	40b2                	lw	ra,12(sp)
20401d6e:	8522                	mv	a0,s0
20401d70:	4422                	lw	s0,8(sp)
20401d72:	4492                	lw	s1,4(sp)
20401d74:	4902                	lw	s2,0(sp)
20401d76:	0141                	addi	sp,sp,16
20401d78:	8082                	ret

20401d7a <__sinit>:
__sinit():
20401d7a:	4d1c                	lw	a5,24(a0)
20401d7c:	e3bd                	bnez	a5,20401de2 <__sinit+0x68>
20401d7e:	1141                	addi	sp,sp,-16
20401d80:	c422                	sw	s0,8(sp)
20401d82:	c606                	sw	ra,12(sp)
20401d84:	00000797          	auipc	a5,0x0
20401d88:	fa878793          	addi	a5,a5,-88 # 20401d2c <_cleanup_r>
20401d8c:	d51c                	sw	a5,40(a0)
20401d8e:	04052423          	sw	zero,72(a0)
20401d92:	04052623          	sw	zero,76(a0)
20401d96:	04052823          	sw	zero,80(a0)
20401d9a:	fffff797          	auipc	a5,0xfffff
20401d9e:	3967a783          	lw	a5,918(a5) # 20401130 <_global_impure_ptr>
20401da2:	842a                	mv	s0,a0
20401da4:	00f51463          	bne	a0,a5,20401dac <__sinit+0x32>
20401da8:	4785                	li	a5,1
20401daa:	cd1c                	sw	a5,24(a0)
20401dac:	8522                	mv	a0,s0
20401dae:	281d                	jal	20401de4 <__sfp>
20401db0:	c048                	sw	a0,4(s0)
20401db2:	8522                	mv	a0,s0
20401db4:	2805                	jal	20401de4 <__sfp>
20401db6:	c408                	sw	a0,8(s0)
20401db8:	8522                	mv	a0,s0
20401dba:	202d                	jal	20401de4 <__sfp>
20401dbc:	c448                	sw	a0,12(s0)
20401dbe:	4048                	lw	a0,4(s0)
20401dc0:	4601                	li	a2,0
20401dc2:	4591                	li	a1,4
20401dc4:	3701                	jal	20401cc4 <std>
20401dc6:	4408                	lw	a0,8(s0)
20401dc8:	4605                	li	a2,1
20401dca:	45a5                	li	a1,9
20401dcc:	3de5                	jal	20401cc4 <std>
20401dce:	4448                	lw	a0,12(s0)
20401dd0:	4609                	li	a2,2
20401dd2:	45c9                	li	a1,18
20401dd4:	3dc5                	jal	20401cc4 <std>
20401dd6:	4785                	li	a5,1
20401dd8:	40b2                	lw	ra,12(sp)
20401dda:	cc1c                	sw	a5,24(s0)
20401ddc:	4422                	lw	s0,8(sp)
20401dde:	0141                	addi	sp,sp,16
20401de0:	8082                	ret
20401de2:	8082                	ret

20401de4 <__sfp>:
__sfp():
20401de4:	1141                	addi	sp,sp,-16
20401de6:	c226                	sw	s1,4(sp)
20401de8:	fffff497          	auipc	s1,0xfffff
20401dec:	3484a483          	lw	s1,840(s1) # 20401130 <_global_impure_ptr>
20401df0:	4c9c                	lw	a5,24(s1)
20401df2:	c04a                	sw	s2,0(sp)
20401df4:	c606                	sw	ra,12(sp)
20401df6:	c422                	sw	s0,8(sp)
20401df8:	892a                	mv	s2,a0
20401dfa:	e399                	bnez	a5,20401e00 <__sfp+0x1c>
20401dfc:	8526                	mv	a0,s1
20401dfe:	3fb5                	jal	20401d7a <__sinit>
20401e00:	04848493          	addi	s1,s1,72
20401e04:	4480                	lw	s0,8(s1)
20401e06:	40dc                	lw	a5,4(s1)
20401e08:	17fd                	addi	a5,a5,-1
20401e0a:	0007d663          	bgez	a5,20401e16 <__sfp+0x32>
20401e0e:	409c                	lw	a5,0(s1)
20401e10:	cfb1                	beqz	a5,20401e6c <__sfp+0x88>
20401e12:	4084                	lw	s1,0(s1)
20401e14:	bfc5                	j	20401e04 <__sfp+0x20>
20401e16:	00c41703          	lh	a4,12(s0)
20401e1a:	e731                	bnez	a4,20401e66 <__sfp+0x82>
20401e1c:	77c1                	lui	a5,0xffff0
20401e1e:	0785                	addi	a5,a5,1
20401e20:	06042223          	sw	zero,100(s0)
20401e24:	00042023          	sw	zero,0(s0)
20401e28:	00042223          	sw	zero,4(s0)
20401e2c:	00042423          	sw	zero,8(s0)
20401e30:	c45c                	sw	a5,12(s0)
20401e32:	00042823          	sw	zero,16(s0)
20401e36:	00042a23          	sw	zero,20(s0)
20401e3a:	00042c23          	sw	zero,24(s0)
20401e3e:	4621                	li	a2,8
20401e40:	4581                	li	a1,0
20401e42:	05c40513          	addi	a0,s0,92
20401e46:	2a65                	jal	20401ffe <memset>
20401e48:	02042a23          	sw	zero,52(s0)
20401e4c:	02042c23          	sw	zero,56(s0)
20401e50:	04042423          	sw	zero,72(s0)
20401e54:	04042623          	sw	zero,76(s0)
20401e58:	40b2                	lw	ra,12(sp)
20401e5a:	8522                	mv	a0,s0
20401e5c:	4422                	lw	s0,8(sp)
20401e5e:	4492                	lw	s1,4(sp)
20401e60:	4902                	lw	s2,0(sp)
20401e62:	0141                	addi	sp,sp,16
20401e64:	8082                	ret
20401e66:	06840413          	addi	s0,s0,104
20401e6a:	bf79                	j	20401e08 <__sfp+0x24>
20401e6c:	4591                	li	a1,4
20401e6e:	854a                	mv	a0,s2
20401e70:	35d9                	jal	20401d36 <__sfmoreglue>
20401e72:	c088                	sw	a0,0(s1)
20401e74:	842a                	mv	s0,a0
20401e76:	fd51                	bnez	a0,20401e12 <__sfp+0x2e>
20401e78:	47b1                	li	a5,12
20401e7a:	00f92023          	sw	a5,0(s2)
20401e7e:	bfe9                	j	20401e58 <__sfp+0x74>

20401e80 <_fwalk_reent>:
_fwalk_reent():
20401e80:	7179                	addi	sp,sp,-48
20401e82:	d422                	sw	s0,40(sp)
20401e84:	d04a                	sw	s2,32(sp)
20401e86:	ce4e                	sw	s3,28(sp)
20401e88:	cc52                	sw	s4,24(sp)
20401e8a:	c85a                	sw	s6,16(sp)
20401e8c:	c65e                	sw	s7,12(sp)
20401e8e:	d606                	sw	ra,44(sp)
20401e90:	d226                	sw	s1,36(sp)
20401e92:	ca56                	sw	s5,20(sp)
20401e94:	892a                	mv	s2,a0
20401e96:	8a2e                	mv	s4,a1
20401e98:	04850413          	addi	s0,a0,72
20401e9c:	4981                	li	s3,0
20401e9e:	4b05                	li	s6,1
20401ea0:	5bfd                	li	s7,-1
20401ea2:	4404                	lw	s1,8(s0)
20401ea4:	00442a83          	lw	s5,4(s0)
20401ea8:	1afd                	addi	s5,s5,-1
20401eaa:	020ad063          	bgez	s5,20401eca <_fwalk_reent+0x4a>
20401eae:	4000                	lw	s0,0(s0)
20401eb0:	f86d                	bnez	s0,20401ea2 <_fwalk_reent+0x22>
20401eb2:	50b2                	lw	ra,44(sp)
20401eb4:	5422                	lw	s0,40(sp)
20401eb6:	5492                	lw	s1,36(sp)
20401eb8:	5902                	lw	s2,32(sp)
20401eba:	4a62                	lw	s4,24(sp)
20401ebc:	4ad2                	lw	s5,20(sp)
20401ebe:	4b42                	lw	s6,16(sp)
20401ec0:	4bb2                	lw	s7,12(sp)
20401ec2:	854e                	mv	a0,s3
20401ec4:	49f2                	lw	s3,28(sp)
20401ec6:	6145                	addi	sp,sp,48
20401ec8:	8082                	ret
20401eca:	00c4d783          	lhu	a5,12(s1)
20401ece:	00fb7b63          	bgeu	s6,a5,20401ee4 <_fwalk_reent+0x64>
20401ed2:	00e49783          	lh	a5,14(s1)
20401ed6:	01778763          	beq	a5,s7,20401ee4 <_fwalk_reent+0x64>
20401eda:	85a6                	mv	a1,s1
20401edc:	854a                	mv	a0,s2
20401ede:	9a02                	jalr	s4
20401ee0:	00a9e9b3          	or	s3,s3,a0
20401ee4:	06848493          	addi	s1,s1,104
20401ee8:	b7c1                	j	20401ea8 <_fwalk_reent+0x28>

20401eea <__swhatbuf_r>:
__swhatbuf_r():
20401eea:	7159                	addi	sp,sp,-112
20401eec:	d0ca                	sw	s2,96(sp)
20401eee:	892e                	mv	s2,a1
20401ef0:	00e59583          	lh	a1,14(a1)
20401ef4:	d4a2                	sw	s0,104(sp)
20401ef6:	d2a6                	sw	s1,100(sp)
20401ef8:	d686                	sw	ra,108(sp)
20401efa:	8432                	mv	s0,a2
20401efc:	84b6                	mv	s1,a3
20401efe:	0005dc63          	bgez	a1,20401f16 <__swhatbuf_r+0x2c>
20401f02:	00c91783          	lh	a5,12(s2)
20401f06:	0004a023          	sw	zero,0(s1)
20401f0a:	0807f793          	andi	a5,a5,128
20401f0e:	e395                	bnez	a5,20401f32 <__swhatbuf_r+0x48>
20401f10:	40000793          	li	a5,1024
20401f14:	a00d                	j	20401f36 <__swhatbuf_r+0x4c>
20401f16:	0030                	addi	a2,sp,8
20401f18:	071000ef          	jal	ra,20402788 <_fstat_r>
20401f1c:	fe0543e3          	bltz	a0,20401f02 <__swhatbuf_r+0x18>
20401f20:	4732                	lw	a4,12(sp)
20401f22:	67bd                	lui	a5,0xf
20401f24:	8ff9                	and	a5,a5,a4
20401f26:	7779                	lui	a4,0xffffe
20401f28:	97ba                	add	a5,a5,a4
20401f2a:	0017b793          	seqz	a5,a5
20401f2e:	c09c                	sw	a5,0(s1)
20401f30:	b7c5                	j	20401f10 <__swhatbuf_r+0x26>
20401f32:	04000793          	li	a5,64
20401f36:	50b6                	lw	ra,108(sp)
20401f38:	c01c                	sw	a5,0(s0)
20401f3a:	5426                	lw	s0,104(sp)
20401f3c:	5496                	lw	s1,100(sp)
20401f3e:	5906                	lw	s2,96(sp)
20401f40:	4501                	li	a0,0
20401f42:	6165                	addi	sp,sp,112
20401f44:	8082                	ret

20401f46 <__smakebuf_r>:
__smakebuf_r():
20401f46:	00c5d783          	lhu	a5,12(a1)
20401f4a:	1101                	addi	sp,sp,-32
20401f4c:	cc22                	sw	s0,24(sp)
20401f4e:	ce06                	sw	ra,28(sp)
20401f50:	ca26                	sw	s1,20(sp)
20401f52:	c84a                	sw	s2,16(sp)
20401f54:	8b89                	andi	a5,a5,2
20401f56:	842e                	mv	s0,a1
20401f58:	cf89                	beqz	a5,20401f72 <__smakebuf_r+0x2c>
20401f5a:	04740793          	addi	a5,s0,71
20401f5e:	c01c                	sw	a5,0(s0)
20401f60:	c81c                	sw	a5,16(s0)
20401f62:	4785                	li	a5,1
20401f64:	c85c                	sw	a5,20(s0)
20401f66:	40f2                	lw	ra,28(sp)
20401f68:	4462                	lw	s0,24(sp)
20401f6a:	44d2                	lw	s1,20(sp)
20401f6c:	4942                	lw	s2,16(sp)
20401f6e:	6105                	addi	sp,sp,32
20401f70:	8082                	ret
20401f72:	0074                	addi	a3,sp,12
20401f74:	0030                	addi	a2,sp,8
20401f76:	892a                	mv	s2,a0
20401f78:	3f8d                	jal	20401eea <__swhatbuf_r>
20401f7a:	45a2                	lw	a1,8(sp)
20401f7c:	84aa                	mv	s1,a0
20401f7e:	854a                	mv	a0,s2
20401f80:	22f1                	jal	2040214c <_malloc_r>
20401f82:	ed01                	bnez	a0,20401f9a <__smakebuf_r+0x54>
20401f84:	00c41783          	lh	a5,12(s0)
20401f88:	2007f713          	andi	a4,a5,512
20401f8c:	ff69                	bnez	a4,20401f66 <__smakebuf_r+0x20>
20401f8e:	9bf1                	andi	a5,a5,-4
20401f90:	0027e793          	ori	a5,a5,2
20401f94:	00f41623          	sh	a5,12(s0)
20401f98:	b7c9                	j	20401f5a <__smakebuf_r+0x14>
20401f9a:	00000797          	auipc	a5,0x0
20401f9e:	d9278793          	addi	a5,a5,-622 # 20401d2c <_cleanup_r>
20401fa2:	02f92423          	sw	a5,40(s2)
20401fa6:	00c45783          	lhu	a5,12(s0)
20401faa:	c008                	sw	a0,0(s0)
20401fac:	c808                	sw	a0,16(s0)
20401fae:	0807e793          	ori	a5,a5,128
20401fb2:	00f41623          	sh	a5,12(s0)
20401fb6:	47a2                	lw	a5,8(sp)
20401fb8:	c85c                	sw	a5,20(s0)
20401fba:	47b2                	lw	a5,12(sp)
20401fbc:	cf91                	beqz	a5,20401fd8 <__smakebuf_r+0x92>
20401fbe:	00e41583          	lh	a1,14(s0)
20401fc2:	854a                	mv	a0,s2
20401fc4:	7f4000ef          	jal	ra,204027b8 <_isatty_r>
20401fc8:	c901                	beqz	a0,20401fd8 <__smakebuf_r+0x92>
20401fca:	00c45783          	lhu	a5,12(s0)
20401fce:	9bf1                	andi	a5,a5,-4
20401fd0:	0017e793          	ori	a5,a5,1
20401fd4:	00f41623          	sh	a5,12(s0)
20401fd8:	00c45503          	lhu	a0,12(s0)
20401fdc:	8cc9                	or	s1,s1,a0
20401fde:	00941623          	sh	s1,12(s0)
20401fe2:	b751                	j	20401f66 <__smakebuf_r+0x20>

20401fe4 <memchr>:
memchr():
20401fe4:	0ff5f593          	zext.b	a1,a1
20401fe8:	962a                	add	a2,a2,a0
20401fea:	00c51463          	bne	a0,a2,20401ff2 <memchr+0xe>
20401fee:	4501                	li	a0,0
20401ff0:	8082                	ret
20401ff2:	00054783          	lbu	a5,0(a0)
20401ff6:	feb78de3          	beq	a5,a1,20401ff0 <memchr+0xc>
20401ffa:	0505                	addi	a0,a0,1
20401ffc:	b7fd                	j	20401fea <memchr+0x6>

20401ffe <memset>:
memset():
20401ffe:	433d                	li	t1,15
20402000:	872a                	mv	a4,a0
20402002:	02c37363          	bgeu	t1,a2,20402028 <memset+0x2a>
20402006:	00f77793          	andi	a5,a4,15
2040200a:	efbd                	bnez	a5,20402088 <memset+0x8a>
2040200c:	e5ad                	bnez	a1,20402076 <memset+0x78>
2040200e:	ff067693          	andi	a3,a2,-16
20402012:	8a3d                	andi	a2,a2,15
20402014:	96ba                	add	a3,a3,a4
20402016:	c30c                	sw	a1,0(a4)
20402018:	c34c                	sw	a1,4(a4)
2040201a:	c70c                	sw	a1,8(a4)
2040201c:	c74c                	sw	a1,12(a4)
2040201e:	0741                	addi	a4,a4,16
20402020:	fed76be3          	bltu	a4,a3,20402016 <memset+0x18>
20402024:	e211                	bnez	a2,20402028 <memset+0x2a>
20402026:	8082                	ret
20402028:	40c306b3          	sub	a3,t1,a2
2040202c:	068a                	slli	a3,a3,0x2
2040202e:	00000297          	auipc	t0,0x0
20402032:	9696                	add	a3,a3,t0
20402034:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
20402038:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffcb3e>
2040203c:	00b706a3          	sb	a1,13(a4)
20402040:	00b70623          	sb	a1,12(a4)
20402044:	00b705a3          	sb	a1,11(a4)
20402048:	00b70523          	sb	a1,10(a4)
2040204c:	00b704a3          	sb	a1,9(a4)
20402050:	00b70423          	sb	a1,8(a4)
20402054:	00b703a3          	sb	a1,7(a4)
20402058:	00b70323          	sb	a1,6(a4)
2040205c:	00b702a3          	sb	a1,5(a4)
20402060:	00b70223          	sb	a1,4(a4)
20402064:	00b701a3          	sb	a1,3(a4)
20402068:	00b70123          	sb	a1,2(a4)
2040206c:	00b700a3          	sb	a1,1(a4)
20402070:	00b70023          	sb	a1,0(a4)
20402074:	8082                	ret
20402076:	0ff5f593          	zext.b	a1,a1
2040207a:	00859693          	slli	a3,a1,0x8
2040207e:	8dd5                	or	a1,a1,a3
20402080:	01059693          	slli	a3,a1,0x10
20402084:	8dd5                	or	a1,a1,a3
20402086:	b761                	j	2040200e <memset+0x10>
20402088:	00279693          	slli	a3,a5,0x2
2040208c:	00000297          	auipc	t0,0x0
20402090:	9696                	add	a3,a3,t0
20402092:	8286                	mv	t0,ra
20402094:	fa8680e7          	jalr	-88(a3)
20402098:	8096                	mv	ra,t0
2040209a:	17c1                	addi	a5,a5,-16
2040209c:	8f1d                	sub	a4,a4,a5
2040209e:	963e                	add	a2,a2,a5
204020a0:	f8c374e3          	bgeu	t1,a2,20402028 <memset+0x2a>
204020a4:	b7a5                	j	2040200c <memset+0xe>

204020a6 <_free_r>:
_free_r():
204020a6:	c1d5                	beqz	a1,2040214a <_free_r+0xa4>
204020a8:	ffc5a783          	lw	a5,-4(a1)
204020ac:	1101                	addi	sp,sp,-32
204020ae:	cc22                	sw	s0,24(sp)
204020b0:	ce06                	sw	ra,28(sp)
204020b2:	ffc58413          	addi	s0,a1,-4
204020b6:	0007d363          	bgez	a5,204020bc <_free_r+0x16>
204020ba:	943e                	add	s0,s0,a5
204020bc:	c62a                	sw	a0,12(sp)
204020be:	75a000ef          	jal	ra,20402818 <__malloc_lock>
204020c2:	5fbfe717          	auipc	a4,0x5fbfe
204020c6:	70670713          	addi	a4,a4,1798 # 800007c8 <__malloc_free_list>
204020ca:	431c                	lw	a5,0(a4)
204020cc:	4532                	lw	a0,12(sp)
204020ce:	eb89                	bnez	a5,204020e0 <_free_r+0x3a>
204020d0:	00042223          	sw	zero,4(s0)
204020d4:	c300                	sw	s0,0(a4)
204020d6:	4462                	lw	s0,24(sp)
204020d8:	40f2                	lw	ra,28(sp)
204020da:	6105                	addi	sp,sp,32
204020dc:	73e0006f          	j	2040281a <__malloc_unlock>
204020e0:	00f47d63          	bgeu	s0,a5,204020fa <_free_r+0x54>
204020e4:	4010                	lw	a2,0(s0)
204020e6:	00c406b3          	add	a3,s0,a2
204020ea:	00d79663          	bne	a5,a3,204020f6 <_free_r+0x50>
204020ee:	4394                	lw	a3,0(a5)
204020f0:	43dc                	lw	a5,4(a5)
204020f2:	96b2                	add	a3,a3,a2
204020f4:	c014                	sw	a3,0(s0)
204020f6:	c05c                	sw	a5,4(s0)
204020f8:	bff1                	j	204020d4 <_free_r+0x2e>
204020fa:	873e                	mv	a4,a5
204020fc:	43dc                	lw	a5,4(a5)
204020fe:	c399                	beqz	a5,20402104 <_free_r+0x5e>
20402100:	fef47de3          	bgeu	s0,a5,204020fa <_free_r+0x54>
20402104:	4314                	lw	a3,0(a4)
20402106:	00d70633          	add	a2,a4,a3
2040210a:	00861f63          	bne	a2,s0,20402128 <_free_r+0x82>
2040210e:	4010                	lw	a2,0(s0)
20402110:	96b2                	add	a3,a3,a2
20402112:	c314                	sw	a3,0(a4)
20402114:	00d70633          	add	a2,a4,a3
20402118:	fac79fe3          	bne	a5,a2,204020d6 <_free_r+0x30>
2040211c:	4390                	lw	a2,0(a5)
2040211e:	43dc                	lw	a5,4(a5)
20402120:	96b2                	add	a3,a3,a2
20402122:	c314                	sw	a3,0(a4)
20402124:	c35c                	sw	a5,4(a4)
20402126:	bf45                	j	204020d6 <_free_r+0x30>
20402128:	00c47563          	bgeu	s0,a2,20402132 <_free_r+0x8c>
2040212c:	47b1                	li	a5,12
2040212e:	c11c                	sw	a5,0(a0)
20402130:	b75d                	j	204020d6 <_free_r+0x30>
20402132:	4010                	lw	a2,0(s0)
20402134:	00c406b3          	add	a3,s0,a2
20402138:	00d79663          	bne	a5,a3,20402144 <_free_r+0x9e>
2040213c:	4394                	lw	a3,0(a5)
2040213e:	43dc                	lw	a5,4(a5)
20402140:	96b2                	add	a3,a3,a2
20402142:	c014                	sw	a3,0(s0)
20402144:	c05c                	sw	a5,4(s0)
20402146:	c340                	sw	s0,4(a4)
20402148:	b779                	j	204020d6 <_free_r+0x30>
2040214a:	8082                	ret

2040214c <_malloc_r>:
_malloc_r():
2040214c:	1101                	addi	sp,sp,-32
2040214e:	ca26                	sw	s1,20(sp)
20402150:	00358493          	addi	s1,a1,3
20402154:	98f1                	andi	s1,s1,-4
20402156:	c84a                	sw	s2,16(sp)
20402158:	ce06                	sw	ra,28(sp)
2040215a:	cc22                	sw	s0,24(sp)
2040215c:	c64e                	sw	s3,12(sp)
2040215e:	04a1                	addi	s1,s1,8
20402160:	47b1                	li	a5,12
20402162:	892a                	mv	s2,a0
20402164:	04f4f463          	bgeu	s1,a5,204021ac <_malloc_r+0x60>
20402168:	44b1                	li	s1,12
2040216a:	04b4e363          	bltu	s1,a1,204021b0 <_malloc_r+0x64>
2040216e:	854a                	mv	a0,s2
20402170:	2565                	jal	20402818 <__malloc_lock>
20402172:	5fbfe697          	auipc	a3,0x5fbfe
20402176:	65668693          	addi	a3,a3,1622 # 800007c8 <__malloc_free_list>
2040217a:	4298                	lw	a4,0(a3)
2040217c:	843a                	mv	s0,a4
2040217e:	e421                	bnez	s0,204021c6 <_malloc_r+0x7a>
20402180:	5fbfe417          	auipc	s0,0x5fbfe
20402184:	64c40413          	addi	s0,s0,1612 # 800007cc <__malloc_sbrk_start>
20402188:	401c                	lw	a5,0(s0)
2040218a:	e789                	bnez	a5,20402194 <_malloc_r+0x48>
2040218c:	4581                	li	a1,0
2040218e:	854a                	mv	a0,s2
20402190:	2901                	jal	204025a0 <_sbrk_r>
20402192:	c008                	sw	a0,0(s0)
20402194:	85a6                	mv	a1,s1
20402196:	854a                	mv	a0,s2
20402198:	2121                	jal	204025a0 <_sbrk_r>
2040219a:	59fd                	li	s3,-1
2040219c:	07351863          	bne	a0,s3,2040220c <_malloc_r+0xc0>
204021a0:	47b1                	li	a5,12
204021a2:	00f92023          	sw	a5,0(s2)
204021a6:	854a                	mv	a0,s2
204021a8:	2d8d                	jal	2040281a <__malloc_unlock>
204021aa:	a031                	j	204021b6 <_malloc_r+0x6a>
204021ac:	fa04dfe3          	bgez	s1,2040216a <_malloc_r+0x1e>
204021b0:	47b1                	li	a5,12
204021b2:	00f92023          	sw	a5,0(s2)
204021b6:	4501                	li	a0,0
204021b8:	40f2                	lw	ra,28(sp)
204021ba:	4462                	lw	s0,24(sp)
204021bc:	44d2                	lw	s1,20(sp)
204021be:	4942                	lw	s2,16(sp)
204021c0:	49b2                	lw	s3,12(sp)
204021c2:	6105                	addi	sp,sp,32
204021c4:	8082                	ret
204021c6:	401c                	lw	a5,0(s0)
204021c8:	8f85                	sub	a5,a5,s1
204021ca:	0207ce63          	bltz	a5,20402206 <_malloc_r+0xba>
204021ce:	462d                	li	a2,11
204021d0:	00f67663          	bgeu	a2,a5,204021dc <_malloc_r+0x90>
204021d4:	c01c                	sw	a5,0(s0)
204021d6:	943e                	add	s0,s0,a5
204021d8:	c004                	sw	s1,0(s0)
204021da:	a029                	j	204021e4 <_malloc_r+0x98>
204021dc:	405c                	lw	a5,4(s0)
204021de:	02871263          	bne	a4,s0,20402202 <_malloc_r+0xb6>
204021e2:	c29c                	sw	a5,0(a3)
204021e4:	854a                	mv	a0,s2
204021e6:	2d15                	jal	2040281a <__malloc_unlock>
204021e8:	00b40513          	addi	a0,s0,11
204021ec:	00440793          	addi	a5,s0,4
204021f0:	9961                	andi	a0,a0,-8
204021f2:	40f50733          	sub	a4,a0,a5
204021f6:	fcf501e3          	beq	a0,a5,204021b8 <_malloc_r+0x6c>
204021fa:	943a                	add	s0,s0,a4
204021fc:	8f89                	sub	a5,a5,a0
204021fe:	c01c                	sw	a5,0(s0)
20402200:	bf65                	j	204021b8 <_malloc_r+0x6c>
20402202:	c35c                	sw	a5,4(a4)
20402204:	b7c5                	j	204021e4 <_malloc_r+0x98>
20402206:	8722                	mv	a4,s0
20402208:	4040                	lw	s0,4(s0)
2040220a:	bf95                	j	2040217e <_malloc_r+0x32>
2040220c:	00350413          	addi	s0,a0,3
20402210:	9871                	andi	s0,s0,-4
20402212:	fc8503e3          	beq	a0,s0,204021d8 <_malloc_r+0x8c>
20402216:	40a405b3          	sub	a1,s0,a0
2040221a:	854a                	mv	a0,s2
2040221c:	2651                	jal	204025a0 <_sbrk_r>
2040221e:	fb351de3          	bne	a0,s3,204021d8 <_malloc_r+0x8c>
20402222:	bfbd                	j	204021a0 <_malloc_r+0x54>

20402224 <_printf_common>:
_printf_common():
20402224:	7179                	addi	sp,sp,-48
20402226:	cc52                	sw	s4,24(sp)
20402228:	499c                	lw	a5,16(a1)
2040222a:	8a3a                	mv	s4,a4
2040222c:	4598                	lw	a4,8(a1)
2040222e:	d422                	sw	s0,40(sp)
20402230:	d226                	sw	s1,36(sp)
20402232:	ce4e                	sw	s3,28(sp)
20402234:	ca56                	sw	s5,20(sp)
20402236:	d606                	sw	ra,44(sp)
20402238:	d04a                	sw	s2,32(sp)
2040223a:	c85a                	sw	s6,16(sp)
2040223c:	c65e                	sw	s7,12(sp)
2040223e:	89aa                	mv	s3,a0
20402240:	842e                	mv	s0,a1
20402242:	84b2                	mv	s1,a2
20402244:	8ab6                	mv	s5,a3
20402246:	00e7d363          	bge	a5,a4,2040224c <_printf_common+0x28>
2040224a:	87ba                	mv	a5,a4
2040224c:	c09c                	sw	a5,0(s1)
2040224e:	04344703          	lbu	a4,67(s0)
20402252:	c319                	beqz	a4,20402258 <_printf_common+0x34>
20402254:	0785                	addi	a5,a5,1
20402256:	c09c                	sw	a5,0(s1)
20402258:	401c                	lw	a5,0(s0)
2040225a:	0207f793          	andi	a5,a5,32
2040225e:	c781                	beqz	a5,20402266 <_printf_common+0x42>
20402260:	409c                	lw	a5,0(s1)
20402262:	0789                	addi	a5,a5,2
20402264:	c09c                	sw	a5,0(s1)
20402266:	00042903          	lw	s2,0(s0)
2040226a:	00697913          	andi	s2,s2,6
2040226e:	00091a63          	bnez	s2,20402282 <_printf_common+0x5e>
20402272:	01940b13          	addi	s6,s0,25
20402276:	5bfd                	li	s7,-1
20402278:	445c                	lw	a5,12(s0)
2040227a:	4098                	lw	a4,0(s1)
2040227c:	8f99                	sub	a5,a5,a4
2040227e:	04f94c63          	blt	s2,a5,204022d6 <_printf_common+0xb2>
20402282:	04344783          	lbu	a5,67(s0)
20402286:	00f036b3          	snez	a3,a5
2040228a:	401c                	lw	a5,0(s0)
2040228c:	0207f793          	andi	a5,a5,32
20402290:	eba5                	bnez	a5,20402300 <_printf_common+0xdc>
20402292:	04340613          	addi	a2,s0,67
20402296:	85d6                	mv	a1,s5
20402298:	854e                	mv	a0,s3
2040229a:	9a02                	jalr	s4
2040229c:	57fd                	li	a5,-1
2040229e:	04f50363          	beq	a0,a5,204022e4 <_printf_common+0xc0>
204022a2:	401c                	lw	a5,0(s0)
204022a4:	4611                	li	a2,4
204022a6:	4098                	lw	a4,0(s1)
204022a8:	8b99                	andi	a5,a5,6
204022aa:	4454                	lw	a3,12(s0)
204022ac:	4481                	li	s1,0
204022ae:	00c79763          	bne	a5,a2,204022bc <_printf_common+0x98>
204022b2:	40e684b3          	sub	s1,a3,a4
204022b6:	0004d363          	bgez	s1,204022bc <_printf_common+0x98>
204022ba:	4481                	li	s1,0
204022bc:	441c                	lw	a5,8(s0)
204022be:	4818                	lw	a4,16(s0)
204022c0:	00f75463          	bge	a4,a5,204022c8 <_printf_common+0xa4>
204022c4:	8f99                	sub	a5,a5,a4
204022c6:	94be                	add	s1,s1,a5
204022c8:	4901                	li	s2,0
204022ca:	0469                	addi	s0,s0,26
204022cc:	5b7d                	li	s6,-1
204022ce:	05249863          	bne	s1,s2,2040231e <_printf_common+0xfa>
204022d2:	4501                	li	a0,0
204022d4:	a809                	j	204022e6 <_printf_common+0xc2>
204022d6:	4685                	li	a3,1
204022d8:	865a                	mv	a2,s6
204022da:	85d6                	mv	a1,s5
204022dc:	854e                	mv	a0,s3
204022de:	9a02                	jalr	s4
204022e0:	01751e63          	bne	a0,s7,204022fc <_printf_common+0xd8>
204022e4:	557d                	li	a0,-1
204022e6:	50b2                	lw	ra,44(sp)
204022e8:	5422                	lw	s0,40(sp)
204022ea:	5492                	lw	s1,36(sp)
204022ec:	5902                	lw	s2,32(sp)
204022ee:	49f2                	lw	s3,28(sp)
204022f0:	4a62                	lw	s4,24(sp)
204022f2:	4ad2                	lw	s5,20(sp)
204022f4:	4b42                	lw	s6,16(sp)
204022f6:	4bb2                	lw	s7,12(sp)
204022f8:	6145                	addi	sp,sp,48
204022fa:	8082                	ret
204022fc:	0905                	addi	s2,s2,1
204022fe:	bfad                	j	20402278 <_printf_common+0x54>
20402300:	00d40733          	add	a4,s0,a3
20402304:	03000613          	li	a2,48
20402308:	04c701a3          	sb	a2,67(a4)
2040230c:	04544703          	lbu	a4,69(s0)
20402310:	00168793          	addi	a5,a3,1
20402314:	97a2                	add	a5,a5,s0
20402316:	0689                	addi	a3,a3,2
20402318:	04e781a3          	sb	a4,67(a5)
2040231c:	bf9d                	j	20402292 <_printf_common+0x6e>
2040231e:	4685                	li	a3,1
20402320:	8622                	mv	a2,s0
20402322:	85d6                	mv	a1,s5
20402324:	854e                	mv	a0,s3
20402326:	9a02                	jalr	s4
20402328:	fb650ee3          	beq	a0,s6,204022e4 <_printf_common+0xc0>
2040232c:	0905                	addi	s2,s2,1
2040232e:	b745                	j	204022ce <_printf_common+0xaa>

20402330 <_printf_i>:
_printf_i():
20402330:	7179                	addi	sp,sp,-48
20402332:	d422                	sw	s0,40(sp)
20402334:	d226                	sw	s1,36(sp)
20402336:	d04a                	sw	s2,32(sp)
20402338:	ce4e                	sw	s3,28(sp)
2040233a:	d606                	sw	ra,44(sp)
2040233c:	cc52                	sw	s4,24(sp)
2040233e:	ca56                	sw	s5,20(sp)
20402340:	c85a                	sw	s6,16(sp)
20402342:	0185c803          	lbu	a6,24(a1)
20402346:	07800793          	li	a5,120
2040234a:	84aa                	mv	s1,a0
2040234c:	842e                	mv	s0,a1
2040234e:	8932                	mv	s2,a2
20402350:	89b6                	mv	s3,a3
20402352:	0107ee63          	bltu	a5,a6,2040236e <_printf_i+0x3e>
20402356:	06200793          	li	a5,98
2040235a:	04358693          	addi	a3,a1,67
2040235e:	0107ed63          	bltu	a5,a6,20402378 <_printf_i+0x48>
20402362:	1c080563          	beqz	a6,2040252c <_printf_i+0x1fc>
20402366:	05800793          	li	a5,88
2040236a:	12f80a63          	beq	a6,a5,2040249e <_printf_i+0x16e>
2040236e:	04240a93          	addi	s5,s0,66
20402372:	05040123          	sb	a6,66(s0)
20402376:	a815                	j	204023aa <_printf_i+0x7a>
20402378:	f9d80793          	addi	a5,a6,-99
2040237c:	0ff7f793          	zext.b	a5,a5
20402380:	4655                	li	a2,21
20402382:	fef666e3          	bltu	a2,a5,2040236e <_printf_i+0x3e>
20402386:	ffffe617          	auipc	a2,0xffffe
2040238a:	20260613          	addi	a2,a2,514 # 20400588 <__sf_fake_stdout+0x48>
2040238e:	078a                	slli	a5,a5,0x2
20402390:	97b2                	add	a5,a5,a2
20402392:	439c                	lw	a5,0(a5)
20402394:	97b2                	add	a5,a5,a2
20402396:	8782                	jr	a5
20402398:	431c                	lw	a5,0(a4)
2040239a:	04258a93          	addi	s5,a1,66
2040239e:	00478693          	addi	a3,a5,4
204023a2:	439c                	lw	a5,0(a5)
204023a4:	c314                	sw	a3,0(a4)
204023a6:	04f58123          	sb	a5,66(a1)
204023aa:	4785                	li	a5,1
204023ac:	a25d                	j	20402552 <_printf_i+0x222>
204023ae:	419c                	lw	a5,0(a1)
204023b0:	4308                	lw	a0,0(a4)
204023b2:	0807f613          	andi	a2,a5,128
204023b6:	00450593          	addi	a1,a0,4
204023ba:	c20d                	beqz	a2,204023dc <_printf_i+0xac>
204023bc:	411c                	lw	a5,0(a0)
204023be:	c30c                	sw	a1,0(a4)
204023c0:	0007d863          	bgez	a5,204023d0 <_printf_i+0xa0>
204023c4:	02d00713          	li	a4,45
204023c8:	40f007b3          	neg	a5,a5
204023cc:	04e401a3          	sb	a4,67(s0)
204023d0:	ffffe617          	auipc	a2,0xffffe
204023d4:	19060613          	addi	a2,a2,400 # 20400560 <__sf_fake_stdout+0x20>
204023d8:	4829                	li	a6,10
204023da:	a0a1                	j	20402422 <_printf_i+0xf2>
204023dc:	0407f613          	andi	a2,a5,64
204023e0:	411c                	lw	a5,0(a0)
204023e2:	c30c                	sw	a1,0(a4)
204023e4:	de71                	beqz	a2,204023c0 <_printf_i+0x90>
204023e6:	07c2                	slli	a5,a5,0x10
204023e8:	87c1                	srai	a5,a5,0x10
204023ea:	bfd9                	j	204023c0 <_printf_i+0x90>
204023ec:	4190                	lw	a2,0(a1)
204023ee:	431c                	lw	a5,0(a4)
204023f0:	08067513          	andi	a0,a2,128
204023f4:	00478593          	addi	a1,a5,4
204023f8:	c501                	beqz	a0,20402400 <_printf_i+0xd0>
204023fa:	c30c                	sw	a1,0(a4)
204023fc:	439c                	lw	a5,0(a5)
204023fe:	a039                	j	2040240c <_printf_i+0xdc>
20402400:	04067613          	andi	a2,a2,64
20402404:	c30c                	sw	a1,0(a4)
20402406:	da7d                	beqz	a2,204023fc <_printf_i+0xcc>
20402408:	0007d783          	lhu	a5,0(a5)
2040240c:	06f00713          	li	a4,111
20402410:	ffffe617          	auipc	a2,0xffffe
20402414:	15060613          	addi	a2,a2,336 # 20400560 <__sf_fake_stdout+0x20>
20402418:	0ee80463          	beq	a6,a4,20402500 <_printf_i+0x1d0>
2040241c:	4829                	li	a6,10
2040241e:	040401a3          	sb	zero,67(s0)
20402422:	4058                	lw	a4,4(s0)
20402424:	c418                	sw	a4,8(s0)
20402426:	00074563          	bltz	a4,20402430 <_printf_i+0x100>
2040242a:	400c                	lw	a1,0(s0)
2040242c:	99ed                	andi	a1,a1,-5
2040242e:	c00c                	sw	a1,0(s0)
20402430:	e399                	bnez	a5,20402436 <_printf_i+0x106>
20402432:	8ab6                	mv	s5,a3
20402434:	cf19                	beqz	a4,20402452 <_printf_i+0x122>
20402436:	8ab6                	mv	s5,a3
20402438:	0307f733          	remu	a4,a5,a6
2040243c:	1afd                	addi	s5,s5,-1
2040243e:	9732                	add	a4,a4,a2
20402440:	00074703          	lbu	a4,0(a4)
20402444:	00ea8023          	sb	a4,0(s5)
20402448:	873e                	mv	a4,a5
2040244a:	0307d7b3          	divu	a5,a5,a6
2040244e:	ff0775e3          	bgeu	a4,a6,20402438 <_printf_i+0x108>
20402452:	47a1                	li	a5,8
20402454:	00f81e63          	bne	a6,a5,20402470 <_printf_i+0x140>
20402458:	401c                	lw	a5,0(s0)
2040245a:	8b85                	andi	a5,a5,1
2040245c:	cb91                	beqz	a5,20402470 <_printf_i+0x140>
2040245e:	4058                	lw	a4,4(s0)
20402460:	481c                	lw	a5,16(s0)
20402462:	00e7c763          	blt	a5,a4,20402470 <_printf_i+0x140>
20402466:	03000793          	li	a5,48
2040246a:	fefa8fa3          	sb	a5,-1(s5)
2040246e:	1afd                	addi	s5,s5,-1
20402470:	415686b3          	sub	a3,a3,s5
20402474:	c814                	sw	a3,16(s0)
20402476:	874e                	mv	a4,s3
20402478:	86ca                	mv	a3,s2
2040247a:	0070                	addi	a2,sp,12
2040247c:	85a2                	mv	a1,s0
2040247e:	8526                	mv	a0,s1
20402480:	3355                	jal	20402224 <_printf_common>
20402482:	5a7d                	li	s4,-1
20402484:	0d451b63          	bne	a0,s4,2040255a <_printf_i+0x22a>
20402488:	557d                	li	a0,-1
2040248a:	50b2                	lw	ra,44(sp)
2040248c:	5422                	lw	s0,40(sp)
2040248e:	5492                	lw	s1,36(sp)
20402490:	5902                	lw	s2,32(sp)
20402492:	49f2                	lw	s3,28(sp)
20402494:	4a62                	lw	s4,24(sp)
20402496:	4ad2                	lw	s5,20(sp)
20402498:	4b42                	lw	s6,16(sp)
2040249a:	6145                	addi	sp,sp,48
2040249c:	8082                	ret
2040249e:	050582a3          	sb	a6,69(a1)
204024a2:	ffffe617          	auipc	a2,0xffffe
204024a6:	0be60613          	addi	a2,a2,190 # 20400560 <__sf_fake_stdout+0x20>
204024aa:	400c                	lw	a1,0(s0)
204024ac:	4308                	lw	a0,0(a4)
204024ae:	0805f813          	andi	a6,a1,128
204024b2:	411c                	lw	a5,0(a0)
204024b4:	0511                	addi	a0,a0,4
204024b6:	02080d63          	beqz	a6,204024f0 <_printf_i+0x1c0>
204024ba:	c308                	sw	a0,0(a4)
204024bc:	0015f713          	andi	a4,a1,1
204024c0:	c701                	beqz	a4,204024c8 <_printf_i+0x198>
204024c2:	0205e593          	ori	a1,a1,32
204024c6:	c00c                	sw	a1,0(s0)
204024c8:	4841                	li	a6,16
204024ca:	fbb1                	bnez	a5,2040241e <_printf_i+0xee>
204024cc:	4018                	lw	a4,0(s0)
204024ce:	fdf77713          	andi	a4,a4,-33
204024d2:	c018                	sw	a4,0(s0)
204024d4:	b7a9                	j	2040241e <_printf_i+0xee>
204024d6:	419c                	lw	a5,0(a1)
204024d8:	0207e793          	ori	a5,a5,32
204024dc:	c19c                	sw	a5,0(a1)
204024de:	07800793          	li	a5,120
204024e2:	04f402a3          	sb	a5,69(s0)
204024e6:	ffffe617          	auipc	a2,0xffffe
204024ea:	08e60613          	addi	a2,a2,142 # 20400574 <__sf_fake_stdout+0x34>
204024ee:	bf75                	j	204024aa <_printf_i+0x17a>
204024f0:	0405f813          	andi	a6,a1,64
204024f4:	c308                	sw	a0,0(a4)
204024f6:	fc0803e3          	beqz	a6,204024bc <_printf_i+0x18c>
204024fa:	07c2                	slli	a5,a5,0x10
204024fc:	83c1                	srli	a5,a5,0x10
204024fe:	bf7d                	j	204024bc <_printf_i+0x18c>
20402500:	4821                	li	a6,8
20402502:	bf31                	j	2040241e <_printf_i+0xee>
20402504:	4190                	lw	a2,0(a1)
20402506:	431c                	lw	a5,0(a4)
20402508:	49cc                	lw	a1,20(a1)
2040250a:	08067813          	andi	a6,a2,128
2040250e:	00478513          	addi	a0,a5,4
20402512:	00080663          	beqz	a6,2040251e <_printf_i+0x1ee>
20402516:	c308                	sw	a0,0(a4)
20402518:	439c                	lw	a5,0(a5)
2040251a:	c38c                	sw	a1,0(a5)
2040251c:	a801                	j	2040252c <_printf_i+0x1fc>
2040251e:	c308                	sw	a0,0(a4)
20402520:	04067613          	andi	a2,a2,64
20402524:	439c                	lw	a5,0(a5)
20402526:	da75                	beqz	a2,2040251a <_printf_i+0x1ea>
20402528:	00b79023          	sh	a1,0(a5)
2040252c:	00042823          	sw	zero,16(s0)
20402530:	8ab6                	mv	s5,a3
20402532:	b791                	j	20402476 <_printf_i+0x146>
20402534:	431c                	lw	a5,0(a4)
20402536:	41d0                	lw	a2,4(a1)
20402538:	4581                	li	a1,0
2040253a:	00478693          	addi	a3,a5,4
2040253e:	c314                	sw	a3,0(a4)
20402540:	0007aa83          	lw	s5,0(a5)
20402544:	8556                	mv	a0,s5
20402546:	3c79                	jal	20401fe4 <memchr>
20402548:	c501                	beqz	a0,20402550 <_printf_i+0x220>
2040254a:	41550533          	sub	a0,a0,s5
2040254e:	c048                	sw	a0,4(s0)
20402550:	405c                	lw	a5,4(s0)
20402552:	c81c                	sw	a5,16(s0)
20402554:	040401a3          	sb	zero,67(s0)
20402558:	bf39                	j	20402476 <_printf_i+0x146>
2040255a:	4814                	lw	a3,16(s0)
2040255c:	8656                	mv	a2,s5
2040255e:	85ca                	mv	a1,s2
20402560:	8526                	mv	a0,s1
20402562:	9982                	jalr	s3
20402564:	f34502e3          	beq	a0,s4,20402488 <_printf_i+0x158>
20402568:	401c                	lw	a5,0(s0)
2040256a:	8b89                	andi	a5,a5,2
2040256c:	e78d                	bnez	a5,20402596 <_printf_i+0x266>
2040256e:	47b2                	lw	a5,12(sp)
20402570:	4448                	lw	a0,12(s0)
20402572:	f0f55ce3          	bge	a0,a5,2040248a <_printf_i+0x15a>
20402576:	853e                	mv	a0,a5
20402578:	bf09                	j	2040248a <_printf_i+0x15a>
2040257a:	4685                	li	a3,1
2040257c:	8656                	mv	a2,s5
2040257e:	85ca                	mv	a1,s2
20402580:	8526                	mv	a0,s1
20402582:	9982                	jalr	s3
20402584:	f16502e3          	beq	a0,s6,20402488 <_printf_i+0x158>
20402588:	0a05                	addi	s4,s4,1
2040258a:	445c                	lw	a5,12(s0)
2040258c:	4732                	lw	a4,12(sp)
2040258e:	8f99                	sub	a5,a5,a4
20402590:	fefa45e3          	blt	s4,a5,2040257a <_printf_i+0x24a>
20402594:	bfe9                	j	2040256e <_printf_i+0x23e>
20402596:	4a01                	li	s4,0
20402598:	01940a93          	addi	s5,s0,25
2040259c:	5b7d                	li	s6,-1
2040259e:	b7f5                	j	2040258a <_printf_i+0x25a>

204025a0 <_sbrk_r>:
_sbrk_r():
204025a0:	1141                	addi	sp,sp,-16
204025a2:	c422                	sw	s0,8(sp)
204025a4:	842a                	mv	s0,a0
204025a6:	852e                	mv	a0,a1
204025a8:	5fbfe797          	auipc	a5,0x5fbfe
204025ac:	2207a423          	sw	zero,552(a5) # 800007d0 <errno>
204025b0:	c606                	sw	ra,12(sp)
204025b2:	2645                	jal	20402952 <_sbrk>
204025b4:	57fd                	li	a5,-1
204025b6:	00f51863          	bne	a0,a5,204025c6 <_sbrk_r+0x26>
204025ba:	5fbfe797          	auipc	a5,0x5fbfe
204025be:	2167a783          	lw	a5,534(a5) # 800007d0 <errno>
204025c2:	c391                	beqz	a5,204025c6 <_sbrk_r+0x26>
204025c4:	c01c                	sw	a5,0(s0)
204025c6:	40b2                	lw	ra,12(sp)
204025c8:	4422                	lw	s0,8(sp)
204025ca:	0141                	addi	sp,sp,16
204025cc:	8082                	ret

204025ce <_raise_r>:
_raise_r():
204025ce:	1101                	addi	sp,sp,-32
204025d0:	cc22                	sw	s0,24(sp)
204025d2:	ce06                	sw	ra,28(sp)
204025d4:	47fd                	li	a5,31
204025d6:	842a                	mv	s0,a0
204025d8:	00b7f963          	bgeu	a5,a1,204025ea <_raise_r+0x1c>
204025dc:	47d9                	li	a5,22
204025de:	c11c                	sw	a5,0(a0)
204025e0:	557d                	li	a0,-1
204025e2:	40f2                	lw	ra,28(sp)
204025e4:	4462                	lw	s0,24(sp)
204025e6:	6105                	addi	sp,sp,32
204025e8:	8082                	ret
204025ea:	417c                	lw	a5,68(a0)
204025ec:	862e                	mv	a2,a1
204025ee:	c791                	beqz	a5,204025fa <_raise_r+0x2c>
204025f0:	00259713          	slli	a4,a1,0x2
204025f4:	97ba                	add	a5,a5,a4
204025f6:	4398                	lw	a4,0(a5)
204025f8:	eb19                	bnez	a4,2040260e <_raise_r+0x40>
204025fa:	8522                	mv	a0,s0
204025fc:	c632                	sw	a2,12(sp)
204025fe:	20bd                	jal	2040266c <_getpid_r>
20402600:	85aa                	mv	a1,a0
20402602:	8522                	mv	a0,s0
20402604:	4462                	lw	s0,24(sp)
20402606:	4632                	lw	a2,12(sp)
20402608:	40f2                	lw	ra,28(sp)
2040260a:	6105                	addi	sp,sp,32
2040260c:	a805                	j	2040263c <_kill_r>
2040260e:	4685                	li	a3,1
20402610:	4501                	li	a0,0
20402612:	fcd708e3          	beq	a4,a3,204025e2 <_raise_r+0x14>
20402616:	56fd                	li	a3,-1
20402618:	00d71663          	bne	a4,a3,20402624 <_raise_r+0x56>
2040261c:	47d9                	li	a5,22
2040261e:	c01c                	sw	a5,0(s0)
20402620:	4505                	li	a0,1
20402622:	b7c1                	j	204025e2 <_raise_r+0x14>
20402624:	852e                	mv	a0,a1
20402626:	0007a023          	sw	zero,0(a5)
2040262a:	9702                	jalr	a4
2040262c:	4501                	li	a0,0
2040262e:	bf55                	j	204025e2 <_raise_r+0x14>

20402630 <raise>:
raise():
20402630:	85aa                	mv	a1,a0
20402632:	5fbfe517          	auipc	a0,0x5fbfe
20402636:	16e52503          	lw	a0,366(a0) # 800007a0 <_impure_ptr>
2040263a:	bf51                	j	204025ce <_raise_r>

2040263c <_kill_r>:
_kill_r():
2040263c:	1141                	addi	sp,sp,-16
2040263e:	c422                	sw	s0,8(sp)
20402640:	842a                	mv	s0,a0
20402642:	852e                	mv	a0,a1
20402644:	85b2                	mv	a1,a2
20402646:	5fbfe797          	auipc	a5,0x5fbfe
2040264a:	1807a523          	sw	zero,394(a5) # 800007d0 <errno>
2040264e:	c606                	sw	ra,12(sp)
20402650:	2461                	jal	204028d8 <_kill>
20402652:	57fd                	li	a5,-1
20402654:	00f51863          	bne	a0,a5,20402664 <_kill_r+0x28>
20402658:	5fbfe797          	auipc	a5,0x5fbfe
2040265c:	1787a783          	lw	a5,376(a5) # 800007d0 <errno>
20402660:	c391                	beqz	a5,20402664 <_kill_r+0x28>
20402662:	c01c                	sw	a5,0(s0)
20402664:	40b2                	lw	ra,12(sp)
20402666:	4422                	lw	s0,8(sp)
20402668:	0141                	addi	sp,sp,16
2040266a:	8082                	ret

2040266c <_getpid_r>:
_getpid_r():
2040266c:	ac35                	j	204028a8 <_getpid>

2040266e <__sread>:
__sread():
2040266e:	1141                	addi	sp,sp,-16
20402670:	c422                	sw	s0,8(sp)
20402672:	842e                	mv	s0,a1
20402674:	00e59583          	lh	a1,14(a1)
20402678:	c606                	sw	ra,12(sp)
2040267a:	224d                	jal	2040281c <_read_r>
2040267c:	00054963          	bltz	a0,2040268e <__sread+0x20>
20402680:	487c                	lw	a5,84(s0)
20402682:	97aa                	add	a5,a5,a0
20402684:	c87c                	sw	a5,84(s0)
20402686:	40b2                	lw	ra,12(sp)
20402688:	4422                	lw	s0,8(sp)
2040268a:	0141                	addi	sp,sp,16
2040268c:	8082                	ret
2040268e:	00c45783          	lhu	a5,12(s0)
20402692:	777d                	lui	a4,0xfffff
20402694:	177d                	addi	a4,a4,-1
20402696:	8ff9                	and	a5,a5,a4
20402698:	00f41623          	sh	a5,12(s0)
2040269c:	b7ed                	j	20402686 <__sread+0x18>

2040269e <__swrite>:
__swrite():
2040269e:	00c5d783          	lhu	a5,12(a1)
204026a2:	1101                	addi	sp,sp,-32
204026a4:	cc22                	sw	s0,24(sp)
204026a6:	ca26                	sw	s1,20(sp)
204026a8:	c84a                	sw	s2,16(sp)
204026aa:	c64e                	sw	s3,12(sp)
204026ac:	ce06                	sw	ra,28(sp)
204026ae:	1007f793          	andi	a5,a5,256
204026b2:	84aa                	mv	s1,a0
204026b4:	842e                	mv	s0,a1
204026b6:	8932                	mv	s2,a2
204026b8:	89b6                	mv	s3,a3
204026ba:	c791                	beqz	a5,204026c6 <__swrite+0x28>
204026bc:	00e59583          	lh	a1,14(a1)
204026c0:	4689                	li	a3,2
204026c2:	4601                	li	a2,0
204026c4:	220d                	jal	204027e6 <_lseek_r>
204026c6:	00c45783          	lhu	a5,12(s0)
204026ca:	777d                	lui	a4,0xfffff
204026cc:	177d                	addi	a4,a4,-1
204026ce:	8ff9                	and	a5,a5,a4
204026d0:	00e41583          	lh	a1,14(s0)
204026d4:	00f41623          	sh	a5,12(s0)
204026d8:	4462                	lw	s0,24(sp)
204026da:	40f2                	lw	ra,28(sp)
204026dc:	86ce                	mv	a3,s3
204026de:	864a                	mv	a2,s2
204026e0:	49b2                	lw	s3,12(sp)
204026e2:	4942                	lw	s2,16(sp)
204026e4:	8526                	mv	a0,s1
204026e6:	44d2                	lw	s1,20(sp)
204026e8:	6105                	addi	sp,sp,32
204026ea:	a83d                	j	20402728 <_write_r>

204026ec <__sseek>:
__sseek():
204026ec:	1141                	addi	sp,sp,-16
204026ee:	c422                	sw	s0,8(sp)
204026f0:	842e                	mv	s0,a1
204026f2:	00e59583          	lh	a1,14(a1)
204026f6:	c606                	sw	ra,12(sp)
204026f8:	20fd                	jal	204027e6 <_lseek_r>
204026fa:	57fd                	li	a5,-1
204026fc:	00c45703          	lhu	a4,12(s0)
20402700:	00f51b63          	bne	a0,a5,20402716 <__sseek+0x2a>
20402704:	77fd                	lui	a5,0xfffff
20402706:	17fd                	addi	a5,a5,-1
20402708:	8ff9                	and	a5,a5,a4
2040270a:	00f41623          	sh	a5,12(s0)
2040270e:	40b2                	lw	ra,12(sp)
20402710:	4422                	lw	s0,8(sp)
20402712:	0141                	addi	sp,sp,16
20402714:	8082                	ret
20402716:	6785                	lui	a5,0x1
20402718:	8fd9                	or	a5,a5,a4
2040271a:	00f41623          	sh	a5,12(s0)
2040271e:	c868                	sw	a0,84(s0)
20402720:	b7fd                	j	2040270e <__sseek+0x22>

20402722 <__sclose>:
__sclose():
20402722:	00e59583          	lh	a1,14(a1)
20402726:	a815                	j	2040275a <_close_r>

20402728 <_write_r>:
_write_r():
20402728:	1141                	addi	sp,sp,-16
2040272a:	c422                	sw	s0,8(sp)
2040272c:	842a                	mv	s0,a0
2040272e:	852e                	mv	a0,a1
20402730:	85b2                	mv	a1,a2
20402732:	8636                	mv	a2,a3
20402734:	5fbfe797          	auipc	a5,0x5fbfe
20402738:	0807ae23          	sw	zero,156(a5) # 800007d0 <errno>
2040273c:	c606                	sw	ra,12(sp)
2040273e:	2c49                	jal	204029d0 <_write>
20402740:	57fd                	li	a5,-1
20402742:	00f51863          	bne	a0,a5,20402752 <_write_r+0x2a>
20402746:	5fbfe797          	auipc	a5,0x5fbfe
2040274a:	08a7a783          	lw	a5,138(a5) # 800007d0 <errno>
2040274e:	c391                	beqz	a5,20402752 <_write_r+0x2a>
20402750:	c01c                	sw	a5,0(s0)
20402752:	40b2                	lw	ra,12(sp)
20402754:	4422                	lw	s0,8(sp)
20402756:	0141                	addi	sp,sp,16
20402758:	8082                	ret

2040275a <_close_r>:
_close_r():
2040275a:	1141                	addi	sp,sp,-16
2040275c:	c422                	sw	s0,8(sp)
2040275e:	842a                	mv	s0,a0
20402760:	852e                	mv	a0,a1
20402762:	5fbfe797          	auipc	a5,0x5fbfe
20402766:	0607a723          	sw	zero,110(a5) # 800007d0 <errno>
2040276a:	c606                	sw	ra,12(sp)
2040276c:	20cd                	jal	2040284e <_close>
2040276e:	57fd                	li	a5,-1
20402770:	00f51863          	bne	a0,a5,20402780 <_close_r+0x26>
20402774:	5fbfe797          	auipc	a5,0x5fbfe
20402778:	05c7a783          	lw	a5,92(a5) # 800007d0 <errno>
2040277c:	c391                	beqz	a5,20402780 <_close_r+0x26>
2040277e:	c01c                	sw	a5,0(s0)
20402780:	40b2                	lw	ra,12(sp)
20402782:	4422                	lw	s0,8(sp)
20402784:	0141                	addi	sp,sp,16
20402786:	8082                	ret

20402788 <_fstat_r>:
_fstat_r():
20402788:	1141                	addi	sp,sp,-16
2040278a:	c422                	sw	s0,8(sp)
2040278c:	842a                	mv	s0,a0
2040278e:	852e                	mv	a0,a1
20402790:	85b2                	mv	a1,a2
20402792:	5fbfe797          	auipc	a5,0x5fbfe
20402796:	0207af23          	sw	zero,62(a5) # 800007d0 <errno>
2040279a:	c606                	sw	ra,12(sp)
2040279c:	20dd                	jal	20402882 <_fstat>
2040279e:	57fd                	li	a5,-1
204027a0:	00f51863          	bne	a0,a5,204027b0 <_fstat_r+0x28>
204027a4:	5fbfe797          	auipc	a5,0x5fbfe
204027a8:	02c7a783          	lw	a5,44(a5) # 800007d0 <errno>
204027ac:	c391                	beqz	a5,204027b0 <_fstat_r+0x28>
204027ae:	c01c                	sw	a5,0(s0)
204027b0:	40b2                	lw	ra,12(sp)
204027b2:	4422                	lw	s0,8(sp)
204027b4:	0141                	addi	sp,sp,16
204027b6:	8082                	ret

204027b8 <_isatty_r>:
_isatty_r():
204027b8:	1141                	addi	sp,sp,-16
204027ba:	c422                	sw	s0,8(sp)
204027bc:	842a                	mv	s0,a0
204027be:	852e                	mv	a0,a1
204027c0:	5fbfe797          	auipc	a5,0x5fbfe
204027c4:	0007a823          	sw	zero,16(a5) # 800007d0 <errno>
204027c8:	c606                	sw	ra,12(sp)
204027ca:	20fd                	jal	204028b8 <_isatty>
204027cc:	57fd                	li	a5,-1
204027ce:	00f51863          	bne	a0,a5,204027de <_isatty_r+0x26>
204027d2:	5fbfe797          	auipc	a5,0x5fbfe
204027d6:	ffe7a783          	lw	a5,-2(a5) # 800007d0 <errno>
204027da:	c391                	beqz	a5,204027de <_isatty_r+0x26>
204027dc:	c01c                	sw	a5,0(s0)
204027de:	40b2                	lw	ra,12(sp)
204027e0:	4422                	lw	s0,8(sp)
204027e2:	0141                	addi	sp,sp,16
204027e4:	8082                	ret

204027e6 <_lseek_r>:
_lseek_r():
204027e6:	1141                	addi	sp,sp,-16
204027e8:	c422                	sw	s0,8(sp)
204027ea:	842a                	mv	s0,a0
204027ec:	852e                	mv	a0,a1
204027ee:	85b2                	mv	a1,a2
204027f0:	8636                	mv	a2,a3
204027f2:	5fbfe797          	auipc	a5,0x5fbfe
204027f6:	fc07af23          	sw	zero,-34(a5) # 800007d0 <errno>
204027fa:	c606                	sw	ra,12(sp)
204027fc:	2209                	jal	204028fe <_lseek>
204027fe:	57fd                	li	a5,-1
20402800:	00f51863          	bne	a0,a5,20402810 <_lseek_r+0x2a>
20402804:	5fbfe797          	auipc	a5,0x5fbfe
20402808:	fcc7a783          	lw	a5,-52(a5) # 800007d0 <errno>
2040280c:	c391                	beqz	a5,20402810 <_lseek_r+0x2a>
2040280e:	c01c                	sw	a5,0(s0)
20402810:	40b2                	lw	ra,12(sp)
20402812:	4422                	lw	s0,8(sp)
20402814:	0141                	addi	sp,sp,16
20402816:	8082                	ret

20402818 <__malloc_lock>:
__malloc_lock():
20402818:	8082                	ret

2040281a <__malloc_unlock>:
__malloc_unlock():
2040281a:	8082                	ret

2040281c <_read_r>:
_read_r():
2040281c:	1141                	addi	sp,sp,-16
2040281e:	c422                	sw	s0,8(sp)
20402820:	842a                	mv	s0,a0
20402822:	852e                	mv	a0,a1
20402824:	85b2                	mv	a1,a2
20402826:	8636                	mv	a2,a3
20402828:	5fbfe797          	auipc	a5,0x5fbfe
2040282c:	fa07a423          	sw	zero,-88(a5) # 800007d0 <errno>
20402830:	c606                	sw	ra,12(sp)
20402832:	28dd                	jal	20402928 <_read>
20402834:	57fd                	li	a5,-1
20402836:	00f51863          	bne	a0,a5,20402846 <_read_r+0x2a>
2040283a:	5fbfe797          	auipc	a5,0x5fbfe
2040283e:	f967a783          	lw	a5,-106(a5) # 800007d0 <errno>
20402842:	c391                	beqz	a5,20402846 <_read_r+0x2a>
20402844:	c01c                	sw	a5,0(s0)
20402846:	40b2                	lw	ra,12(sp)
20402848:	4422                	lw	s0,8(sp)
2040284a:	0141                	addi	sp,sp,16
2040284c:	8082                	ret

2040284e <_close>:
_close():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040284e:	1101                	addi	sp,sp,-32
20402850:	ce06                	sw	ra,28(sp)
20402852:	cc22                	sw	s0,24(sp)
20402854:	1000                	addi	s0,sp,32
20402856:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
2040285a:	22fd                	jal	20402a48 <__errno>
2040285c:	872a                	mv	a4,a0
2040285e:	05800793          	li	a5,88
20402862:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:5
    return -1;
20402864:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:6
}
20402866:	853e                	mv	a0,a5
20402868:	40f2                	lw	ra,28(sp)
2040286a:	4462                	lw	s0,24(sp)
2040286c:	6105                	addi	sp,sp,32
2040286e:	8082                	ret

20402870 <_exit>:
_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20402870:	1101                	addi	sp,sp,-32
20402872:	ce06                	sw	ra,28(sp)
20402874:	cc22                	sw	s0,24(sp)
20402876:	1000                	addi	s0,sp,32
20402878:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2040287c:	fec42503          	lw	a0,-20(s0)
20402880:	2331                	jal	20402d8c <metal_shutdown>

20402882 <_fstat>:
_fstat():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402882:	1101                	addi	sp,sp,-32
20402884:	ce06                	sw	ra,28(sp)
20402886:	cc22                	sw	s0,24(sp)
20402888:	1000                	addi	s0,sp,32
2040288a:	fea42623          	sw	a0,-20(s0)
2040288e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20402892:	2a5d                	jal	20402a48 <__errno>
20402894:	872a                	mv	a4,a0
20402896:	fa800793          	li	a5,-88
2040289a:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:6
    return -1;
2040289c:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:7
}
2040289e:	853e                	mv	a0,a5
204028a0:	40f2                	lw	ra,28(sp)
204028a2:	4462                	lw	s0,24(sp)
204028a4:	6105                	addi	sp,sp,32
204028a6:	8082                	ret

204028a8 <_getpid>:
_getpid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_getpid.c:3
#include <errno.h>

int _getpid() { return 1; }
204028a8:	1141                	addi	sp,sp,-16
204028aa:	c622                	sw	s0,12(sp)
204028ac:	0800                	addi	s0,sp,16
204028ae:	4785                	li	a5,1
204028b0:	853e                	mv	a0,a5
204028b2:	4432                	lw	s0,12(sp)
204028b4:	0141                	addi	sp,sp,16
204028b6:	8082                	ret

204028b8 <_isatty>:
_isatty():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
204028b8:	1101                	addi	sp,sp,-32
204028ba:	ce22                	sw	s0,28(sp)
204028bc:	1000                	addi	s0,sp,32
204028be:	fea42623          	sw	a0,-20(s0)
204028c2:	fec42783          	lw	a5,-20(s0)
204028c6:	17fd                	addi	a5,a5,-1
204028c8:	0017b793          	seqz	a5,a5
204028cc:	0ff7f793          	zext.b	a5,a5
204028d0:	853e                	mv	a0,a5
204028d2:	4472                	lw	s0,28(sp)
204028d4:	6105                	addi	sp,sp,32
204028d6:	8082                	ret

204028d8 <_kill>:
_kill():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:3
#include <errno.h>

int _kill(int pid, int sig) {
204028d8:	1101                	addi	sp,sp,-32
204028da:	ce06                	sw	ra,28(sp)
204028dc:	cc22                	sw	s0,24(sp)
204028de:	1000                	addi	s0,sp,32
204028e0:	fea42623          	sw	a0,-20(s0)
204028e4:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:4
    errno = ENOSYS;
204028e8:	2285                	jal	20402a48 <__errno>
204028ea:	872a                	mv	a4,a0
204028ec:	05800793          	li	a5,88
204028f0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:5
    return -1;
204028f2:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:6
}
204028f4:	853e                	mv	a0,a5
204028f6:	40f2                	lw	ra,28(sp)
204028f8:	4462                	lw	s0,24(sp)
204028fa:	6105                	addi	sp,sp,32
204028fc:	8082                	ret

204028fe <_lseek>:
_lseek():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204028fe:	1101                	addi	sp,sp,-32
20402900:	ce06                	sw	ra,28(sp)
20402902:	cc22                	sw	s0,24(sp)
20402904:	1000                	addi	s0,sp,32
20402906:	fea42623          	sw	a0,-20(s0)
2040290a:	feb42423          	sw	a1,-24(s0)
2040290e:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402912:	2a1d                	jal	20402a48 <__errno>
20402914:	872a                	mv	a4,a0
20402916:	05800793          	li	a5,88
2040291a:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:6
    return -1;
2040291c:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:7
}
2040291e:	853e                	mv	a0,a5
20402920:	40f2                	lw	ra,28(sp)
20402922:	4462                	lw	s0,24(sp)
20402924:	6105                	addi	sp,sp,32
20402926:	8082                	ret

20402928 <_read>:
_read():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402928:	1101                	addi	sp,sp,-32
2040292a:	ce06                	sw	ra,28(sp)
2040292c:	cc22                	sw	s0,24(sp)
2040292e:	1000                	addi	s0,sp,32
20402930:	fea42623          	sw	a0,-20(s0)
20402934:	feb42423          	sw	a1,-24(s0)
20402938:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
2040293c:	2231                	jal	20402a48 <__errno>
2040293e:	872a                	mv	a4,a0
20402940:	05800793          	li	a5,88
20402944:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:6
    return -1;
20402946:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:7
}
20402948:	853e                	mv	a0,a5
2040294a:	40f2                	lw	ra,28(sp)
2040294c:	4462                	lw	s0,24(sp)
2040294e:	6105                	addi	sp,sp,32
20402950:	8082                	ret

20402952 <_sbrk>:
_sbrk():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402952:	7179                	addi	sp,sp,-48
20402954:	d606                	sw	ra,44(sp)
20402956:	d422                	sw	s0,40(sp)
20402958:	1800                	addi	s0,sp,48
2040295a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
2040295e:	800007b7          	lui	a5,0x80000
20402962:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff2d4>
20402966:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2040296a:	d3018713          	addi	a4,gp,-720 # 80000cd0 <_sp>
2040296e:	53018793          	addi	a5,gp,1328 # 800014d0 <metal_segment_heap_target_end>
20402972:	00f71463          	bne	a4,a5,2040297a <_sbrk+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402976:	57fd                	li	a5,-1
20402978:	a0b9                	j	204029c6 <_sbrk+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
2040297a:	800007b7          	lui	a5,0x80000
2040297e:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff2d4>
20402982:	fdc42783          	lw	a5,-36(s0)
20402986:	973e                	add	a4,a4,a5
20402988:	53018793          	addi	a5,gp,1328 # 800014d0 <metal_segment_heap_target_end>
2040298c:	02f77663          	bgeu	a4,a5,204029b8 <_sbrk+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402990:	800007b7          	lui	a5,0x80000
20402994:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff2d4>
20402998:	fdc42783          	lw	a5,-36(s0)
2040299c:	973e                	add	a4,a4,a5
2040299e:	800007b7          	lui	a5,0x80000
204029a2:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff2d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
204029a6:	fdc42583          	lw	a1,-36(s0)
204029aa:	fec42503          	lw	a0,-20(s0)
204029ae:	edcfd0ef          	jal	ra,2040008a <metal_mem_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:42

    return old;
204029b2:	fec42783          	lw	a5,-20(s0)
204029b6:	a801                	j	204029c6 <_sbrk+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
204029b8:	800007b7          	lui	a5,0x80000
204029bc:	53018713          	addi	a4,gp,1328 # 800014d0 <metal_segment_heap_target_end>
204029c0:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff2d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
204029c4:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:43
}
204029c6:	853e                	mv	a0,a5
204029c8:	50b2                	lw	ra,44(sp)
204029ca:	5422                	lw	s0,40(sp)
204029cc:	6145                	addi	sp,sp,48
204029ce:	8082                	ret

204029d0 <_write>:
_write():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
204029d0:	7179                	addi	sp,sp,-48
204029d2:	d606                	sw	ra,44(sp)
204029d4:	d422                	sw	s0,40(sp)
204029d6:	1800                	addi	s0,sp,48
204029d8:	fca42e23          	sw	a0,-36(s0)
204029dc:	fcb42c23          	sw	a1,-40(s0)
204029e0:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
204029e4:	fdc42703          	lw	a4,-36(s0)
204029e8:	4785                	li	a5,1
204029ea:	00f70963          	beq	a4,a5,204029fc <_write+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
204029ee:	28a9                	jal	20402a48 <__errno>
204029f0:	872a                	mv	a4,a0
204029f2:	05800793          	li	a5,88
204029f6:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:10
        return -1;
204029f8:	57fd                	li	a5,-1
204029fa:	a82d                	j	20402a34 <_write+0x64>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
204029fc:	fd842783          	lw	a5,-40(s0)
20402a00:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402a04:	fe042623          	sw	zero,-20(s0)
20402a08:	a839                	j	20402a26 <_write+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402a0a:	fe842703          	lw	a4,-24(s0)
20402a0e:	fec42783          	lw	a5,-20(s0)
20402a12:	97ba                	add	a5,a5,a4
20402a14:	0007c783          	lbu	a5,0(a5)
20402a18:	853e                	mv	a0,a5
20402a1a:	2661                	jal	20402da2 <metal_tty_putc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402a1c:	fec42783          	lw	a5,-20(s0)
20402a20:	0785                	addi	a5,a5,1
20402a22:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402a26:	fec42703          	lw	a4,-20(s0)
20402a2a:	fd442783          	lw	a5,-44(s0)
20402a2e:	fcf76ee3          	bltu	a4,a5,20402a0a <_write+0x3a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:16
    return 0;
20402a32:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:17
}
20402a34:	853e                	mv	a0,a5
20402a36:	50b2                	lw	ra,44(sp)
20402a38:	5422                	lw	s0,40(sp)
20402a3a:	6145                	addi	sp,sp,48
20402a3c:	8082                	ret

20402a3e <atexit>:
atexit():
20402a3e:	85aa                	mv	a1,a0
20402a40:	4681                	li	a3,0
20402a42:	4601                	li	a2,0
20402a44:	4501                	li	a0,0
20402a46:	a0e1                	j	20402b0e <__register_exitproc>

20402a48 <__errno>:
__errno():
20402a48:	5fbfe517          	auipc	a0,0x5fbfe
20402a4c:	d5852503          	lw	a0,-680(a0) # 800007a0 <_impure_ptr>
20402a50:	8082                	ret

20402a52 <exit>:
exit():
20402a52:	1141                	addi	sp,sp,-16
20402a54:	c422                	sw	s0,8(sp)
20402a56:	c606                	sw	ra,12(sp)
20402a58:	00000797          	auipc	a5,0x0
20402a5c:	13278793          	addi	a5,a5,306 # 20402b8a <__call_exitprocs>
20402a60:	842a                	mv	s0,a0
20402a62:	c399                	beqz	a5,20402a68 <exit+0x16>
20402a64:	4581                	li	a1,0
20402a66:	2215                	jal	20402b8a <__call_exitprocs>
20402a68:	ffffe517          	auipc	a0,0xffffe
20402a6c:	6c852503          	lw	a0,1736(a0) # 20401130 <_global_impure_ptr>
20402a70:	551c                	lw	a5,40(a0)
20402a72:	c391                	beqz	a5,20402a76 <exit+0x24>
20402a74:	9782                	jalr	a5
20402a76:	8522                	mv	a0,s0
20402a78:	3be5                	jal	20402870 <_exit>

20402a7a <__libc_fini_array>:
__libc_fini_array():
20402a7a:	1141                	addi	sp,sp,-16
20402a7c:	c422                	sw	s0,8(sp)
20402a7e:	c226                	sw	s1,4(sp)
20402a80:	ffffe417          	auipc	s0,0xffffe
20402a84:	87040413          	addi	s0,s0,-1936 # 204002f0 <__fini_array_end>
20402a88:	ffffe497          	auipc	s1,0xffffe
20402a8c:	86848493          	addi	s1,s1,-1944 # 204002f0 <__fini_array_end>
20402a90:	8c05                	sub	s0,s0,s1
20402a92:	c606                	sw	ra,12(sp)
20402a94:	8409                	srai	s0,s0,0x2
20402a96:	e411                	bnez	s0,20402aa2 <__libc_fini_array+0x28>
20402a98:	40b2                	lw	ra,12(sp)
20402a9a:	4422                	lw	s0,8(sp)
20402a9c:	4492                	lw	s1,4(sp)
20402a9e:	0141                	addi	sp,sp,16
20402aa0:	8082                	ret
20402aa2:	147d                	addi	s0,s0,-1
20402aa4:	00241793          	slli	a5,s0,0x2
20402aa8:	97a6                	add	a5,a5,s1
20402aaa:	439c                	lw	a5,0(a5)
20402aac:	9782                	jalr	a5
20402aae:	b7e5                	j	20402a96 <__libc_fini_array+0x1c>

20402ab0 <__libc_init_array>:
__libc_init_array():
20402ab0:	1141                	addi	sp,sp,-16
20402ab2:	c422                	sw	s0,8(sp)
20402ab4:	c226                	sw	s1,4(sp)
20402ab6:	ffffe417          	auipc	s0,0xffffe
20402aba:	82a40413          	addi	s0,s0,-2006 # 204002e0 <_metal_tty_init_ptr>
20402abe:	ffffe497          	auipc	s1,0xffffe
20402ac2:	82248493          	addi	s1,s1,-2014 # 204002e0 <_metal_tty_init_ptr>
20402ac6:	8c81                	sub	s1,s1,s0
20402ac8:	c04a                	sw	s2,0(sp)
20402aca:	c606                	sw	ra,12(sp)
20402acc:	8489                	srai	s1,s1,0x2
20402ace:	4901                	li	s2,0
20402ad0:	02991563          	bne	s2,s1,20402afa <__libc_init_array+0x4a>
20402ad4:	ffffe417          	auipc	s0,0xffffe
20402ad8:	80c40413          	addi	s0,s0,-2036 # 204002e0 <_metal_tty_init_ptr>
20402adc:	ffffe497          	auipc	s1,0xffffe
20402ae0:	80448493          	addi	s1,s1,-2044 # 204002e0 <_metal_tty_init_ptr>
20402ae4:	8c81                	sub	s1,s1,s0
20402ae6:	8489                	srai	s1,s1,0x2
20402ae8:	4901                	li	s2,0
20402aea:	00991d63          	bne	s2,s1,20402b04 <__libc_init_array+0x54>
20402aee:	40b2                	lw	ra,12(sp)
20402af0:	4422                	lw	s0,8(sp)
20402af2:	4492                	lw	s1,4(sp)
20402af4:	4902                	lw	s2,0(sp)
20402af6:	0141                	addi	sp,sp,16
20402af8:	8082                	ret
20402afa:	401c                	lw	a5,0(s0)
20402afc:	0905                	addi	s2,s2,1
20402afe:	0411                	addi	s0,s0,4
20402b00:	9782                	jalr	a5
20402b02:	b7f9                	j	20402ad0 <__libc_init_array+0x20>
20402b04:	401c                	lw	a5,0(s0)
20402b06:	0905                	addi	s2,s2,1
20402b08:	0411                	addi	s0,s0,4
20402b0a:	9782                	jalr	a5
20402b0c:	bff9                	j	20402aea <__libc_init_array+0x3a>

20402b0e <__register_exitproc>:
__register_exitproc():
20402b0e:	88aa                	mv	a7,a0
20402b10:	5fbfe517          	auipc	a0,0x5fbfe
20402b14:	cc450513          	addi	a0,a0,-828 # 800007d4 <_global_atexit>
20402b18:	411c                	lw	a5,0(a0)
20402b1a:	ef91                	bnez	a5,20402b36 <__register_exitproc+0x28>
20402b1c:	5fbfe717          	auipc	a4,0x5fbfe
20402b20:	cc470713          	addi	a4,a4,-828 # 800007e0 <_global_atexit0>
20402b24:	c118                	sw	a4,0(a0)
20402b26:	00000513          	li	a0,0
20402b2a:	87ba                	mv	a5,a4
20402b2c:	c509                	beqz	a0,20402b36 <__register_exitproc+0x28>
20402b2e:	411c                	lw	a5,0(a0)
20402b30:	08f72423          	sw	a5,136(a4)
20402b34:	87ba                	mv	a5,a4
20402b36:	43d8                	lw	a4,4(a5)
20402b38:	487d                	li	a6,31
20402b3a:	557d                	li	a0,-1
20402b3c:	04e84663          	blt	a6,a4,20402b88 <__register_exitproc+0x7a>
20402b40:	02088d63          	beqz	a7,20402b7a <__register_exitproc+0x6c>
20402b44:	0887a803          	lw	a6,136(a5)
20402b48:	04080063          	beqz	a6,20402b88 <__register_exitproc+0x7a>
20402b4c:	00271513          	slli	a0,a4,0x2
20402b50:	9542                	add	a0,a0,a6
20402b52:	c110                	sw	a2,0(a0)
20402b54:	10082303          	lw	t1,256(a6)
20402b58:	4605                	li	a2,1
20402b5a:	00e61633          	sll	a2,a2,a4
20402b5e:	00c36333          	or	t1,t1,a2
20402b62:	10682023          	sw	t1,256(a6)
20402b66:	08d52023          	sw	a3,128(a0)
20402b6a:	4689                	li	a3,2
20402b6c:	00d89763          	bne	a7,a3,20402b7a <__register_exitproc+0x6c>
20402b70:	10482683          	lw	a3,260(a6)
20402b74:	8e55                	or	a2,a2,a3
20402b76:	10c82223          	sw	a2,260(a6)
20402b7a:	00170693          	addi	a3,a4,1
20402b7e:	070a                	slli	a4,a4,0x2
20402b80:	c3d4                	sw	a3,4(a5)
20402b82:	97ba                	add	a5,a5,a4
20402b84:	c78c                	sw	a1,8(a5)
20402b86:	4501                	li	a0,0
20402b88:	8082                	ret

20402b8a <__call_exitprocs>:
__call_exitprocs():
20402b8a:	7179                	addi	sp,sp,-48
20402b8c:	ca56                	sw	s5,20(sp)
20402b8e:	c85a                	sw	s6,16(sp)
20402b90:	c65e                	sw	s7,12(sp)
20402b92:	c462                	sw	s8,8(sp)
20402b94:	d606                	sw	ra,44(sp)
20402b96:	d422                	sw	s0,40(sp)
20402b98:	d226                	sw	s1,36(sp)
20402b9a:	d04a                	sw	s2,32(sp)
20402b9c:	ce4e                	sw	s3,28(sp)
20402b9e:	cc52                	sw	s4,24(sp)
20402ba0:	c266                	sw	s9,4(sp)
20402ba2:	8b2a                	mv	s6,a0
20402ba4:	8aae                	mv	s5,a1
20402ba6:	5fbfeb97          	auipc	s7,0x5fbfe
20402baa:	c2eb8b93          	addi	s7,s7,-978 # 800007d4 <_global_atexit>
20402bae:	4c05                	li	s8,1
20402bb0:	000ba483          	lw	s1,0(s7)
20402bb4:	cc81                	beqz	s1,20402bcc <__call_exitprocs+0x42>
20402bb6:	40c0                	lw	s0,4(s1)
20402bb8:	0884a983          	lw	s3,136(s1)
20402bbc:	fff40913          	addi	s2,s0,-1
20402bc0:	040a                	slli	s0,s0,0x2
20402bc2:	00898a33          	add	s4,s3,s0
20402bc6:	9426                	add	s0,s0,s1
20402bc8:	00095f63          	bgez	s2,20402be6 <__call_exitprocs+0x5c>
20402bcc:	50b2                	lw	ra,44(sp)
20402bce:	5422                	lw	s0,40(sp)
20402bd0:	5492                	lw	s1,36(sp)
20402bd2:	5902                	lw	s2,32(sp)
20402bd4:	49f2                	lw	s3,28(sp)
20402bd6:	4a62                	lw	s4,24(sp)
20402bd8:	4ad2                	lw	s5,20(sp)
20402bda:	4b42                	lw	s6,16(sp)
20402bdc:	4bb2                	lw	s7,12(sp)
20402bde:	4c22                	lw	s8,8(sp)
20402be0:	4c92                	lw	s9,4(sp)
20402be2:	6145                	addi	sp,sp,48
20402be4:	8082                	ret
20402be6:	000a8c63          	beqz	s5,20402bfe <__call_exitprocs+0x74>
20402bea:	00099663          	bnez	s3,20402bf6 <__call_exitprocs+0x6c>
20402bee:	197d                	addi	s2,s2,-1
20402bf0:	1a71                	addi	s4,s4,-4
20402bf2:	1471                	addi	s0,s0,-4
20402bf4:	bfd1                	j	20402bc8 <__call_exitprocs+0x3e>
20402bf6:	07ca2783          	lw	a5,124(s4)
20402bfa:	ff579ae3          	bne	a5,s5,20402bee <__call_exitprocs+0x64>
20402bfe:	40d8                	lw	a4,4(s1)
20402c00:	405c                	lw	a5,4(s0)
20402c02:	177d                	addi	a4,a4,-1
20402c04:	03271863          	bne	a4,s2,20402c34 <__call_exitprocs+0xaa>
20402c08:	0124a223          	sw	s2,4(s1)
20402c0c:	d3ed                	beqz	a5,20402bee <__call_exitprocs+0x64>
20402c0e:	0044ac83          	lw	s9,4(s1)
20402c12:	00098863          	beqz	s3,20402c22 <__call_exitprocs+0x98>
20402c16:	1009a683          	lw	a3,256(s3)
20402c1a:	012c1733          	sll	a4,s8,s2
20402c1e:	8ef9                	and	a3,a3,a4
20402c20:	ee89                	bnez	a3,20402c3a <__call_exitprocs+0xb0>
20402c22:	9782                	jalr	a5
20402c24:	40d8                	lw	a4,4(s1)
20402c26:	000ba783          	lw	a5,0(s7)
20402c2a:	f99713e3          	bne	a4,s9,20402bb0 <__call_exitprocs+0x26>
20402c2e:	fcf480e3          	beq	s1,a5,20402bee <__call_exitprocs+0x64>
20402c32:	bfbd                	j	20402bb0 <__call_exitprocs+0x26>
20402c34:	00042223          	sw	zero,4(s0)
20402c38:	bfd1                	j	20402c0c <__call_exitprocs+0x82>
20402c3a:	1049a683          	lw	a3,260(s3)
20402c3e:	ffca2583          	lw	a1,-4(s4)
20402c42:	8f75                	and	a4,a4,a3
20402c44:	e701                	bnez	a4,20402c4c <__call_exitprocs+0xc2>
20402c46:	855a                	mv	a0,s6
20402c48:	9782                	jalr	a5
20402c4a:	bfe9                	j	20402c24 <__call_exitprocs+0x9a>
20402c4c:	852e                	mv	a0,a1
20402c4e:	9782                	jalr	a5
20402c50:	bfd1                	j	20402c24 <__call_exitprocs+0x9a>

20402c52 <metal_init>:
metal_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402c52:	1101                	addi	sp,sp,-32
20402c54:	ce06                	sw	ra,28(sp)
20402c56:	cc22                	sw	s0,24(sp)
20402c58:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402c5a:	800007b7          	lui	a5,0x80000
20402c5e:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff308>
20402c62:	efa9                	bnez	a5,20402cbc <metal_init+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402c64:	800007b7          	lui	a5,0x80000
20402c68:	4705                	li	a4,1
20402c6a:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff308>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402c6e:	204007b7          	lui	a5,0x20400
20402c72:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402c76:	204007b7          	lui	a5,0x20400
20402c7a:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402c7e:	04e7f163          	bgeu	a5,a4,20402cc0 <metal_init+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402c82:	204007b7          	lui	a5,0x20400
20402c86:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402c8a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402c8e:	a831                	j	20402caa <metal_init+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402c90:	fec42783          	lw	a5,-20(s0)
20402c94:	439c                	lw	a5,0(a5)
20402c96:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:33

        func();
20402c9a:	fe842783          	lw	a5,-24(s0)
20402c9e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:35

        funcptr += 1;
20402ca0:	fec42783          	lw	a5,-20(s0)
20402ca4:	0791                	addi	a5,a5,4
20402ca6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402caa:	fec42703          	lw	a4,-20(s0)
20402cae:	204007b7          	lui	a5,0x20400
20402cb2:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402cb6:	fcf71de3          	bne	a4,a5,20402c90 <metal_init+0x3e>
20402cba:	a021                	j	20402cc2 <metal_init+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:21
        return;
20402cbc:	0001                	nop
20402cbe:	a011                	j	20402cc2 <metal_init+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:26
        return;
20402cc0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:37
    }
}
20402cc2:	40f2                	lw	ra,28(sp)
20402cc4:	4462                	lw	s0,24(sp)
20402cc6:	6105                	addi	sp,sp,32
20402cc8:	8082                	ret

20402cca <metal_fini>:
metal_fini():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:39

void metal_fini(void) {
20402cca:	1101                	addi	sp,sp,-32
20402ccc:	ce06                	sw	ra,28(sp)
20402cce:	cc22                	sw	s0,24(sp)
20402cd0:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402cd2:	800007b7          	lui	a5,0x80000
20402cd6:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff30c>
20402cda:	efa9                	bnez	a5,20402d34 <metal_fini+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402cdc:	800007b7          	lui	a5,0x80000
20402ce0:	4705                	li	a4,1
20402ce2:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff30c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20402ce6:	204007b7          	lui	a5,0x20400
20402cea:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402cee:	204007b7          	lui	a5,0x20400
20402cf2:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402cf6:	04e7f163          	bgeu	a5,a4,20402d38 <metal_fini+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20402cfa:	204007b7          	lui	a5,0x20400
20402cfe:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402d02:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402d06:	a831                	j	20402d22 <metal_fini+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20402d08:	fec42783          	lw	a5,-20(s0)
20402d0c:	439c                	lw	a5,0(a5)
20402d0e:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:55

        func();
20402d12:	fe842783          	lw	a5,-24(s0)
20402d16:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:57

        funcptr += 1;
20402d18:	fec42783          	lw	a5,-20(s0)
20402d1c:	0791                	addi	a5,a5,4
20402d1e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402d22:	fec42703          	lw	a4,-20(s0)
20402d26:	204007b7          	lui	a5,0x20400
20402d2a:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402d2e:	fcf71de3          	bne	a4,a5,20402d08 <metal_fini+0x3e>
20402d32:	a021                	j	20402d3a <metal_fini+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:43
        return;
20402d34:	0001                	nop
20402d36:	a011                	j	20402d3a <metal_fini+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:48
        return;
20402d38:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:59
    }
}
20402d3a:	40f2                	lw	ra,28(sp)
20402d3c:	4462                	lw	s0,24(sp)
20402d3e:	6105                	addi	sp,sp,32
20402d40:	8082                	ret

20402d42 <metal_init_run>:
metal_init_run():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402d42:	1141                	addi	sp,sp,-16
20402d44:	c606                	sw	ra,12(sp)
20402d46:	c422                	sw	s0,8(sp)
20402d48:	0800                	addi	s0,sp,16
20402d4a:	3721                	jal	20402c52 <metal_init>
20402d4c:	0001                	nop
20402d4e:	40b2                	lw	ra,12(sp)
20402d50:	4422                	lw	s0,8(sp)
20402d52:	0141                	addi	sp,sp,16
20402d54:	8082                	ret

20402d56 <metal_fini_run>:
metal_fini_run():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20402d56:	1141                	addi	sp,sp,-16
20402d58:	c606                	sw	ra,12(sp)
20402d5a:	c422                	sw	s0,8(sp)
20402d5c:	0800                	addi	s0,sp,16
20402d5e:	37b5                	jal	20402cca <metal_fini>
20402d60:	0001                	nop
20402d62:	40b2                	lw	ra,12(sp)
20402d64:	4422                	lw	s0,8(sp)
20402d66:	0141                	addi	sp,sp,16
20402d68:	8082                	ret

20402d6a <__metal_shutdown_exit>:
__metal_shutdown_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20402d6a:	1101                	addi	sp,sp,-32
20402d6c:	ce06                	sw	ra,28(sp)
20402d6e:	cc22                	sw	s0,24(sp)
20402d70:	1000                	addi	s0,sp,32
20402d72:	fea42623          	sw	a0,-20(s0)
20402d76:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20402d7a:	fec42783          	lw	a5,-20(s0)
20402d7e:	439c                	lw	a5,0(a5)
20402d80:	439c                	lw	a5,0(a5)
20402d82:	fe842583          	lw	a1,-24(s0)
20402d86:	fec42503          	lw	a0,-20(s0)
20402d8a:	9782                	jalr	a5

20402d8c <metal_shutdown>:
metal_shutdown():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20402d8c:	1101                	addi	sp,sp,-32
20402d8e:	ce06                	sw	ra,28(sp)
20402d90:	cc22                	sw	s0,24(sp)
20402d92:	1000                	addi	s0,sp,32
20402d94:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20402d98:	fec42583          	lw	a1,-20(s0)
20402d9c:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20402da0:	37e9                	jal	20402d6a <__metal_shutdown_exit>

20402da2 <metal_tty_putc>:
metal_tty_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402da2:	1101                	addi	sp,sp,-32
20402da4:	ce06                	sw	ra,28(sp)
20402da6:	cc22                	sw	s0,24(sp)
20402da8:	1000                	addi	s0,sp,32
20402daa:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20402dae:	fec42583          	lw	a1,-20(s0)
20402db2:	800007b7          	lui	a5,0x80000
20402db6:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20402dba:	282d                	jal	20402df4 <metal_uart_putc>
20402dbc:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:14
}
20402dbe:	853e                	mv	a0,a5
20402dc0:	40f2                	lw	ra,28(sp)
20402dc2:	4462                	lw	s0,24(sp)
20402dc4:	6105                	addi	sp,sp,32
20402dc6:	8082                	ret

20402dc8 <metal_uart_init>:
metal_uart_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402dc8:	1101                	addi	sp,sp,-32
20402dca:	ce06                	sw	ra,28(sp)
20402dcc:	cc22                	sw	s0,24(sp)
20402dce:	1000                	addi	s0,sp,32
20402dd0:	fea42623          	sw	a0,-20(s0)
20402dd4:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402dd8:	fec42783          	lw	a5,-20(s0)
20402ddc:	439c                	lw	a5,0(a5)
20402dde:	439c                	lw	a5,0(a5)
20402de0:	fe842583          	lw	a1,-24(s0)
20402de4:	fec42503          	lw	a0,-20(s0)
20402de8:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:61
}
20402dea:	0001                	nop
20402dec:	40f2                	lw	ra,28(sp)
20402dee:	4462                	lw	s0,24(sp)
20402df0:	6105                	addi	sp,sp,32
20402df2:	8082                	ret

20402df4 <metal_uart_putc>:
metal_uart_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402df4:	1101                	addi	sp,sp,-32
20402df6:	ce06                	sw	ra,28(sp)
20402df8:	cc22                	sw	s0,24(sp)
20402dfa:	1000                	addi	s0,sp,32
20402dfc:	fea42623          	sw	a0,-20(s0)
20402e00:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402e04:	fec42783          	lw	a5,-20(s0)
20402e08:	439c                	lw	a5,0(a5)
20402e0a:	43dc                	lw	a5,4(a5)
20402e0c:	fe842583          	lw	a1,-24(s0)
20402e10:	fec42503          	lw	a0,-20(s0)
20402e14:	9782                	jalr	a5
20402e16:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:71
}
20402e18:	853e                	mv	a0,a5
20402e1a:	40f2                	lw	ra,28(sp)
20402e1c:	4462                	lw	s0,24(sp)
20402e1e:	6105                	addi	sp,sp,32
20402e20:	8082                	ret

20402e22 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20402e22:	1101                	addi	sp,sp,-32
20402e24:	ce06                	sw	ra,28(sp)
20402e26:	cc22                	sw	s0,24(sp)
20402e28:	1000                	addi	s0,sp,32
20402e2a:	fea42623          	sw	a0,-20(s0)
20402e2e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20402e32:	fec42783          	lw	a5,-20(s0)
20402e36:	439c                	lw	a5,0(a5)
20402e38:	4bdc                	lw	a5,20(a5)
20402e3a:	fe842583          	lw	a1,-24(s0)
20402e3e:	fec42503          	lw	a0,-20(s0)
20402e42:	9782                	jalr	a5
20402e44:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:113
}
20402e46:	853e                	mv	a0,a5
20402e48:	40f2                	lw	ra,28(sp)
20402e4a:	4462                	lw	s0,24(sp)
20402e4c:	6105                	addi	sp,sp,32
20402e4e:	8082                	ret

20402e50 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20402e50:	1101                	addi	sp,sp,-32
20402e52:	ce22                	sw	s0,28(sp)
20402e54:	1000                	addi	s0,sp,32
20402e56:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402e5a:	fec42703          	lw	a4,-20(s0)
20402e5e:	800007b7          	lui	a5,0x80000
20402e62:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
20402e66:	00f71563          	bne	a4,a5,20402e70 <__metal_driver_sifive_clint0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402e6a:	020007b7          	lui	a5,0x2000
20402e6e:	a011                	j	20402e72 <__metal_driver_sifive_clint0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:207
	}
	else {
		return 0;
20402e70:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:209
	}
}
20402e72:	853e                	mv	a0,a5
20402e74:	4472                	lw	s0,28(sp)
20402e76:	6105                	addi	sp,sp,32
20402e78:	8082                	ret

20402e7a <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402e7a:	1101                	addi	sp,sp,-32
20402e7c:	ce22                	sw	s0,28(sp)
20402e7e:	1000                	addi	s0,sp,32
20402e80:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402e84:	fec42703          	lw	a4,-20(s0)
20402e88:	800007b7          	lui	a5,0x80000
20402e8c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
20402e90:	00f71463          	bne	a4,a5,20402e98 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20402e94:	4789                	li	a5,2
20402e96:	a011                	j	20402e9a <__metal_driver_sifive_clint0_num_interrupts+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:227
	}
	else {
		return 0;
20402e98:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:229
	}
}
20402e9a:	853e                	mv	a0,a5
20402e9c:	4472                	lw	s0,28(sp)
20402e9e:	6105                	addi	sp,sp,32
20402ea0:	8082                	ret

20402ea2 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402ea2:	1101                	addi	sp,sp,-32
20402ea4:	ce22                	sw	s0,28(sp)
20402ea6:	1000                	addi	s0,sp,32
20402ea8:	fea42623          	sw	a0,-20(s0)
20402eac:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:233
	if (idx == 0) {
20402eb0:	fe842783          	lw	a5,-24(s0)
20402eb4:	e791                	bnez	a5,20402ec0 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402eb6:	800007b7          	lui	a5,0x80000
20402eba:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffebb8>
20402ebe:	a821                	j	20402ed6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20402ec0:	fe842703          	lw	a4,-24(s0)
20402ec4:	4785                	li	a5,1
20402ec6:	00f71763          	bne	a4,a5,20402ed4 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402eca:	800007b7          	lui	a5,0x80000
20402ece:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffebb8>
20402ed2:	a011                	j	20402ed6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:240
	}
	else {
		return NULL;
20402ed4:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:242
	}
}
20402ed6:	853e                	mv	a0,a5
20402ed8:	4472                	lw	s0,28(sp)
20402eda:	6105                	addi	sp,sp,32
20402edc:	8082                	ret

20402ede <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20402ede:	1101                	addi	sp,sp,-32
20402ee0:	ce22                	sw	s0,28(sp)
20402ee2:	1000                	addi	s0,sp,32
20402ee4:	fea42623          	sw	a0,-20(s0)
20402ee8:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:246
	if (idx == 0) {
20402eec:	fe842783          	lw	a5,-24(s0)
20402ef0:	e399                	bnez	a5,20402ef6 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:247
		return 3;
20402ef2:	478d                	li	a5,3
20402ef4:	a809                	j	20402f06 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402ef6:	fe842703          	lw	a4,-24(s0)
20402efa:	4785                	li	a5,1
20402efc:	00f71463          	bne	a4,a5,20402f04 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:250
		return 7;
20402f00:	479d                	li	a5,7
20402f02:	a011                	j	20402f06 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:253
	}
	else {
		return 0;
20402f04:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:255
	}
}
20402f06:	853e                	mv	a0,a5
20402f08:	4472                	lw	s0,28(sp)
20402f0a:	6105                	addi	sp,sp,32
20402f0c:	8082                	ret

20402f0e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20402f0e:	715d                	addi	sp,sp,-80
20402f10:	c686                	sw	ra,76(sp)
20402f12:	c4a2                	sw	s0,72(sp)
20402f14:	c2ca                	sw	s2,68(sp)
20402f16:	c0ce                	sw	s3,64(sp)
20402f18:	de52                	sw	s4,60(sp)
20402f1a:	dc56                	sw	s5,56(sp)
20402f1c:	da5a                	sw	s6,52(sp)
20402f1e:	d85e                	sw	s7,48(sp)
20402f20:	d662                	sw	s8,44(sp)
20402f22:	d466                	sw	s9,40(sp)
20402f24:	0880                	addi	s0,sp,80
20402f26:	faa42e23          	sw	a0,-68(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402f2a:	fbc42783          	lw	a5,-68(s0)
20402f2e:	853e                	mv	a0,a5
20402f30:	3705                	jal	20402e50 <__metal_driver_sifive_clint0_control_base>
20402f32:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20402f36:	fcc42703          	lw	a4,-52(s0)
20402f3a:	67b1                	lui	a5,0xc
20402f3c:	17f1                	addi	a5,a5,-4
20402f3e:	97ba                	add	a5,a5,a4
20402f40:	439c                	lw	a5,0(a5)
20402f42:	fcf42423          	sw	a5,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402f46:	fcc42703          	lw	a4,-52(s0)
20402f4a:	67b1                	lui	a5,0xc
20402f4c:	17e1                	addi	a5,a5,-8
20402f4e:	97ba                	add	a5,a5,a4
20402f50:	439c                	lw	a5,0(a5)
20402f52:	fcf42223          	sw	a5,-60(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402f56:	fcc42703          	lw	a4,-52(s0)
20402f5a:	67b1                	lui	a5,0xc
20402f5c:	17f1                	addi	a5,a5,-4
20402f5e:	97ba                	add	a5,a5,a4
20402f60:	439c                	lw	a5,0(a5)
20402f62:	fc842703          	lw	a4,-56(s0)
20402f66:	fcf718e3          	bne	a4,a5,20402f36 <__metal_clint0_mtime_get+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20402f6a:	fc842783          	lw	a5,-56(s0)
20402f6e:	8c3e                	mv	s8,a5
20402f70:	4c81                	li	s9,0
20402f72:	000c1993          	slli	s3,s8,0x0
20402f76:	4901                	li	s2,0
20402f78:	fc442783          	lw	a5,-60(s0)
20402f7c:	8a3e                	mv	s4,a5
20402f7e:	4a81                	li	s5,0
20402f80:	01496b33          	or	s6,s2,s4
20402f84:	0159ebb3          	or	s7,s3,s5
20402f88:	875a                	mv	a4,s6
20402f8a:	87de                	mv	a5,s7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:30
}
20402f8c:	853a                	mv	a0,a4
20402f8e:	85be                	mv	a1,a5
20402f90:	40b6                	lw	ra,76(sp)
20402f92:	4426                	lw	s0,72(sp)
20402f94:	4916                	lw	s2,68(sp)
20402f96:	4986                	lw	s3,64(sp)
20402f98:	5a72                	lw	s4,60(sp)
20402f9a:	5ae2                	lw	s5,56(sp)
20402f9c:	5b52                	lw	s6,52(sp)
20402f9e:	5bc2                	lw	s7,48(sp)
20402fa0:	5c32                	lw	s8,44(sp)
20402fa2:	5ca2                	lw	s9,40(sp)
20402fa4:	6161                	addi	sp,sp,80
20402fa6:	8082                	ret

20402fa8 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20402fa8:	7179                	addi	sp,sp,-48
20402faa:	d606                	sw	ra,44(sp)
20402fac:	d422                	sw	s0,40(sp)
20402fae:	d24a                	sw	s2,36(sp)
20402fb0:	d04e                	sw	s3,32(sp)
20402fb2:	1800                	addi	s0,sp,48
20402fb4:	fca42e23          	sw	a0,-36(s0)
20402fb8:	fcb42c23          	sw	a1,-40(s0)
20402fbc:	fcc42823          	sw	a2,-48(s0)
20402fc0:	fcd42a23          	sw	a3,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402fc4:	fdc42783          	lw	a5,-36(s0)
20402fc8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402fcc:	fec42783          	lw	a5,-20(s0)
20402fd0:	853e                	mv	a0,a5
20402fd2:	3dbd                	jal	20402e50 <__metal_driver_sifive_clint0_control_base>
20402fd4:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402fd8:	fd842783          	lw	a5,-40(s0)
20402fdc:	078e                	slli	a5,a5,0x3
20402fde:	873e                	mv	a4,a5
20402fe0:	fe842783          	lw	a5,-24(s0)
20402fe4:	973e                	add	a4,a4,a5
20402fe6:	6791                	lui	a5,0x4
20402fe8:	0791                	addi	a5,a5,4
20402fea:	97ba                	add	a5,a5,a4
20402fec:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20402fee:	57fd                	li	a5,-1
20402ff0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402ff2:	fd842783          	lw	a5,-40(s0)
20402ff6:	078e                	slli	a5,a5,0x3
20402ff8:	873e                	mv	a4,a5
20402ffa:	fe842783          	lw	a5,-24(s0)
20402ffe:	973e                	add	a4,a4,a5
20403000:	6791                	lui	a5,0x4
20403002:	97ba                	add	a5,a5,a4
20403004:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20403006:	fd042783          	lw	a5,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2040300a:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2040300c:	fd442783          	lw	a5,-44(s0)
20403010:	0007d913          	srli	s2,a5,0x0
20403014:	4981                	li	s3,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20403016:	fd842783          	lw	a5,-40(s0)
2040301a:	078e                	slli	a5,a5,0x3
2040301c:	873e                	mv	a4,a5
2040301e:	fe842783          	lw	a5,-24(s0)
20403022:	973e                	add	a4,a4,a5
20403024:	6791                	lui	a5,0x4
20403026:	0791                	addi	a5,a5,4
20403028:	97ba                	add	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2040302a:	874a                	mv	a4,s2
2040302c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2040302e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:55
}
20403030:	853e                	mv	a0,a5
20403032:	50b2                	lw	ra,44(sp)
20403034:	5422                	lw	s0,40(sp)
20403036:	5912                	lw	s2,36(sp)
20403038:	5982                	lw	s3,32(sp)
2040303a:	6145                	addi	sp,sp,48
2040303c:	8082                	ret

2040303e <_get_cpu_intc>:
_get_cpu_intc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040303e:	1101                	addi	sp,sp,-32
20403040:	ce06                	sw	ra,28(sp)
20403042:	cc22                	sw	s0,24(sp)
20403044:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20403046:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040304a:	f14027f3          	csrr	a5,mhartid
2040304e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403052:	fec42783          	lw	a5,-20(s0)
20403056:	853e                	mv	a0,a5
20403058:	280040ef          	jal	ra,204072d8 <metal_cpu_get>
2040305c:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20403060:	fe842503          	lw	a0,-24(s0)
20403064:	24e040ef          	jal	ra,204072b2 <metal_cpu_interrupt_controller>
20403068:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:65
}
2040306a:	853e                	mv	a0,a5
2040306c:	40f2                	lw	ra,28(sp)
2040306e:	4462                	lw	s0,24(sp)
20403070:	6105                	addi	sp,sp,32
20403072:	8082                	ret

20403074 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20403074:	7139                	addi	sp,sp,-64
20403076:	de06                	sw	ra,60(sp)
20403078:	dc22                	sw	s0,56(sp)
2040307a:	0080                	addi	s0,sp,64
2040307c:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403080:	fcc42503          	lw	a0,-52(s0)
20403084:	3bdd                	jal	20402e7a <__metal_driver_sifive_clint0_num_interrupts>
20403086:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2040308a:	fcc42783          	lw	a5,-52(s0)
2040308e:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20403092:	fe442783          	lw	a5,-28(s0)
20403096:	43dc                	lw	a5,4(a5)
20403098:	efa9                	bnez	a5,204030f2 <__metal_driver_riscv_clint0_init+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
2040309a:	fe042623          	sw	zero,-20(s0)
2040309e:	a081                	j	204030de <__metal_driver_riscv_clint0_init+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204030a0:	fec42583          	lw	a1,-20(s0)
204030a4:	fcc42503          	lw	a0,-52(s0)
204030a8:	3bed                	jal	20402ea2 <__metal_driver_sifive_clint0_interrupt_parents>
204030aa:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204030ae:	fec42583          	lw	a1,-20(s0)
204030b2:	fcc42503          	lw	a0,-52(s0)
204030b6:	3525                	jal	20402ede <__metal_driver_sifive_clint0_interrupt_lines>
204030b8:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204030bc:	fe042783          	lw	a5,-32(s0)
204030c0:	439c                	lw	a5,0(a5)
204030c2:	4fdc                	lw	a5,28(a5)
204030c4:	fcc42683          	lw	a3,-52(s0)
204030c8:	4601                	li	a2,0
204030ca:	fdc42583          	lw	a1,-36(s0)
204030ce:	fe042503          	lw	a0,-32(s0)
204030d2:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204030d4:	fec42783          	lw	a5,-20(s0)
204030d8:	0785                	addi	a5,a5,1
204030da:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204030de:	fec42703          	lw	a4,-20(s0)
204030e2:	fe842783          	lw	a5,-24(s0)
204030e6:	faf74de3          	blt	a4,a5,204030a0 <__metal_driver_riscv_clint0_init+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204030ea:	fe442783          	lw	a5,-28(s0)
204030ee:	4705                	li	a4,1
204030f0:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204030f2:	0001                	nop
204030f4:	50f2                	lw	ra,60(sp)
204030f6:	5462                	lw	s0,56(sp)
204030f8:	6121                	addi	sp,sp,64
204030fa:	8082                	ret

204030fc <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
204030fc:	7139                	addi	sp,sp,-64
204030fe:	de06                	sw	ra,60(sp)
20403100:	dc22                	sw	s0,56(sp)
20403102:	0080                	addi	s0,sp,64
20403104:	fca42623          	sw	a0,-52(s0)
20403108:	fcb42423          	sw	a1,-56(s0)
2040310c:	fcc42223          	sw	a2,-60(s0)
20403110:	fcd42023          	sw	a3,-64(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20403114:	57fd                	li	a5,-1
20403116:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2040311a:	440010ef          	jal	ra,2040455a <__metal_controller_interrupt_vector_mode>
2040311e:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20403122:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403126:	3f21                	jal	2040303e <_get_cpu_intc>
20403128:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2040312c:	fcc42503          	lw	a0,-52(s0)
20403130:	33a9                	jal	20402e7a <__metal_driver_sifive_clint0_num_interrupts>
20403132:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20403136:	fe042703          	lw	a4,-32(s0)
2040313a:	4785                	li	a5,1
2040313c:	00f70863          	beq	a4,a5,2040314c <__metal_driver_riscv_clint0_register+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403140:	fe042783          	lw	a5,-32(s0)
20403144:	c781                	beqz	a5,2040314c <__metal_driver_riscv_clint0_register+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20403146:	fec42783          	lw	a5,-20(s0)
2040314a:	a049                	j	204031cc <__metal_driver_riscv_clint0_register+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2040314c:	fe042223          	sw	zero,-28(s0)
20403150:	a091                	j	20403194 <__metal_driver_riscv_clint0_register+0x98>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403152:	fe442583          	lw	a1,-28(s0)
20403156:	fcc42503          	lw	a0,-52(s0)
2040315a:	3351                	jal	20402ede <__metal_driver_sifive_clint0_interrupt_lines>
2040315c:	fca42a23          	sw	a0,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403160:	fe442583          	lw	a1,-28(s0)
20403164:	fcc42503          	lw	a0,-52(s0)
20403168:	3b2d                	jal	20402ea2 <__metal_driver_sifive_clint0_interrupt_parents>
2040316a:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040316e:	fdc42703          	lw	a4,-36(s0)
20403172:	fe842783          	lw	a5,-24(s0)
20403176:	00f71863          	bne	a4,a5,20403186 <__metal_driver_riscv_clint0_register+0x8a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2040317a:	fc842703          	lw	a4,-56(s0)
2040317e:	fd442783          	lw	a5,-44(s0)
20403182:	02f70063          	beq	a4,a5,204031a2 <__metal_driver_riscv_clint0_register+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20403186:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2040318a:	fe442783          	lw	a5,-28(s0)
2040318e:	0785                	addi	a5,a5,1
20403190:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20403194:	fe442703          	lw	a4,-28(s0)
20403198:	fd842783          	lw	a5,-40(s0)
2040319c:	faf74be3          	blt	a4,a5,20403152 <__metal_driver_riscv_clint0_register+0x56>
204031a0:	a011                	j	204031a4 <__metal_driver_riscv_clint0_register+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204031a2:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204031a4:	fe842783          	lw	a5,-24(s0)
204031a8:	c385                	beqz	a5,204031c8 <__metal_driver_riscv_clint0_register+0xcc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204031aa:	fe842783          	lw	a5,-24(s0)
204031ae:	439c                	lw	a5,0(a5)
204031b0:	4fdc                	lw	a5,28(a5)
204031b2:	fc042683          	lw	a3,-64(s0)
204031b6:	fc442603          	lw	a2,-60(s0)
204031ba:	fc842583          	lw	a1,-56(s0)
204031be:	fe842503          	lw	a0,-24(s0)
204031c2:	9782                	jalr	a5
204031c4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
204031c8:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:115
}
204031cc:	853e                	mv	a0,a5
204031ce:	50f2                	lw	ra,60(sp)
204031d0:	5462                	lw	s0,56(sp)
204031d2:	6121                	addi	sp,sp,64
204031d4:	8082                	ret

204031d6 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204031d6:	7179                	addi	sp,sp,-48
204031d8:	d622                	sw	s0,44(sp)
204031da:	1800                	addi	s0,sp,48
204031dc:	fca42e23          	sw	a0,-36(s0)
204031e0:	fcb42c23          	sw	a1,-40(s0)
204031e4:	fcc42a23          	sw	a2,-44(s0)
204031e8:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204031ec:	57fd                	li	a5,-1
204031ee:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204031f2:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:123
}
204031f6:	853e                	mv	a0,a5
204031f8:	5432                	lw	s0,44(sp)
204031fa:	6145                	addi	sp,sp,48
204031fc:	8082                	ret

204031fe <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
204031fe:	1101                	addi	sp,sp,-32
20403200:	ce06                	sw	ra,28(sp)
20403202:	cc22                	sw	s0,24(sp)
20403204:	1000                	addi	s0,sp,32
20403206:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2040320a:	350010ef          	jal	ra,2040455a <__metal_controller_interrupt_vector_mode>
2040320e:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:128
}
20403210:	853e                	mv	a0,a5
20403212:	40f2                	lw	ra,28(sp)
20403214:	4462                	lw	s0,24(sp)
20403216:	6105                	addi	sp,sp,32
20403218:	8082                	ret

2040321a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2040321a:	7179                	addi	sp,sp,-48
2040321c:	d606                	sw	ra,44(sp)
2040321e:	d422                	sw	s0,40(sp)
20403220:	1800                	addi	s0,sp,48
20403222:	fca42e23          	sw	a0,-36(s0)
20403226:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2040322a:	57fd                	li	a5,-1
2040322c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403230:	3539                	jal	2040303e <_get_cpu_intc>
20403232:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20403236:	fe842783          	lw	a5,-24(s0)
2040323a:	c395                	beqz	a5,2040325e <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2040323c:	fd842703          	lw	a4,-40(s0)
20403240:	4785                	li	a5,1
20403242:	02e7e063          	bltu	a5,a4,20403262 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20403246:	fe842783          	lw	a5,-24(s0)
2040324a:	439c                	lw	a5,0(a5)
2040324c:	43dc                	lw	a5,4(a5)
2040324e:	fd842583          	lw	a1,-40(s0)
20403252:	fe842503          	lw	a0,-24(s0)
20403256:	9782                	jalr	a5
20403258:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2040325c:	a021                	j	20403264 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040325e:	0001                	nop
20403260:	a011                	j	20403264 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403262:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20403264:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:148
}
20403268:	853e                	mv	a0,a5
2040326a:	50b2                	lw	ra,44(sp)
2040326c:	5422                	lw	s0,40(sp)
2040326e:	6145                	addi	sp,sp,48
20403270:	8082                	ret

20403272 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403272:	7139                	addi	sp,sp,-64
20403274:	de06                	sw	ra,60(sp)
20403276:	dc22                	sw	s0,56(sp)
20403278:	0080                	addi	s0,sp,64
2040327a:	fca42623          	sw	a0,-52(s0)
2040327e:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403282:	57fd                	li	a5,-1
20403284:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20403288:	fc842783          	lw	a5,-56(s0)
2040328c:	c7c9                	beqz	a5,20403316 <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2040328e:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403292:	3375                	jal	2040303e <_get_cpu_intc>
20403294:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403298:	fcc42503          	lw	a0,-52(s0)
2040329c:	3ef9                	jal	20402e7a <__metal_driver_sifive_clint0_num_interrupts>
2040329e:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204032a2:	fe042223          	sw	zero,-28(s0)
204032a6:	a091                	j	204032ea <__metal_driver_riscv_clint0_enable+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204032a8:	fe442583          	lw	a1,-28(s0)
204032ac:	fcc42503          	lw	a0,-52(s0)
204032b0:	313d                	jal	20402ede <__metal_driver_sifive_clint0_interrupt_lines>
204032b2:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204032b6:	fe442583          	lw	a1,-28(s0)
204032ba:	fcc42503          	lw	a0,-52(s0)
204032be:	36d5                	jal	20402ea2 <__metal_driver_sifive_clint0_interrupt_parents>
204032c0:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
204032c4:	fe042703          	lw	a4,-32(s0)
204032c8:	fe842783          	lw	a5,-24(s0)
204032cc:	00f71863          	bne	a4,a5,204032dc <__metal_driver_riscv_clint0_enable+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204032d0:	fc842703          	lw	a4,-56(s0)
204032d4:	fd842783          	lw	a5,-40(s0)
204032d8:	02f70063          	beq	a4,a5,204032f8 <__metal_driver_riscv_clint0_enable+0x86>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
204032dc:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204032e0:	fe442783          	lw	a5,-28(s0)
204032e4:	0785                	addi	a5,a5,1
204032e6:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204032ea:	fe442703          	lw	a4,-28(s0)
204032ee:	fdc42783          	lw	a5,-36(s0)
204032f2:	faf74be3          	blt	a4,a5,204032a8 <__metal_driver_riscv_clint0_enable+0x36>
204032f6:	a011                	j	204032fa <__metal_driver_riscv_clint0_enable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
204032f8:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
204032fa:	fe842783          	lw	a5,-24(s0)
204032fe:	cf81                	beqz	a5,20403316 <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20403300:	fe842783          	lw	a5,-24(s0)
20403304:	439c                	lw	a5,0(a5)
20403306:	53dc                	lw	a5,36(a5)
20403308:	fc842583          	lw	a1,-56(s0)
2040330c:	fe842503          	lw	a0,-24(s0)
20403310:	9782                	jalr	a5
20403312:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20403316:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:178
}
2040331a:	853e                	mv	a0,a5
2040331c:	50f2                	lw	ra,60(sp)
2040331e:	5462                	lw	s0,56(sp)
20403320:	6121                	addi	sp,sp,64
20403322:	8082                	ret

20403324 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20403324:	7139                	addi	sp,sp,-64
20403326:	de06                	sw	ra,60(sp)
20403328:	dc22                	sw	s0,56(sp)
2040332a:	0080                	addi	s0,sp,64
2040332c:	fca42623          	sw	a0,-52(s0)
20403330:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20403334:	57fd                	li	a5,-1
20403336:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2040333a:	fc842783          	lw	a5,-56(s0)
2040333e:	c7d9                	beqz	a5,204033cc <__metal_driver_riscv_clint0_disable+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20403340:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403344:	39ed                	jal	2040303e <_get_cpu_intc>
20403346:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040334a:	fcc42503          	lw	a0,-52(s0)
2040334e:	b2dff0ef          	jal	ra,20402e7a <__metal_driver_sifive_clint0_num_interrupts>
20403352:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20403356:	fe042223          	sw	zero,-28(s0)
2040335a:	a099                	j	204033a0 <__metal_driver_riscv_clint0_disable+0x7c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040335c:	fe442583          	lw	a1,-28(s0)
20403360:	fcc42503          	lw	a0,-52(s0)
20403364:	3ead                	jal	20402ede <__metal_driver_sifive_clint0_interrupt_lines>
20403366:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040336a:	fe442583          	lw	a1,-28(s0)
2040336e:	fcc42503          	lw	a0,-52(s0)
20403372:	b31ff0ef          	jal	ra,20402ea2 <__metal_driver_sifive_clint0_interrupt_parents>
20403376:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
2040337a:	fe042703          	lw	a4,-32(s0)
2040337e:	fe842783          	lw	a5,-24(s0)
20403382:	00f71863          	bne	a4,a5,20403392 <__metal_driver_riscv_clint0_disable+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20403386:	fc842703          	lw	a4,-56(s0)
2040338a:	fd842783          	lw	a5,-40(s0)
2040338e:	02f70063          	beq	a4,a5,204033ae <__metal_driver_riscv_clint0_disable+0x8a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20403392:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403396:	fe442783          	lw	a5,-28(s0)
2040339a:	0785                	addi	a5,a5,1
2040339c:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204033a0:	fe442703          	lw	a4,-28(s0)
204033a4:	fdc42783          	lw	a5,-36(s0)
204033a8:	faf74ae3          	blt	a4,a5,2040335c <__metal_driver_riscv_clint0_disable+0x38>
204033ac:	a011                	j	204033b0 <__metal_driver_riscv_clint0_disable+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204033ae:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204033b0:	fe842783          	lw	a5,-24(s0)
204033b4:	cf81                	beqz	a5,204033cc <__metal_driver_riscv_clint0_disable+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204033b6:	fe842783          	lw	a5,-24(s0)
204033ba:	439c                	lw	a5,0(a5)
204033bc:	579c                	lw	a5,40(a5)
204033be:	fc842583          	lw	a1,-56(s0)
204033c2:	fe842503          	lw	a0,-24(s0)
204033c6:	9782                	jalr	a5
204033c8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
204033cc:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:208
}
204033d0:	853e                	mv	a0,a5
204033d2:	50f2                	lw	ra,60(sp)
204033d4:	5462                	lw	s0,56(sp)
204033d6:	6121                	addi	sp,sp,64
204033d8:	8082                	ret

204033da <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
204033da:	7179                	addi	sp,sp,-48
204033dc:	d606                	sw	ra,44(sp)
204033de:	d422                	sw	s0,40(sp)
204033e0:	1800                	addi	s0,sp,48
204033e2:	fca42e23          	sw	a0,-36(s0)
204033e6:	fcb42c23          	sw	a1,-40(s0)
204033ea:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
204033ee:	57fd                	li	a5,-1
204033f0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
204033f4:	fdc42783          	lw	a5,-36(s0)
204033f8:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
204033fc:	fdc42503          	lw	a0,-36(s0)
20403400:	a51ff0ef          	jal	ra,20402e50 <__metal_driver_sifive_clint0_control_base>
20403404:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20403408:	fd842703          	lw	a4,-40(s0)
2040340c:	4791                	li	a5,4
2040340e:	0cf70163          	beq	a4,a5,204034d0 <__metal_driver_riscv_clint0_command_request+0xf6>
20403412:	fd842703          	lw	a4,-40(s0)
20403416:	4791                	li	a5,4
20403418:	0ee7c163          	blt	a5,a4,204034fa <__metal_driver_riscv_clint0_command_request+0x120>
2040341c:	fd842703          	lw	a4,-40(s0)
20403420:	478d                	li	a5,3
20403422:	06f70663          	beq	a4,a5,2040348e <__metal_driver_riscv_clint0_command_request+0xb4>
20403426:	fd842703          	lw	a4,-40(s0)
2040342a:	478d                	li	a5,3
2040342c:	0ce7c763          	blt	a5,a4,204034fa <__metal_driver_riscv_clint0_command_request+0x120>
20403430:	fd842703          	lw	a4,-40(s0)
20403434:	4785                	li	a5,1
20403436:	00f70863          	beq	a4,a5,20403446 <__metal_driver_riscv_clint0_command_request+0x6c>
2040343a:	fd842703          	lw	a4,-40(s0)
2040343e:	4789                	li	a5,2
20403440:	02f70363          	beq	a4,a5,20403466 <__metal_driver_riscv_clint0_command_request+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20403444:	a85d                	j	204034fa <__metal_driver_riscv_clint0_command_request+0x120>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20403446:	fd442783          	lw	a5,-44(s0)
2040344a:	cbd5                	beqz	a5,204034fe <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2040344c:	fe842503          	lw	a0,-24(s0)
20403450:	abfff0ef          	jal	ra,20402f0e <__metal_clint0_mtime_get>
20403454:	872a                	mv	a4,a0
20403456:	87ae                	mv	a5,a1
20403458:	fd442683          	lw	a3,-44(s0)
2040345c:	c298                	sw	a4,0(a3)
2040345e:	c2dc                	sw	a5,4(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403460:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403464:	a869                	j	204034fe <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20403466:	fd442783          	lw	a5,-44(s0)
2040346a:	cfc1                	beqz	a5,20403502 <__metal_driver_riscv_clint0_command_request+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
2040346c:	fd442783          	lw	a5,-44(s0)
20403470:	439c                	lw	a5,0(a5)
20403472:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20403476:	fe042783          	lw	a5,-32(s0)
2040347a:	078a                	slli	a5,a5,0x2
2040347c:	873e                	mv	a4,a5
2040347e:	fe442783          	lw	a5,-28(s0)
20403482:	97ba                	add	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20403484:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20403488:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
2040348c:	a89d                	j	20403502 <__metal_driver_riscv_clint0_command_request+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
2040348e:	fd442783          	lw	a5,-44(s0)
20403492:	cbb5                	beqz	a5,20403506 <__metal_driver_riscv_clint0_command_request+0x12c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20403494:	fd442783          	lw	a5,-44(s0)
20403498:	439c                	lw	a5,0(a5)
2040349a:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
2040349e:	fe042783          	lw	a5,-32(s0)
204034a2:	078a                	slli	a5,a5,0x2
204034a4:	873e                	mv	a4,a5
204034a6:	fe442783          	lw	a5,-28(s0)
204034aa:	97ba                	add	a5,a5,a4
204034ac:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204034ae:	4785                	li	a5,1
204034b0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204034b2:	0480000f          	fence	o,i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204034b6:	fe042783          	lw	a5,-32(s0)
204034ba:	078a                	slli	a5,a5,0x2
204034bc:	873e                	mv	a4,a5
204034be:	fe442783          	lw	a5,-28(s0)
204034c2:	97ba                	add	a5,a5,a4
204034c4:	439c                	lw	a5,0(a5)
204034c6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
204034ca:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204034ce:	a825                	j	20403506 <__metal_driver_riscv_clint0_command_request+0x12c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
204034d0:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
204034d4:	fd442783          	lw	a5,-44(s0)
204034d8:	cb8d                	beqz	a5,2040350a <__metal_driver_riscv_clint0_command_request+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
204034da:	fd442783          	lw	a5,-44(s0)
204034de:	439c                	lw	a5,0(a5)
204034e0:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
204034e4:	fe042783          	lw	a5,-32(s0)
204034e8:	078a                	slli	a5,a5,0x2
204034ea:	873e                	mv	a4,a5
204034ec:	fe442783          	lw	a5,-28(s0)
204034f0:	97ba                	add	a5,a5,a4
204034f2:	439c                	lw	a5,0(a5)
204034f4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204034f8:	a809                	j	2040350a <__metal_driver_riscv_clint0_command_request+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
204034fa:	0001                	nop
204034fc:	a801                	j	2040350c <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204034fe:	0001                	nop
20403500:	a031                	j	2040350c <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403502:	0001                	nop
20403504:	a021                	j	2040350c <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403506:	0001                	nop
20403508:	a011                	j	2040350c <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040350a:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2040350c:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:267
}
20403510:	853e                	mv	a0,a5
20403512:	50b2                	lw	ra,44(sp)
20403514:	5422                	lw	s0,40(sp)
20403516:	6145                	addi	sp,sp,48
20403518:	8082                	ret

2040351a <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
2040351a:	7179                	addi	sp,sp,-48
2040351c:	d606                	sw	ra,44(sp)
2040351e:	d422                	sw	s0,40(sp)
20403520:	1800                	addi	s0,sp,48
20403522:	fca42e23          	sw	a0,-36(s0)
20403526:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
2040352a:	5dd030ef          	jal	ra,20407306 <metal_cpu_get_current_hartid>
2040352e:	87aa                	mv	a5,a0
20403530:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20403534:	fec40793          	addi	a5,s0,-20
20403538:	863e                	mv	a2,a5
2040353a:	4589                	li	a1,2
2040353c:	fdc42503          	lw	a0,-36(s0)
20403540:	3d69                	jal	204033da <__metal_driver_riscv_clint0_command_request>
20403542:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20403544:	853e                	mv	a0,a5
20403546:	50b2                	lw	ra,44(sp)
20403548:	5422                	lw	s0,40(sp)
2040354a:	6145                	addi	sp,sp,48
2040354c:	8082                	ret

2040354e <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
2040354e:	7179                	addi	sp,sp,-48
20403550:	d606                	sw	ra,44(sp)
20403552:	d422                	sw	s0,40(sp)
20403554:	1800                	addi	s0,sp,48
20403556:	fca42e23          	sw	a0,-36(s0)
2040355a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
2040355e:	5a9030ef          	jal	ra,20407306 <metal_cpu_get_current_hartid>
20403562:	87aa                	mv	a5,a0
20403564:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20403568:	fec40793          	addi	a5,s0,-20
2040356c:	863e                	mv	a2,a5
2040356e:	458d                	li	a1,3
20403570:	fdc42503          	lw	a0,-36(s0)
20403574:	359d                	jal	204033da <__metal_driver_riscv_clint0_command_request>
20403576:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20403578:	853e                	mv	a0,a5
2040357a:	50b2                	lw	ra,44(sp)
2040357c:	5422                	lw	s0,40(sp)
2040357e:	6145                	addi	sp,sp,48
20403580:	8082                	ret

20403582 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403582:	1101                	addi	sp,sp,-32
20403584:	ce22                	sw	s0,28(sp)
20403586:	1000                	addi	s0,sp,32
20403588:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040358c:	fec42703          	lw	a4,-20(s0)
20403590:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403594:	00f71463          	bne	a4,a5,2040359c <__metal_driver_cpu_hartid+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:263
		return 0;
20403598:	4781                	li	a5,0
2040359a:	a011                	j	2040359e <__metal_driver_cpu_hartid+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:266
	}
	else {
		return -1;
2040359c:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:268
	}
}
2040359e:	853e                	mv	a0,a5
204035a0:	4472                	lw	s0,28(sp)
204035a2:	6105                	addi	sp,sp,32
204035a4:	8082                	ret

204035a6 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204035a6:	1101                	addi	sp,sp,-32
204035a8:	ce22                	sw	s0,28(sp)
204035aa:	1000                	addi	s0,sp,32
204035ac:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204035b0:	fec42703          	lw	a4,-20(s0)
204035b4:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204035b8:	00f71763          	bne	a4,a5,204035c6 <__metal_driver_cpu_timebase+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:273
		return 1000000;
204035bc:	000f47b7          	lui	a5,0xf4
204035c0:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
204035c4:	a011                	j	204035c8 <__metal_driver_cpu_timebase+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:276
	}
	else {
		return 0;
204035c6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:278
	}
}
204035c8:	853e                	mv	a0,a5
204035ca:	4472                	lw	s0,28(sp)
204035cc:	6105                	addi	sp,sp,32
204035ce:	8082                	ret

204035d0 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
204035d0:	1101                	addi	sp,sp,-32
204035d2:	ce22                	sw	s0,28(sp)
204035d4:	1000                	addi	s0,sp,32
204035d6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204035da:	fec42703          	lw	a4,-20(s0)
204035de:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204035e2:	00f71763          	bne	a4,a5,204035f0 <__metal_driver_cpu_interrupt_controller+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
204035e6:	800007b7          	lui	a5,0x80000
204035ea:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffebb8>
204035ee:	a011                	j	204035f2 <__metal_driver_cpu_interrupt_controller+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:286
	}
	else {
		return NULL;
204035f0:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:288
	}
}
204035f2:	853e                	mv	a0,a5
204035f4:	4472                	lw	s0,28(sp)
204035f6:	6105                	addi	sp,sp,32
204035f8:	8082                	ret

204035fa <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
204035fa:	1101                	addi	sp,sp,-32
204035fc:	ce22                	sw	s0,28(sp)
204035fe:	1000                	addi	s0,sp,32
20403600:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403604:	fec42703          	lw	a4,-20(s0)
20403608:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040360c:	00f71463          	bne	a4,a5,20403614 <__metal_driver_cpu_buserror+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:303
		return NULL;
20403610:	4781                	li	a5,0
20403612:	a011                	j	20403616 <__metal_driver_cpu_buserror+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:306
	}
	else {
		return NULL;
20403614:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:308
	}
}
20403616:	853e                	mv	a0,a5
20403618:	4472                	lw	s0,28(sp)
2040361a:	6105                	addi	sp,sp,32
2040361c:	8082                	ret

2040361e <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2040361e:	1101                	addi	sp,sp,-32
20403620:	ce22                	sw	s0,28(sp)
20403622:	1000                	addi	s0,sp,32
20403624:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20403628:	fec42783          	lw	a5,-20(s0)
2040362c:	00f04c63          	bgtz	a5,20403644 <__metal_driver_cpu_get+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403630:	800007b7          	lui	a5,0x80000
20403634:	fec42703          	lw	a4,-20(s0)
20403638:	070a                	slli	a4,a4,0x2
2040363a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
2040363e:	97ba                	add	a5,a5,a4
20403640:	439c                	lw	a5,0(a5)
20403642:	a011                	j	20403646 <__metal_driver_cpu_get+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20403644:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:30
}
20403646:	853e                	mv	a0,a5
20403648:	4472                	lw	s0,28(sp)
2040364a:	6105                	addi	sp,sp,32
2040364c:	8082                	ret

2040364e <__metal_myhart_id>:
__metal_myhart_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
2040364e:	1101                	addi	sp,sp,-32
20403650:	ce22                	sw	s0,28(sp)
20403652:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20403654:	f14027f3          	csrr	a5,mhartid
20403658:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
2040365c:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403660:	853e                	mv	a0,a5
20403662:	4472                	lw	s0,28(sp)
20403664:	6105                	addi	sp,sp,32
20403666:	8082                	ret

20403668 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20403668:	1101                	addi	sp,sp,-32
2040366a:	ce22                	sw	s0,28(sp)
2040366c:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
2040366e:	47a1                	li	a5,8
20403670:	3007a7f3          	csrrs	a5,mstatus,a5
20403674:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403678:	0001                	nop
2040367a:	4472                	lw	s0,28(sp)
2040367c:	6105                	addi	sp,sp,32
2040367e:	8082                	ret

20403680 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403680:	1101                	addi	sp,sp,-32
20403682:	ce22                	sw	s0,28(sp)
20403684:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403686:	47a1                	li	a5,8
20403688:	3007b7f3          	csrrc	a5,mstatus,a5
2040368c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403690:	0001                	nop
20403692:	4472                	lw	s0,28(sp)
20403694:	6105                	addi	sp,sp,32
20403696:	8082                	ret

20403698 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20403698:	1101                	addi	sp,sp,-32
2040369a:	ce22                	sw	s0,28(sp)
2040369c:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040369e:	47a1                	li	a5,8
204036a0:	3047a7f3          	csrrs	a5,mie,a5
204036a4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204036a8:	0001                	nop
204036aa:	4472                	lw	s0,28(sp)
204036ac:	6105                	addi	sp,sp,32
204036ae:	8082                	ret

204036b0 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204036b0:	1101                	addi	sp,sp,-32
204036b2:	ce22                	sw	s0,28(sp)
204036b4:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204036b6:	47a1                	li	a5,8
204036b8:	3047b7f3          	csrrc	a5,mie,a5
204036bc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204036c0:	0001                	nop
204036c2:	4472                	lw	s0,28(sp)
204036c4:	6105                	addi	sp,sp,32
204036c6:	8082                	ret

204036c8 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
204036c8:	1101                	addi	sp,sp,-32
204036ca:	ce22                	sw	s0,28(sp)
204036cc:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204036ce:	08000793          	li	a5,128
204036d2:	3047a7f3          	csrrs	a5,mie,a5
204036d6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204036da:	0001                	nop
204036dc:	4472                	lw	s0,28(sp)
204036de:	6105                	addi	sp,sp,32
204036e0:	8082                	ret

204036e2 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
204036e2:	1101                	addi	sp,sp,-32
204036e4:	ce22                	sw	s0,28(sp)
204036e6:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204036e8:	08000793          	li	a5,128
204036ec:	3047b7f3          	csrrc	a5,mie,a5
204036f0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204036f4:	0001                	nop
204036f6:	4472                	lw	s0,28(sp)
204036f8:	6105                	addi	sp,sp,32
204036fa:	8082                	ret

204036fc <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
204036fc:	1101                	addi	sp,sp,-32
204036fe:	ce22                	sw	s0,28(sp)
20403700:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403702:	6785                	lui	a5,0x1
20403704:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403708:	3047a7f3          	csrrs	a5,mie,a5
2040370c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403710:	0001                	nop
20403712:	4472                	lw	s0,28(sp)
20403714:	6105                	addi	sp,sp,32
20403716:	8082                	ret

20403718 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20403718:	1101                	addi	sp,sp,-32
2040371a:	ce22                	sw	s0,28(sp)
2040371c:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2040371e:	6785                	lui	a5,0x1
20403720:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403724:	3047b7f3          	csrrc	a5,mie,a5
20403728:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2040372c:	0001                	nop
2040372e:	4472                	lw	s0,28(sp)
20403730:	6105                	addi	sp,sp,32
20403732:	8082                	ret

20403734 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20403734:	7179                	addi	sp,sp,-48
20403736:	d622                	sw	s0,44(sp)
20403738:	1800                	addi	s0,sp,48
2040373a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
2040373e:	fdc42783          	lw	a5,-36(s0)
20403742:	4705                	li	a4,1
20403744:	00f717b3          	sll	a5,a4,a5
20403748:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2040374c:	fec42783          	lw	a5,-20(s0)
20403750:	3047a7f3          	csrrs	a5,mie,a5
20403754:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403758:	0001                	nop
2040375a:	5432                	lw	s0,44(sp)
2040375c:	6145                	addi	sp,sp,48
2040375e:	8082                	ret

20403760 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20403760:	7179                	addi	sp,sp,-48
20403762:	d622                	sw	s0,44(sp)
20403764:	1800                	addi	s0,sp,48
20403766:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
2040376a:	fdc42783          	lw	a5,-36(s0)
2040376e:	4705                	li	a4,1
20403770:	00f717b3          	sll	a5,a4,a5
20403774:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403778:	fec42783          	lw	a5,-20(s0)
2040377c:	3047b7f3          	csrrc	a5,mie,a5
20403780:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403784:	0001                	nop
20403786:	5432                	lw	s0,44(sp)
20403788:	6145                	addi	sp,sp,48
2040378a:	8082                	ret

2040378c <__metal_default_exception_handler>:
__metal_default_exception_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
2040378c:	1101                	addi	sp,sp,-32
2040378e:	ce06                	sw	ra,28(sp)
20403790:	cc22                	sw	s0,24(sp)
20403792:	1000                	addi	s0,sp,32
20403794:	fea42623          	sw	a0,-20(s0)
20403798:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
2040379c:	06400513          	li	a0,100
204037a0:	decff0ef          	jal	ra,20402d8c <metal_shutdown>

204037a4 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
204037a4:	1101                	addi	sp,sp,-32
204037a6:	ce06                	sw	ra,28(sp)
204037a8:	cc22                	sw	s0,24(sp)
204037aa:	1000                	addi	s0,sp,32
204037ac:	fea42623          	sw	a0,-20(s0)
204037b0:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
204037b4:	0c800513          	li	a0,200
204037b8:	dd4ff0ef          	jal	ra,20402d8c <metal_shutdown>

204037bc <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
204037bc:	715d                	addi	sp,sp,-80
204037be:	c686                	sw	ra,76(sp)
204037c0:	c496                	sw	t0,72(sp)
204037c2:	c29a                	sw	t1,68(sp)
204037c4:	c09e                	sw	t2,64(sp)
204037c6:	de22                	sw	s0,60(sp)
204037c8:	dc2a                	sw	a0,56(sp)
204037ca:	da2e                	sw	a1,52(sp)
204037cc:	d832                	sw	a2,48(sp)
204037ce:	d636                	sw	a3,44(sp)
204037d0:	d43a                	sw	a4,40(sp)
204037d2:	d23e                	sw	a5,36(sp)
204037d4:	d042                	sw	a6,32(sp)
204037d6:	ce46                	sw	a7,28(sp)
204037d8:	cc72                	sw	t3,24(sp)
204037da:	ca76                	sw	t4,20(sp)
204037dc:	c87a                	sw	t5,16(sp)
204037de:	c67e                	sw	t6,12(sp)
204037e0:	0880                	addi	s0,sp,80
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
204037e2:	12c00513          	li	a0,300
204037e6:	da6ff0ef          	jal	ra,20402d8c <metal_shutdown>

204037ea <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
204037ea:	711d                	addi	sp,sp,-96
204037ec:	ce86                	sw	ra,92(sp)
204037ee:	cc96                	sw	t0,88(sp)
204037f0:	ca9a                	sw	t1,84(sp)
204037f2:	c89e                	sw	t2,80(sp)
204037f4:	c6a2                	sw	s0,76(sp)
204037f6:	c4aa                	sw	a0,72(sp)
204037f8:	c2ae                	sw	a1,68(sp)
204037fa:	c0b2                	sw	a2,64(sp)
204037fc:	de36                	sw	a3,60(sp)
204037fe:	dc3a                	sw	a4,56(sp)
20403800:	da3e                	sw	a5,52(sp)
20403802:	d842                	sw	a6,48(sp)
20403804:	d646                	sw	a7,44(sp)
20403806:	d472                	sw	t3,40(sp)
20403808:	d276                	sw	t4,36(sp)
2040380a:	d07a                	sw	t5,32(sp)
2040380c:	ce7e                	sw	t6,28(sp)
2040380e:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20403810:	3d3d                	jal	2040364e <__metal_myhart_id>
20403812:	872a                	mv	a4,a0
20403814:	800007b7          	lui	a5,0x80000
20403818:	070a                	slli	a4,a4,0x2
2040381a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
2040381e:	97ba                	add	a5,a5,a4
20403820:	439c                	lw	a5,0(a5)
20403822:	faf42623          	sw	a5,-84(s0)
20403826:	fac42783          	lw	a5,-84(s0)
2040382a:	c785                	beqz	a5,20403852 <metal_software_interrupt_vector_handler+0x68>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
2040382c:	fac42503          	lw	a0,-84(s0)
20403830:	3345                	jal	204035d0 <__metal_driver_cpu_interrupt_controller>
20403832:	faa42423          	sw	a0,-88(s0)
20403836:	fa842783          	lw	a5,-88(s0)
2040383a:	0e07a783          	lw	a5,224(a5)
2040383e:	faf42223          	sw	a5,-92(s0)
20403842:	fa842783          	lw	a5,-88(s0)
20403846:	0d87a783          	lw	a5,216(a5)
2040384a:	fa442583          	lw	a1,-92(s0)
2040384e:	450d                	li	a0,3
20403850:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403852:	0001                	nop
20403854:	40f6                	lw	ra,92(sp)
20403856:	42e6                	lw	t0,88(sp)
20403858:	4356                	lw	t1,84(sp)
2040385a:	43c6                	lw	t2,80(sp)
2040385c:	4436                	lw	s0,76(sp)
2040385e:	4526                	lw	a0,72(sp)
20403860:	4596                	lw	a1,68(sp)
20403862:	4606                	lw	a2,64(sp)
20403864:	56f2                	lw	a3,60(sp)
20403866:	5762                	lw	a4,56(sp)
20403868:	57d2                	lw	a5,52(sp)
2040386a:	5842                	lw	a6,48(sp)
2040386c:	58b2                	lw	a7,44(sp)
2040386e:	5e22                	lw	t3,40(sp)
20403870:	5e92                	lw	t4,36(sp)
20403872:	5f02                	lw	t5,32(sp)
20403874:	4ff2                	lw	t6,28(sp)
20403876:	6125                	addi	sp,sp,96
20403878:	30200073          	mret

2040387c <__metal_default_sw_handler>:
__metal_default_sw_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
2040387c:	7179                	addi	sp,sp,-48
2040387e:	d606                	sw	ra,44(sp)
20403880:	d422                	sw	s0,40(sp)
20403882:	1800                	addi	s0,sp,48
20403884:	fca42e23          	sw	a0,-36(s0)
20403888:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040388c:	33c9                	jal	2040364e <__metal_myhart_id>
2040388e:	872a                	mv	a4,a0
20403890:	800007b7          	lui	a5,0x80000
20403894:	070a                	slli	a4,a4,0x2
20403896:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
2040389a:	97ba                	add	a5,a5,a4
2040389c:	439c                	lw	a5,0(a5)
2040389e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
204038a2:	342027f3          	csrr	a5,mcause
204038a6:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
204038aa:	fec42783          	lw	a5,-20(s0)
204038ae:	c795                	beqz	a5,204038da <__metal_default_sw_handler+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204038b0:	fec42503          	lw	a0,-20(s0)
204038b4:	3b31                	jal	204035d0 <__metal_driver_cpu_interrupt_controller>
204038b6:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
204038ba:	fe842783          	lw	a5,-24(s0)
204038be:	3ff7f793          	andi	a5,a5,1023
204038c2:	fe442703          	lw	a4,-28(s0)
204038c6:	0e878793          	addi	a5,a5,232
204038ca:	078a                	slli	a5,a5,0x2
204038cc:	97ba                	add	a5,a5,a4
204038ce:	439c                	lw	a5,0(a5)
204038d0:	fdc42583          	lw	a1,-36(s0)
204038d4:	fec42503          	lw	a0,-20(s0)
204038d8:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
204038da:	0001                	nop
204038dc:	50b2                	lw	ra,44(sp)
204038de:	5422                	lw	s0,40(sp)
204038e0:	6145                	addi	sp,sp,48
204038e2:	8082                	ret

204038e4 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
204038e4:	711d                	addi	sp,sp,-96
204038e6:	ce86                	sw	ra,92(sp)
204038e8:	cc96                	sw	t0,88(sp)
204038ea:	ca9a                	sw	t1,84(sp)
204038ec:	c89e                	sw	t2,80(sp)
204038ee:	c6a2                	sw	s0,76(sp)
204038f0:	c4aa                	sw	a0,72(sp)
204038f2:	c2ae                	sw	a1,68(sp)
204038f4:	c0b2                	sw	a2,64(sp)
204038f6:	de36                	sw	a3,60(sp)
204038f8:	dc3a                	sw	a4,56(sp)
204038fa:	da3e                	sw	a5,52(sp)
204038fc:	d842                	sw	a6,48(sp)
204038fe:	d646                	sw	a7,44(sp)
20403900:	d472                	sw	t3,40(sp)
20403902:	d276                	sw	t4,36(sp)
20403904:	d07a                	sw	t5,32(sp)
20403906:	ce7e                	sw	t6,28(sp)
20403908:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
2040390a:	3391                	jal	2040364e <__metal_myhart_id>
2040390c:	872a                	mv	a4,a0
2040390e:	800007b7          	lui	a5,0x80000
20403912:	070a                	slli	a4,a4,0x2
20403914:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403918:	97ba                	add	a5,a5,a4
2040391a:	439c                	lw	a5,0(a5)
2040391c:	faf42623          	sw	a5,-84(s0)
20403920:	fac42783          	lw	a5,-84(s0)
20403924:	c785                	beqz	a5,2040394c <metal_timer_interrupt_vector_handler+0x68>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403926:	fac42503          	lw	a0,-84(s0)
2040392a:	315d                	jal	204035d0 <__metal_driver_cpu_interrupt_controller>
2040392c:	faa42423          	sw	a0,-88(s0)
20403930:	fa842783          	lw	a5,-88(s0)
20403934:	1407a783          	lw	a5,320(a5)
20403938:	faf42223          	sw	a5,-92(s0)
2040393c:	fa842783          	lw	a5,-88(s0)
20403940:	1387a783          	lw	a5,312(a5)
20403944:	fa442583          	lw	a1,-92(s0)
20403948:	451d                	li	a0,7
2040394a:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:150
}
2040394c:	0001                	nop
2040394e:	40f6                	lw	ra,92(sp)
20403950:	42e6                	lw	t0,88(sp)
20403952:	4356                	lw	t1,84(sp)
20403954:	43c6                	lw	t2,80(sp)
20403956:	4436                	lw	s0,76(sp)
20403958:	4526                	lw	a0,72(sp)
2040395a:	4596                	lw	a1,68(sp)
2040395c:	4606                	lw	a2,64(sp)
2040395e:	56f2                	lw	a3,60(sp)
20403960:	5762                	lw	a4,56(sp)
20403962:	57d2                	lw	a5,52(sp)
20403964:	5842                	lw	a6,48(sp)
20403966:	58b2                	lw	a7,44(sp)
20403968:	5e22                	lw	t3,40(sp)
2040396a:	5e92                	lw	t4,36(sp)
2040396c:	5f02                	lw	t5,32(sp)
2040396e:	4ff2                	lw	t6,28(sp)
20403970:	6125                	addi	sp,sp,96
20403972:	30200073          	mret

20403976 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403976:	1101                	addi	sp,sp,-32
20403978:	ce22                	sw	s0,28(sp)
2040397a:	1000                	addi	s0,sp,32
2040397c:	fea42623          	sw	a0,-20(s0)
20403980:	feb42423          	sw	a1,-24(s0)
20403984:	0001                	nop
20403986:	4472                	lw	s0,28(sp)
20403988:	6105                	addi	sp,sp,32
2040398a:	8082                	ret

2040398c <__metal_default_timer_handler>:
__metal_default_timer_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
2040398c:	7179                	addi	sp,sp,-48
2040398e:	d606                	sw	ra,44(sp)
20403990:	d422                	sw	s0,40(sp)
20403992:	1800                	addi	s0,sp,48
20403994:	fca42e23          	sw	a0,-36(s0)
20403998:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2040399c:	394d                	jal	2040364e <__metal_myhart_id>
2040399e:	87aa                	mv	a5,a0
204039a0:	853e                	mv	a0,a5
204039a2:	39b5                	jal	2040361e <__metal_driver_cpu_get>
204039a4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
204039a8:	fec42503          	lw	a0,-20(s0)
204039ac:	278010ef          	jal	ra,20404c24 <__metal_driver_cpu_mtime_get>
204039b0:	fea42023          	sw	a0,-32(s0)
204039b4:	feb42223          	sw	a1,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
204039b8:	fe042703          	lw	a4,-32(s0)
204039bc:	fe442783          	lw	a5,-28(s0)
204039c0:	4529                	li	a0,10
204039c2:	4581                	li	a1,0
204039c4:	00a70633          	add	a2,a4,a0
204039c8:	8832                	mv	a6,a2
204039ca:	00e83833          	sltu	a6,a6,a4
204039ce:	00b786b3          	add	a3,a5,a1
204039d2:	00d807b3          	add	a5,a6,a3
204039d6:	86be                	mv	a3,a5
204039d8:	8732                	mv	a4,a2
204039da:	87b6                	mv	a5,a3
204039dc:	85ba                	mv	a1,a4
204039de:	863e                	mv	a2,a5
204039e0:	fec42503          	lw	a0,-20(s0)
204039e4:	2a6010ef          	jal	ra,20404c8a <__metal_driver_cpu_mtimecmp_set>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:160
}
204039e8:	0001                	nop
204039ea:	50b2                	lw	ra,44(sp)
204039ec:	5422                	lw	s0,40(sp)
204039ee:	6145                	addi	sp,sp,48
204039f0:	8082                	ret
	...

20403a00 <__metal_exception_handler>:
__metal_exception_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403a00:	7119                	addi	sp,sp,-128
20403a02:	de86                	sw	ra,124(sp)
20403a04:	dc96                	sw	t0,120(sp)
20403a06:	da9a                	sw	t1,116(sp)
20403a08:	d89e                	sw	t2,112(sp)
20403a0a:	d6a2                	sw	s0,108(sp)
20403a0c:	d4aa                	sw	a0,104(sp)
20403a0e:	d2ae                	sw	a1,100(sp)
20403a10:	d0b2                	sw	a2,96(sp)
20403a12:	ceb6                	sw	a3,92(sp)
20403a14:	ccba                	sw	a4,88(sp)
20403a16:	cabe                	sw	a5,84(sp)
20403a18:	c8c2                	sw	a6,80(sp)
20403a1a:	c6c6                	sw	a7,76(sp)
20403a1c:	c4f2                	sw	t3,72(sp)
20403a1e:	c2f6                	sw	t4,68(sp)
20403a20:	c0fa                	sw	t5,64(sp)
20403a22:	de7e                	sw	t6,60(sp)
20403a24:	0100                	addi	s0,sp,128
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403a26:	c29ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403a2a:	872a                	mv	a4,a0
20403a2c:	800007b7          	lui	a5,0x80000
20403a30:	070a                	slli	a4,a4,0x2
20403a32:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403a36:	97ba                	add	a5,a5,a4
20403a38:	439c                	lw	a5,0(a5)
20403a3a:	faf42623          	sw	a5,-84(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403a3e:	342027f3          	csrr	a5,mcause
20403a42:	faf42423          	sw	a5,-88(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403a46:	341027f3          	csrr	a5,mepc
20403a4a:	faf42223          	sw	a5,-92(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403a4e:	343027f3          	csrr	a5,mtval
20403a52:	faf42023          	sw	a5,-96(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403a56:	305027f3          	csrr	a5,mtvec
20403a5a:	f8f42e23          	sw	a5,-100(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403a5e:	fac42783          	lw	a5,-84(s0)
20403a62:	cbfd                	beqz	a5,20403b58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403a64:	fac42503          	lw	a0,-84(s0)
20403a68:	b69ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403a6c:	f8a42c23          	sw	a0,-104(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403a70:	fa842783          	lw	a5,-88(s0)
20403a74:	3ff7f793          	andi	a5,a5,1023
20403a78:	f8f42a23          	sw	a5,-108(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403a7c:	fa842783          	lw	a5,-88(s0)
20403a80:	0a07de63          	bgez	a5,20403b3c <__metal_exception_handler+0x13c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403a84:	f9442703          	lw	a4,-108(s0)
20403a88:	08000793          	li	a5,128
20403a8c:	02f71263          	bne	a4,a5,20403ab0 <__metal_exception_handler+0xb0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403a90:	f9842783          	lw	a5,-104(s0)
20403a94:	3987a783          	lw	a5,920(a5)
20403a98:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403a9c:	f9842783          	lw	a5,-104(s0)
20403aa0:	3907a783          	lw	a5,912(a5)
20403aa4:	f8c42583          	lw	a1,-116(s0)
20403aa8:	f9442503          	lw	a0,-108(s0)
20403aac:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403aae:	a06d                	j	20403b58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403ab0:	f9442703          	lw	a4,-108(s0)
20403ab4:	47ad                	li	a5,11
20403ab6:	00e7d763          	bge	a5,a4,20403ac4 <__metal_exception_handler+0xc4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403aba:	f9c42783          	lw	a5,-100(s0)
20403abe:	03f7f793          	andi	a5,a5,63
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403ac2:	ef9d                	bnez	a5,20403b00 <__metal_exception_handler+0x100>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403ac4:	f9842683          	lw	a3,-104(s0)
20403ac8:	f9442703          	lw	a4,-108(s0)
20403acc:	87ba                	mv	a5,a4
20403ace:	0786                	slli	a5,a5,0x1
20403ad0:	97ba                	add	a5,a5,a4
20403ad2:	078e                	slli	a5,a5,0x3
20403ad4:	97b6                	add	a5,a5,a3
20403ad6:	0987a783          	lw	a5,152(a5)
20403ada:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403ade:	f9842683          	lw	a3,-104(s0)
20403ae2:	f9442703          	lw	a4,-108(s0)
20403ae6:	87ba                	mv	a5,a4
20403ae8:	0786                	slli	a5,a5,0x1
20403aea:	97ba                	add	a5,a5,a4
20403aec:	078e                	slli	a5,a5,0x3
20403aee:	97b6                	add	a5,a5,a3
20403af0:	0907a783          	lw	a5,144(a5)
20403af4:	f8c42583          	lw	a1,-116(s0)
20403af8:	f9442503          	lw	a0,-108(s0)
20403afc:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403afe:	a8a9                	j	20403b58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403b00:	f9c42783          	lw	a5,-100(s0)
20403b04:	03f7f713          	andi	a4,a5,63
20403b08:	4789                	li	a5,2
20403b0a:	04f71763          	bne	a4,a5,20403b58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403b0e:	307027f3          	csrr	a5,mtvt
20403b12:	f8f42823          	sw	a5,-112(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403b16:	f9842783          	lw	a5,-104(s0)
20403b1a:	0dc7a783          	lw	a5,220(a5)
20403b1e:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403b22:	f9042783          	lw	a5,-112(s0)
20403b26:	439c                	lw	a5,0(a5)
20403b28:	f8f42423          	sw	a5,-120(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403b2c:	f8842783          	lw	a5,-120(s0)
20403b30:	f8c42583          	lw	a1,-116(s0)
20403b34:	f9442503          	lw	a0,-108(s0)
20403b38:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403b3a:	a839                	j	20403b58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403b3c:	f9842703          	lw	a4,-104(s0)
20403b40:	f9442783          	lw	a5,-108(s0)
20403b44:	0e878793          	addi	a5,a5,232
20403b48:	078a                	slli	a5,a5,0x2
20403b4a:	97ba                	add	a5,a5,a4
20403b4c:	439c                	lw	a5,0(a5)
20403b4e:	f9442583          	lw	a1,-108(s0)
20403b52:	fac42503          	lw	a0,-84(s0)
20403b56:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403b58:	50f6                	lw	ra,124(sp)
20403b5a:	52e6                	lw	t0,120(sp)
20403b5c:	5356                	lw	t1,116(sp)
20403b5e:	53c6                	lw	t2,112(sp)
20403b60:	5436                	lw	s0,108(sp)
20403b62:	5526                	lw	a0,104(sp)
20403b64:	5596                	lw	a1,100(sp)
20403b66:	5606                	lw	a2,96(sp)
20403b68:	46f6                	lw	a3,92(sp)
20403b6a:	4766                	lw	a4,88(sp)
20403b6c:	47d6                	lw	a5,84(sp)
20403b6e:	4846                	lw	a6,80(sp)
20403b70:	48b6                	lw	a7,76(sp)
20403b72:	4e26                	lw	t3,72(sp)
20403b74:	4e96                	lw	t4,68(sp)
20403b76:	4f06                	lw	t5,64(sp)
20403b78:	5ff2                	lw	t6,60(sp)
20403b7a:	6109                	addi	sp,sp,128
20403b7c:	30200073          	mret
	...

20403bfa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403bfa:	711d                	addi	sp,sp,-96
20403bfc:	ce86                	sw	ra,92(sp)
20403bfe:	cc96                	sw	t0,88(sp)
20403c00:	ca9a                	sw	t1,84(sp)
20403c02:	c89e                	sw	t2,80(sp)
20403c04:	c6a2                	sw	s0,76(sp)
20403c06:	c4aa                	sw	a0,72(sp)
20403c08:	c2ae                	sw	a1,68(sp)
20403c0a:	c0b2                	sw	a2,64(sp)
20403c0c:	de36                	sw	a3,60(sp)
20403c0e:	dc3a                	sw	a4,56(sp)
20403c10:	da3e                	sw	a5,52(sp)
20403c12:	d842                	sw	a6,48(sp)
20403c14:	d646                	sw	a7,44(sp)
20403c16:	d472                	sw	t3,40(sp)
20403c18:	d276                	sw	t4,36(sp)
20403c1a:	d07a                	sw	t5,32(sp)
20403c1c:	ce7e                	sw	t6,28(sp)
20403c1e:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403c20:	a2fff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403c24:	872a                	mv	a4,a0
20403c26:	800007b7          	lui	a5,0x80000
20403c2a:	070a                	slli	a4,a4,0x2
20403c2c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403c30:	97ba                	add	a5,a5,a4
20403c32:	439c                	lw	a5,0(a5)
20403c34:	faf42623          	sw	a5,-84(s0)
20403c38:	fac42783          	lw	a5,-84(s0)
20403c3c:	c78d                	beqz	a5,20403c66 <metal_lc0_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403c3e:	fac42503          	lw	a0,-84(s0)
20403c42:	98fff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403c46:	faa42423          	sw	a0,-88(s0)
20403c4a:	fa842783          	lw	a5,-88(s0)
20403c4e:	2187a783          	lw	a5,536(a5)
20403c52:	faf42223          	sw	a5,-92(s0)
20403c56:	fa842783          	lw	a5,-88(s0)
20403c5a:	2107a783          	lw	a5,528(a5)
20403c5e:	fa442583          	lw	a1,-92(s0)
20403c62:	4541                	li	a0,16
20403c64:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403c66:	0001                	nop
20403c68:	40f6                	lw	ra,92(sp)
20403c6a:	42e6                	lw	t0,88(sp)
20403c6c:	4356                	lw	t1,84(sp)
20403c6e:	43c6                	lw	t2,80(sp)
20403c70:	4436                	lw	s0,76(sp)
20403c72:	4526                	lw	a0,72(sp)
20403c74:	4596                	lw	a1,68(sp)
20403c76:	4606                	lw	a2,64(sp)
20403c78:	56f2                	lw	a3,60(sp)
20403c7a:	5762                	lw	a4,56(sp)
20403c7c:	57d2                	lw	a5,52(sp)
20403c7e:	5842                	lw	a6,48(sp)
20403c80:	58b2                	lw	a7,44(sp)
20403c82:	5e22                	lw	t3,40(sp)
20403c84:	5e92                	lw	t4,36(sp)
20403c86:	5f02                	lw	t5,32(sp)
20403c88:	4ff2                	lw	t6,28(sp)
20403c8a:	6125                	addi	sp,sp,96
20403c8c:	30200073          	mret

20403c90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403c90:	711d                	addi	sp,sp,-96
20403c92:	ce86                	sw	ra,92(sp)
20403c94:	cc96                	sw	t0,88(sp)
20403c96:	ca9a                	sw	t1,84(sp)
20403c98:	c89e                	sw	t2,80(sp)
20403c9a:	c6a2                	sw	s0,76(sp)
20403c9c:	c4aa                	sw	a0,72(sp)
20403c9e:	c2ae                	sw	a1,68(sp)
20403ca0:	c0b2                	sw	a2,64(sp)
20403ca2:	de36                	sw	a3,60(sp)
20403ca4:	dc3a                	sw	a4,56(sp)
20403ca6:	da3e                	sw	a5,52(sp)
20403ca8:	d842                	sw	a6,48(sp)
20403caa:	d646                	sw	a7,44(sp)
20403cac:	d472                	sw	t3,40(sp)
20403cae:	d276                	sw	t4,36(sp)
20403cb0:	d07a                	sw	t5,32(sp)
20403cb2:	ce7e                	sw	t6,28(sp)
20403cb4:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403cb6:	999ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403cba:	872a                	mv	a4,a0
20403cbc:	800007b7          	lui	a5,0x80000
20403cc0:	070a                	slli	a4,a4,0x2
20403cc2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403cc6:	97ba                	add	a5,a5,a4
20403cc8:	439c                	lw	a5,0(a5)
20403cca:	faf42623          	sw	a5,-84(s0)
20403cce:	fac42783          	lw	a5,-84(s0)
20403cd2:	c78d                	beqz	a5,20403cfc <metal_lc1_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403cd4:	fac42503          	lw	a0,-84(s0)
20403cd8:	8f9ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403cdc:	faa42423          	sw	a0,-88(s0)
20403ce0:	fa842783          	lw	a5,-88(s0)
20403ce4:	2307a783          	lw	a5,560(a5)
20403ce8:	faf42223          	sw	a5,-92(s0)
20403cec:	fa842783          	lw	a5,-88(s0)
20403cf0:	2287a783          	lw	a5,552(a5)
20403cf4:	fa442583          	lw	a1,-92(s0)
20403cf8:	4545                	li	a0,17
20403cfa:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:221
}
20403cfc:	0001                	nop
20403cfe:	40f6                	lw	ra,92(sp)
20403d00:	42e6                	lw	t0,88(sp)
20403d02:	4356                	lw	t1,84(sp)
20403d04:	43c6                	lw	t2,80(sp)
20403d06:	4436                	lw	s0,76(sp)
20403d08:	4526                	lw	a0,72(sp)
20403d0a:	4596                	lw	a1,68(sp)
20403d0c:	4606                	lw	a2,64(sp)
20403d0e:	56f2                	lw	a3,60(sp)
20403d10:	5762                	lw	a4,56(sp)
20403d12:	57d2                	lw	a5,52(sp)
20403d14:	5842                	lw	a6,48(sp)
20403d16:	58b2                	lw	a7,44(sp)
20403d18:	5e22                	lw	t3,40(sp)
20403d1a:	5e92                	lw	t4,36(sp)
20403d1c:	5f02                	lw	t5,32(sp)
20403d1e:	4ff2                	lw	t6,28(sp)
20403d20:	6125                	addi	sp,sp,96
20403d22:	30200073          	mret

20403d26 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403d26:	711d                	addi	sp,sp,-96
20403d28:	ce86                	sw	ra,92(sp)
20403d2a:	cc96                	sw	t0,88(sp)
20403d2c:	ca9a                	sw	t1,84(sp)
20403d2e:	c89e                	sw	t2,80(sp)
20403d30:	c6a2                	sw	s0,76(sp)
20403d32:	c4aa                	sw	a0,72(sp)
20403d34:	c2ae                	sw	a1,68(sp)
20403d36:	c0b2                	sw	a2,64(sp)
20403d38:	de36                	sw	a3,60(sp)
20403d3a:	dc3a                	sw	a4,56(sp)
20403d3c:	da3e                	sw	a5,52(sp)
20403d3e:	d842                	sw	a6,48(sp)
20403d40:	d646                	sw	a7,44(sp)
20403d42:	d472                	sw	t3,40(sp)
20403d44:	d276                	sw	t4,36(sp)
20403d46:	d07a                	sw	t5,32(sp)
20403d48:	ce7e                	sw	t6,28(sp)
20403d4a:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20403d4c:	903ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403d50:	872a                	mv	a4,a0
20403d52:	800007b7          	lui	a5,0x80000
20403d56:	070a                	slli	a4,a4,0x2
20403d58:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403d5c:	97ba                	add	a5,a5,a4
20403d5e:	439c                	lw	a5,0(a5)
20403d60:	faf42623          	sw	a5,-84(s0)
20403d64:	fac42783          	lw	a5,-84(s0)
20403d68:	c78d                	beqz	a5,20403d92 <metal_lc2_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403d6a:	fac42503          	lw	a0,-84(s0)
20403d6e:	863ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403d72:	faa42423          	sw	a0,-88(s0)
20403d76:	fa842783          	lw	a5,-88(s0)
20403d7a:	2487a783          	lw	a5,584(a5)
20403d7e:	faf42223          	sw	a5,-92(s0)
20403d82:	fa842783          	lw	a5,-88(s0)
20403d86:	2407a783          	lw	a5,576(a5)
20403d8a:	fa442583          	lw	a1,-92(s0)
20403d8e:	4549                	li	a0,18
20403d90:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403d92:	0001                	nop
20403d94:	40f6                	lw	ra,92(sp)
20403d96:	42e6                	lw	t0,88(sp)
20403d98:	4356                	lw	t1,84(sp)
20403d9a:	43c6                	lw	t2,80(sp)
20403d9c:	4436                	lw	s0,76(sp)
20403d9e:	4526                	lw	a0,72(sp)
20403da0:	4596                	lw	a1,68(sp)
20403da2:	4606                	lw	a2,64(sp)
20403da4:	56f2                	lw	a3,60(sp)
20403da6:	5762                	lw	a4,56(sp)
20403da8:	57d2                	lw	a5,52(sp)
20403daa:	5842                	lw	a6,48(sp)
20403dac:	58b2                	lw	a7,44(sp)
20403dae:	5e22                	lw	t3,40(sp)
20403db0:	5e92                	lw	t4,36(sp)
20403db2:	5f02                	lw	t5,32(sp)
20403db4:	4ff2                	lw	t6,28(sp)
20403db6:	6125                	addi	sp,sp,96
20403db8:	30200073          	mret

20403dbc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20403dbc:	711d                	addi	sp,sp,-96
20403dbe:	ce86                	sw	ra,92(sp)
20403dc0:	cc96                	sw	t0,88(sp)
20403dc2:	ca9a                	sw	t1,84(sp)
20403dc4:	c89e                	sw	t2,80(sp)
20403dc6:	c6a2                	sw	s0,76(sp)
20403dc8:	c4aa                	sw	a0,72(sp)
20403dca:	c2ae                	sw	a1,68(sp)
20403dcc:	c0b2                	sw	a2,64(sp)
20403dce:	de36                	sw	a3,60(sp)
20403dd0:	dc3a                	sw	a4,56(sp)
20403dd2:	da3e                	sw	a5,52(sp)
20403dd4:	d842                	sw	a6,48(sp)
20403dd6:	d646                	sw	a7,44(sp)
20403dd8:	d472                	sw	t3,40(sp)
20403dda:	d276                	sw	t4,36(sp)
20403ddc:	d07a                	sw	t5,32(sp)
20403dde:	ce7e                	sw	t6,28(sp)
20403de0:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20403de2:	86dff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403de6:	872a                	mv	a4,a0
20403de8:	800007b7          	lui	a5,0x80000
20403dec:	070a                	slli	a4,a4,0x2
20403dee:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403df2:	97ba                	add	a5,a5,a4
20403df4:	439c                	lw	a5,0(a5)
20403df6:	faf42623          	sw	a5,-84(s0)
20403dfa:	fac42783          	lw	a5,-84(s0)
20403dfe:	c78d                	beqz	a5,20403e28 <metal_lc3_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403e00:	fac42503          	lw	a0,-84(s0)
20403e04:	fccff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403e08:	faa42423          	sw	a0,-88(s0)
20403e0c:	fa842783          	lw	a5,-88(s0)
20403e10:	2607a783          	lw	a5,608(a5)
20403e14:	faf42223          	sw	a5,-92(s0)
20403e18:	fa842783          	lw	a5,-88(s0)
20403e1c:	2587a783          	lw	a5,600(a5)
20403e20:	fa442583          	lw	a1,-92(s0)
20403e24:	454d                	li	a0,19
20403e26:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403e28:	0001                	nop
20403e2a:	40f6                	lw	ra,92(sp)
20403e2c:	42e6                	lw	t0,88(sp)
20403e2e:	4356                	lw	t1,84(sp)
20403e30:	43c6                	lw	t2,80(sp)
20403e32:	4436                	lw	s0,76(sp)
20403e34:	4526                	lw	a0,72(sp)
20403e36:	4596                	lw	a1,68(sp)
20403e38:	4606                	lw	a2,64(sp)
20403e3a:	56f2                	lw	a3,60(sp)
20403e3c:	5762                	lw	a4,56(sp)
20403e3e:	57d2                	lw	a5,52(sp)
20403e40:	5842                	lw	a6,48(sp)
20403e42:	58b2                	lw	a7,44(sp)
20403e44:	5e22                	lw	t3,40(sp)
20403e46:	5e92                	lw	t4,36(sp)
20403e48:	5f02                	lw	t5,32(sp)
20403e4a:	4ff2                	lw	t6,28(sp)
20403e4c:	6125                	addi	sp,sp,96
20403e4e:	30200073          	mret

20403e52 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403e52:	711d                	addi	sp,sp,-96
20403e54:	ce86                	sw	ra,92(sp)
20403e56:	cc96                	sw	t0,88(sp)
20403e58:	ca9a                	sw	t1,84(sp)
20403e5a:	c89e                	sw	t2,80(sp)
20403e5c:	c6a2                	sw	s0,76(sp)
20403e5e:	c4aa                	sw	a0,72(sp)
20403e60:	c2ae                	sw	a1,68(sp)
20403e62:	c0b2                	sw	a2,64(sp)
20403e64:	de36                	sw	a3,60(sp)
20403e66:	dc3a                	sw	a4,56(sp)
20403e68:	da3e                	sw	a5,52(sp)
20403e6a:	d842                	sw	a6,48(sp)
20403e6c:	d646                	sw	a7,44(sp)
20403e6e:	d472                	sw	t3,40(sp)
20403e70:	d276                	sw	t4,36(sp)
20403e72:	d07a                	sw	t5,32(sp)
20403e74:	ce7e                	sw	t6,28(sp)
20403e76:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403e78:	fd6ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403e7c:	872a                	mv	a4,a0
20403e7e:	800007b7          	lui	a5,0x80000
20403e82:	070a                	slli	a4,a4,0x2
20403e84:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403e88:	97ba                	add	a5,a5,a4
20403e8a:	439c                	lw	a5,0(a5)
20403e8c:	faf42623          	sw	a5,-84(s0)
20403e90:	fac42783          	lw	a5,-84(s0)
20403e94:	c78d                	beqz	a5,20403ebe <metal_lc4_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403e96:	fac42503          	lw	a0,-84(s0)
20403e9a:	f36ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403e9e:	faa42423          	sw	a0,-88(s0)
20403ea2:	fa842783          	lw	a5,-88(s0)
20403ea6:	2787a783          	lw	a5,632(a5)
20403eaa:	faf42223          	sw	a5,-92(s0)
20403eae:	fa842783          	lw	a5,-88(s0)
20403eb2:	2707a783          	lw	a5,624(a5)
20403eb6:	fa442583          	lw	a1,-92(s0)
20403eba:	4551                	li	a0,20
20403ebc:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:236
}
20403ebe:	0001                	nop
20403ec0:	40f6                	lw	ra,92(sp)
20403ec2:	42e6                	lw	t0,88(sp)
20403ec4:	4356                	lw	t1,84(sp)
20403ec6:	43c6                	lw	t2,80(sp)
20403ec8:	4436                	lw	s0,76(sp)
20403eca:	4526                	lw	a0,72(sp)
20403ecc:	4596                	lw	a1,68(sp)
20403ece:	4606                	lw	a2,64(sp)
20403ed0:	56f2                	lw	a3,60(sp)
20403ed2:	5762                	lw	a4,56(sp)
20403ed4:	57d2                	lw	a5,52(sp)
20403ed6:	5842                	lw	a6,48(sp)
20403ed8:	58b2                	lw	a7,44(sp)
20403eda:	5e22                	lw	t3,40(sp)
20403edc:	5e92                	lw	t4,36(sp)
20403ede:	5f02                	lw	t5,32(sp)
20403ee0:	4ff2                	lw	t6,28(sp)
20403ee2:	6125                	addi	sp,sp,96
20403ee4:	30200073          	mret

20403ee8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20403ee8:	711d                	addi	sp,sp,-96
20403eea:	ce86                	sw	ra,92(sp)
20403eec:	cc96                	sw	t0,88(sp)
20403eee:	ca9a                	sw	t1,84(sp)
20403ef0:	c89e                	sw	t2,80(sp)
20403ef2:	c6a2                	sw	s0,76(sp)
20403ef4:	c4aa                	sw	a0,72(sp)
20403ef6:	c2ae                	sw	a1,68(sp)
20403ef8:	c0b2                	sw	a2,64(sp)
20403efa:	de36                	sw	a3,60(sp)
20403efc:	dc3a                	sw	a4,56(sp)
20403efe:	da3e                	sw	a5,52(sp)
20403f00:	d842                	sw	a6,48(sp)
20403f02:	d646                	sw	a7,44(sp)
20403f04:	d472                	sw	t3,40(sp)
20403f06:	d276                	sw	t4,36(sp)
20403f08:	d07a                	sw	t5,32(sp)
20403f0a:	ce7e                	sw	t6,28(sp)
20403f0c:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20403f0e:	f40ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403f12:	872a                	mv	a4,a0
20403f14:	800007b7          	lui	a5,0x80000
20403f18:	070a                	slli	a4,a4,0x2
20403f1a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403f1e:	97ba                	add	a5,a5,a4
20403f20:	439c                	lw	a5,0(a5)
20403f22:	faf42623          	sw	a5,-84(s0)
20403f26:	fac42783          	lw	a5,-84(s0)
20403f2a:	c78d                	beqz	a5,20403f54 <metal_lc5_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20403f2c:	fac42503          	lw	a0,-84(s0)
20403f30:	ea0ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403f34:	faa42423          	sw	a0,-88(s0)
20403f38:	fa842783          	lw	a5,-88(s0)
20403f3c:	2907a783          	lw	a5,656(a5)
20403f40:	faf42223          	sw	a5,-92(s0)
20403f44:	fa842783          	lw	a5,-88(s0)
20403f48:	2887a783          	lw	a5,648(a5)
20403f4c:	fa442583          	lw	a1,-92(s0)
20403f50:	4555                	li	a0,21
20403f52:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403f54:	0001                	nop
20403f56:	40f6                	lw	ra,92(sp)
20403f58:	42e6                	lw	t0,88(sp)
20403f5a:	4356                	lw	t1,84(sp)
20403f5c:	43c6                	lw	t2,80(sp)
20403f5e:	4436                	lw	s0,76(sp)
20403f60:	4526                	lw	a0,72(sp)
20403f62:	4596                	lw	a1,68(sp)
20403f64:	4606                	lw	a2,64(sp)
20403f66:	56f2                	lw	a3,60(sp)
20403f68:	5762                	lw	a4,56(sp)
20403f6a:	57d2                	lw	a5,52(sp)
20403f6c:	5842                	lw	a6,48(sp)
20403f6e:	58b2                	lw	a7,44(sp)
20403f70:	5e22                	lw	t3,40(sp)
20403f72:	5e92                	lw	t4,36(sp)
20403f74:	5f02                	lw	t5,32(sp)
20403f76:	4ff2                	lw	t6,28(sp)
20403f78:	6125                	addi	sp,sp,96
20403f7a:	30200073          	mret

20403f7e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20403f7e:	711d                	addi	sp,sp,-96
20403f80:	ce86                	sw	ra,92(sp)
20403f82:	cc96                	sw	t0,88(sp)
20403f84:	ca9a                	sw	t1,84(sp)
20403f86:	c89e                	sw	t2,80(sp)
20403f88:	c6a2                	sw	s0,76(sp)
20403f8a:	c4aa                	sw	a0,72(sp)
20403f8c:	c2ae                	sw	a1,68(sp)
20403f8e:	c0b2                	sw	a2,64(sp)
20403f90:	de36                	sw	a3,60(sp)
20403f92:	dc3a                	sw	a4,56(sp)
20403f94:	da3e                	sw	a5,52(sp)
20403f96:	d842                	sw	a6,48(sp)
20403f98:	d646                	sw	a7,44(sp)
20403f9a:	d472                	sw	t3,40(sp)
20403f9c:	d276                	sw	t4,36(sp)
20403f9e:	d07a                	sw	t5,32(sp)
20403fa0:	ce7e                	sw	t6,28(sp)
20403fa2:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20403fa4:	eaaff0ef          	jal	ra,2040364e <__metal_myhart_id>
20403fa8:	872a                	mv	a4,a0
20403faa:	800007b7          	lui	a5,0x80000
20403fae:	070a                	slli	a4,a4,0x2
20403fb0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20403fb4:	97ba                	add	a5,a5,a4
20403fb6:	439c                	lw	a5,0(a5)
20403fb8:	faf42623          	sw	a5,-84(s0)
20403fbc:	fac42783          	lw	a5,-84(s0)
20403fc0:	c78d                	beqz	a5,20403fea <metal_lc6_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20403fc2:	fac42503          	lw	a0,-84(s0)
20403fc6:	e0aff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20403fca:	faa42423          	sw	a0,-88(s0)
20403fce:	fa842783          	lw	a5,-88(s0)
20403fd2:	2a87a783          	lw	a5,680(a5)
20403fd6:	faf42223          	sw	a5,-92(s0)
20403fda:	fa842783          	lw	a5,-88(s0)
20403fde:	2a07a783          	lw	a5,672(a5)
20403fe2:	fa442583          	lw	a1,-92(s0)
20403fe6:	4559                	li	a0,22
20403fe8:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:246
}
20403fea:	0001                	nop
20403fec:	40f6                	lw	ra,92(sp)
20403fee:	42e6                	lw	t0,88(sp)
20403ff0:	4356                	lw	t1,84(sp)
20403ff2:	43c6                	lw	t2,80(sp)
20403ff4:	4436                	lw	s0,76(sp)
20403ff6:	4526                	lw	a0,72(sp)
20403ff8:	4596                	lw	a1,68(sp)
20403ffa:	4606                	lw	a2,64(sp)
20403ffc:	56f2                	lw	a3,60(sp)
20403ffe:	5762                	lw	a4,56(sp)
20404000:	57d2                	lw	a5,52(sp)
20404002:	5842                	lw	a6,48(sp)
20404004:	58b2                	lw	a7,44(sp)
20404006:	5e22                	lw	t3,40(sp)
20404008:	5e92                	lw	t4,36(sp)
2040400a:	5f02                	lw	t5,32(sp)
2040400c:	4ff2                	lw	t6,28(sp)
2040400e:	6125                	addi	sp,sp,96
20404010:	30200073          	mret

20404014 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404014:	711d                	addi	sp,sp,-96
20404016:	ce86                	sw	ra,92(sp)
20404018:	cc96                	sw	t0,88(sp)
2040401a:	ca9a                	sw	t1,84(sp)
2040401c:	c89e                	sw	t2,80(sp)
2040401e:	c6a2                	sw	s0,76(sp)
20404020:	c4aa                	sw	a0,72(sp)
20404022:	c2ae                	sw	a1,68(sp)
20404024:	c0b2                	sw	a2,64(sp)
20404026:	de36                	sw	a3,60(sp)
20404028:	dc3a                	sw	a4,56(sp)
2040402a:	da3e                	sw	a5,52(sp)
2040402c:	d842                	sw	a6,48(sp)
2040402e:	d646                	sw	a7,44(sp)
20404030:	d472                	sw	t3,40(sp)
20404032:	d276                	sw	t4,36(sp)
20404034:	d07a                	sw	t5,32(sp)
20404036:	ce7e                	sw	t6,28(sp)
20404038:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040403a:	e14ff0ef          	jal	ra,2040364e <__metal_myhart_id>
2040403e:	872a                	mv	a4,a0
20404040:	800007b7          	lui	a5,0x80000
20404044:	070a                	slli	a4,a4,0x2
20404046:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
2040404a:	97ba                	add	a5,a5,a4
2040404c:	439c                	lw	a5,0(a5)
2040404e:	faf42623          	sw	a5,-84(s0)
20404052:	fac42783          	lw	a5,-84(s0)
20404056:	c78d                	beqz	a5,20404080 <metal_lc7_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20404058:	fac42503          	lw	a0,-84(s0)
2040405c:	d74ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404060:	faa42423          	sw	a0,-88(s0)
20404064:	fa842783          	lw	a5,-88(s0)
20404068:	2c07a783          	lw	a5,704(a5)
2040406c:	faf42223          	sw	a5,-92(s0)
20404070:	fa842783          	lw	a5,-88(s0)
20404074:	2b87a783          	lw	a5,696(a5)
20404078:	fa442583          	lw	a1,-92(s0)
2040407c:	455d                	li	a0,23
2040407e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404080:	0001                	nop
20404082:	40f6                	lw	ra,92(sp)
20404084:	42e6                	lw	t0,88(sp)
20404086:	4356                	lw	t1,84(sp)
20404088:	43c6                	lw	t2,80(sp)
2040408a:	4436                	lw	s0,76(sp)
2040408c:	4526                	lw	a0,72(sp)
2040408e:	4596                	lw	a1,68(sp)
20404090:	4606                	lw	a2,64(sp)
20404092:	56f2                	lw	a3,60(sp)
20404094:	5762                	lw	a4,56(sp)
20404096:	57d2                	lw	a5,52(sp)
20404098:	5842                	lw	a6,48(sp)
2040409a:	58b2                	lw	a7,44(sp)
2040409c:	5e22                	lw	t3,40(sp)
2040409e:	5e92                	lw	t4,36(sp)
204040a0:	5f02                	lw	t5,32(sp)
204040a2:	4ff2                	lw	t6,28(sp)
204040a4:	6125                	addi	sp,sp,96
204040a6:	30200073          	mret

204040aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204040aa:	711d                	addi	sp,sp,-96
204040ac:	ce86                	sw	ra,92(sp)
204040ae:	cc96                	sw	t0,88(sp)
204040b0:	ca9a                	sw	t1,84(sp)
204040b2:	c89e                	sw	t2,80(sp)
204040b4:	c6a2                	sw	s0,76(sp)
204040b6:	c4aa                	sw	a0,72(sp)
204040b8:	c2ae                	sw	a1,68(sp)
204040ba:	c0b2                	sw	a2,64(sp)
204040bc:	de36                	sw	a3,60(sp)
204040be:	dc3a                	sw	a4,56(sp)
204040c0:	da3e                	sw	a5,52(sp)
204040c2:	d842                	sw	a6,48(sp)
204040c4:	d646                	sw	a7,44(sp)
204040c6:	d472                	sw	t3,40(sp)
204040c8:	d276                	sw	t4,36(sp)
204040ca:	d07a                	sw	t5,32(sp)
204040cc:	ce7e                	sw	t6,28(sp)
204040ce:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204040d0:	d7eff0ef          	jal	ra,2040364e <__metal_myhart_id>
204040d4:	872a                	mv	a4,a0
204040d6:	800007b7          	lui	a5,0x80000
204040da:	070a                	slli	a4,a4,0x2
204040dc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
204040e0:	97ba                	add	a5,a5,a4
204040e2:	439c                	lw	a5,0(a5)
204040e4:	faf42623          	sw	a5,-84(s0)
204040e8:	fac42783          	lw	a5,-84(s0)
204040ec:	c78d                	beqz	a5,20404116 <metal_lc8_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204040ee:	fac42503          	lw	a0,-84(s0)
204040f2:	cdeff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
204040f6:	faa42423          	sw	a0,-88(s0)
204040fa:	fa842783          	lw	a5,-88(s0)
204040fe:	2d87a783          	lw	a5,728(a5)
20404102:	faf42223          	sw	a5,-92(s0)
20404106:	fa842783          	lw	a5,-88(s0)
2040410a:	2d07a783          	lw	a5,720(a5)
2040410e:	fa442583          	lw	a1,-92(s0)
20404112:	4561                	li	a0,24
20404114:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404116:	0001                	nop
20404118:	40f6                	lw	ra,92(sp)
2040411a:	42e6                	lw	t0,88(sp)
2040411c:	4356                	lw	t1,84(sp)
2040411e:	43c6                	lw	t2,80(sp)
20404120:	4436                	lw	s0,76(sp)
20404122:	4526                	lw	a0,72(sp)
20404124:	4596                	lw	a1,68(sp)
20404126:	4606                	lw	a2,64(sp)
20404128:	56f2                	lw	a3,60(sp)
2040412a:	5762                	lw	a4,56(sp)
2040412c:	57d2                	lw	a5,52(sp)
2040412e:	5842                	lw	a6,48(sp)
20404130:	58b2                	lw	a7,44(sp)
20404132:	5e22                	lw	t3,40(sp)
20404134:	5e92                	lw	t4,36(sp)
20404136:	5f02                	lw	t5,32(sp)
20404138:	4ff2                	lw	t6,28(sp)
2040413a:	6125                	addi	sp,sp,96
2040413c:	30200073          	mret

20404140 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20404140:	711d                	addi	sp,sp,-96
20404142:	ce86                	sw	ra,92(sp)
20404144:	cc96                	sw	t0,88(sp)
20404146:	ca9a                	sw	t1,84(sp)
20404148:	c89e                	sw	t2,80(sp)
2040414a:	c6a2                	sw	s0,76(sp)
2040414c:	c4aa                	sw	a0,72(sp)
2040414e:	c2ae                	sw	a1,68(sp)
20404150:	c0b2                	sw	a2,64(sp)
20404152:	de36                	sw	a3,60(sp)
20404154:	dc3a                	sw	a4,56(sp)
20404156:	da3e                	sw	a5,52(sp)
20404158:	d842                	sw	a6,48(sp)
2040415a:	d646                	sw	a7,44(sp)
2040415c:	d472                	sw	t3,40(sp)
2040415e:	d276                	sw	t4,36(sp)
20404160:	d07a                	sw	t5,32(sp)
20404162:	ce7e                	sw	t6,28(sp)
20404164:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20404166:	ce8ff0ef          	jal	ra,2040364e <__metal_myhart_id>
2040416a:	872a                	mv	a4,a0
2040416c:	800007b7          	lui	a5,0x80000
20404170:	070a                	slli	a4,a4,0x2
20404172:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20404176:	97ba                	add	a5,a5,a4
20404178:	439c                	lw	a5,0(a5)
2040417a:	faf42623          	sw	a5,-84(s0)
2040417e:	fac42783          	lw	a5,-84(s0)
20404182:	c78d                	beqz	a5,204041ac <metal_lc9_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404184:	fac42503          	lw	a0,-84(s0)
20404188:	c48ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
2040418c:	faa42423          	sw	a0,-88(s0)
20404190:	fa842783          	lw	a5,-88(s0)
20404194:	2f07a783          	lw	a5,752(a5)
20404198:	faf42223          	sw	a5,-92(s0)
2040419c:	fa842783          	lw	a5,-88(s0)
204041a0:	2e87a783          	lw	a5,744(a5)
204041a4:	fa442583          	lw	a1,-92(s0)
204041a8:	4565                	li	a0,25
204041aa:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:261
}
204041ac:	0001                	nop
204041ae:	40f6                	lw	ra,92(sp)
204041b0:	42e6                	lw	t0,88(sp)
204041b2:	4356                	lw	t1,84(sp)
204041b4:	43c6                	lw	t2,80(sp)
204041b6:	4436                	lw	s0,76(sp)
204041b8:	4526                	lw	a0,72(sp)
204041ba:	4596                	lw	a1,68(sp)
204041bc:	4606                	lw	a2,64(sp)
204041be:	56f2                	lw	a3,60(sp)
204041c0:	5762                	lw	a4,56(sp)
204041c2:	57d2                	lw	a5,52(sp)
204041c4:	5842                	lw	a6,48(sp)
204041c6:	58b2                	lw	a7,44(sp)
204041c8:	5e22                	lw	t3,40(sp)
204041ca:	5e92                	lw	t4,36(sp)
204041cc:	5f02                	lw	t5,32(sp)
204041ce:	4ff2                	lw	t6,28(sp)
204041d0:	6125                	addi	sp,sp,96
204041d2:	30200073          	mret

204041d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204041d6:	711d                	addi	sp,sp,-96
204041d8:	ce86                	sw	ra,92(sp)
204041da:	cc96                	sw	t0,88(sp)
204041dc:	ca9a                	sw	t1,84(sp)
204041de:	c89e                	sw	t2,80(sp)
204041e0:	c6a2                	sw	s0,76(sp)
204041e2:	c4aa                	sw	a0,72(sp)
204041e4:	c2ae                	sw	a1,68(sp)
204041e6:	c0b2                	sw	a2,64(sp)
204041e8:	de36                	sw	a3,60(sp)
204041ea:	dc3a                	sw	a4,56(sp)
204041ec:	da3e                	sw	a5,52(sp)
204041ee:	d842                	sw	a6,48(sp)
204041f0:	d646                	sw	a7,44(sp)
204041f2:	d472                	sw	t3,40(sp)
204041f4:	d276                	sw	t4,36(sp)
204041f6:	d07a                	sw	t5,32(sp)
204041f8:	ce7e                	sw	t6,28(sp)
204041fa:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204041fc:	c52ff0ef          	jal	ra,2040364e <__metal_myhart_id>
20404200:	872a                	mv	a4,a0
20404202:	800007b7          	lui	a5,0x80000
20404206:	070a                	slli	a4,a4,0x2
20404208:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
2040420c:	97ba                	add	a5,a5,a4
2040420e:	439c                	lw	a5,0(a5)
20404210:	faf42623          	sw	a5,-84(s0)
20404214:	fac42783          	lw	a5,-84(s0)
20404218:	c78d                	beqz	a5,20404242 <metal_lc10_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040421a:	fac42503          	lw	a0,-84(s0)
2040421e:	bb2ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404222:	faa42423          	sw	a0,-88(s0)
20404226:	fa842783          	lw	a5,-88(s0)
2040422a:	3087a783          	lw	a5,776(a5)
2040422e:	faf42223          	sw	a5,-92(s0)
20404232:	fa842783          	lw	a5,-88(s0)
20404236:	3007a783          	lw	a5,768(a5)
2040423a:	fa442583          	lw	a1,-92(s0)
2040423e:	4569                	li	a0,26
20404240:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:267
}
20404242:	0001                	nop
20404244:	40f6                	lw	ra,92(sp)
20404246:	42e6                	lw	t0,88(sp)
20404248:	4356                	lw	t1,84(sp)
2040424a:	43c6                	lw	t2,80(sp)
2040424c:	4436                	lw	s0,76(sp)
2040424e:	4526                	lw	a0,72(sp)
20404250:	4596                	lw	a1,68(sp)
20404252:	4606                	lw	a2,64(sp)
20404254:	56f2                	lw	a3,60(sp)
20404256:	5762                	lw	a4,56(sp)
20404258:	57d2                	lw	a5,52(sp)
2040425a:	5842                	lw	a6,48(sp)
2040425c:	58b2                	lw	a7,44(sp)
2040425e:	5e22                	lw	t3,40(sp)
20404260:	5e92                	lw	t4,36(sp)
20404262:	5f02                	lw	t5,32(sp)
20404264:	4ff2                	lw	t6,28(sp)
20404266:	6125                	addi	sp,sp,96
20404268:	30200073          	mret

2040426c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2040426c:	711d                	addi	sp,sp,-96
2040426e:	ce86                	sw	ra,92(sp)
20404270:	cc96                	sw	t0,88(sp)
20404272:	ca9a                	sw	t1,84(sp)
20404274:	c89e                	sw	t2,80(sp)
20404276:	c6a2                	sw	s0,76(sp)
20404278:	c4aa                	sw	a0,72(sp)
2040427a:	c2ae                	sw	a1,68(sp)
2040427c:	c0b2                	sw	a2,64(sp)
2040427e:	de36                	sw	a3,60(sp)
20404280:	dc3a                	sw	a4,56(sp)
20404282:	da3e                	sw	a5,52(sp)
20404284:	d842                	sw	a6,48(sp)
20404286:	d646                	sw	a7,44(sp)
20404288:	d472                	sw	t3,40(sp)
2040428a:	d276                	sw	t4,36(sp)
2040428c:	d07a                	sw	t5,32(sp)
2040428e:	ce7e                	sw	t6,28(sp)
20404290:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404292:	bbcff0ef          	jal	ra,2040364e <__metal_myhart_id>
20404296:	872a                	mv	a4,a0
20404298:	800007b7          	lui	a5,0x80000
2040429c:	070a                	slli	a4,a4,0x2
2040429e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
204042a2:	97ba                	add	a5,a5,a4
204042a4:	439c                	lw	a5,0(a5)
204042a6:	faf42623          	sw	a5,-84(s0)
204042aa:	fac42783          	lw	a5,-84(s0)
204042ae:	c78d                	beqz	a5,204042d8 <metal_lc11_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204042b0:	fac42503          	lw	a0,-84(s0)
204042b4:	b1cff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
204042b8:	faa42423          	sw	a0,-88(s0)
204042bc:	fa842783          	lw	a5,-88(s0)
204042c0:	3207a783          	lw	a5,800(a5)
204042c4:	faf42223          	sw	a5,-92(s0)
204042c8:	fa842783          	lw	a5,-88(s0)
204042cc:	3187a783          	lw	a5,792(a5)
204042d0:	fa442583          	lw	a1,-92(s0)
204042d4:	456d                	li	a0,27
204042d6:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:273
}
204042d8:	0001                	nop
204042da:	40f6                	lw	ra,92(sp)
204042dc:	42e6                	lw	t0,88(sp)
204042de:	4356                	lw	t1,84(sp)
204042e0:	43c6                	lw	t2,80(sp)
204042e2:	4436                	lw	s0,76(sp)
204042e4:	4526                	lw	a0,72(sp)
204042e6:	4596                	lw	a1,68(sp)
204042e8:	4606                	lw	a2,64(sp)
204042ea:	56f2                	lw	a3,60(sp)
204042ec:	5762                	lw	a4,56(sp)
204042ee:	57d2                	lw	a5,52(sp)
204042f0:	5842                	lw	a6,48(sp)
204042f2:	58b2                	lw	a7,44(sp)
204042f4:	5e22                	lw	t3,40(sp)
204042f6:	5e92                	lw	t4,36(sp)
204042f8:	5f02                	lw	t5,32(sp)
204042fa:	4ff2                	lw	t6,28(sp)
204042fc:	6125                	addi	sp,sp,96
204042fe:	30200073          	mret

20404302 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404302:	711d                	addi	sp,sp,-96
20404304:	ce86                	sw	ra,92(sp)
20404306:	cc96                	sw	t0,88(sp)
20404308:	ca9a                	sw	t1,84(sp)
2040430a:	c89e                	sw	t2,80(sp)
2040430c:	c6a2                	sw	s0,76(sp)
2040430e:	c4aa                	sw	a0,72(sp)
20404310:	c2ae                	sw	a1,68(sp)
20404312:	c0b2                	sw	a2,64(sp)
20404314:	de36                	sw	a3,60(sp)
20404316:	dc3a                	sw	a4,56(sp)
20404318:	da3e                	sw	a5,52(sp)
2040431a:	d842                	sw	a6,48(sp)
2040431c:	d646                	sw	a7,44(sp)
2040431e:	d472                	sw	t3,40(sp)
20404320:	d276                	sw	t4,36(sp)
20404322:	d07a                	sw	t5,32(sp)
20404324:	ce7e                	sw	t6,28(sp)
20404326:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20404328:	b26ff0ef          	jal	ra,2040364e <__metal_myhart_id>
2040432c:	872a                	mv	a4,a0
2040432e:	800007b7          	lui	a5,0x80000
20404332:	070a                	slli	a4,a4,0x2
20404334:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20404338:	97ba                	add	a5,a5,a4
2040433a:	439c                	lw	a5,0(a5)
2040433c:	faf42623          	sw	a5,-84(s0)
20404340:	fac42783          	lw	a5,-84(s0)
20404344:	c78d                	beqz	a5,2040436e <metal_lc12_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20404346:	fac42503          	lw	a0,-84(s0)
2040434a:	a86ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
2040434e:	faa42423          	sw	a0,-88(s0)
20404352:	fa842783          	lw	a5,-88(s0)
20404356:	3387a783          	lw	a5,824(a5)
2040435a:	faf42223          	sw	a5,-92(s0)
2040435e:	fa842783          	lw	a5,-88(s0)
20404362:	3307a783          	lw	a5,816(a5)
20404366:	fa442583          	lw	a1,-92(s0)
2040436a:	4571                	li	a0,28
2040436c:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:279
}
2040436e:	0001                	nop
20404370:	40f6                	lw	ra,92(sp)
20404372:	42e6                	lw	t0,88(sp)
20404374:	4356                	lw	t1,84(sp)
20404376:	43c6                	lw	t2,80(sp)
20404378:	4436                	lw	s0,76(sp)
2040437a:	4526                	lw	a0,72(sp)
2040437c:	4596                	lw	a1,68(sp)
2040437e:	4606                	lw	a2,64(sp)
20404380:	56f2                	lw	a3,60(sp)
20404382:	5762                	lw	a4,56(sp)
20404384:	57d2                	lw	a5,52(sp)
20404386:	5842                	lw	a6,48(sp)
20404388:	58b2                	lw	a7,44(sp)
2040438a:	5e22                	lw	t3,40(sp)
2040438c:	5e92                	lw	t4,36(sp)
2040438e:	5f02                	lw	t5,32(sp)
20404390:	4ff2                	lw	t6,28(sp)
20404392:	6125                	addi	sp,sp,96
20404394:	30200073          	mret

20404398 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404398:	711d                	addi	sp,sp,-96
2040439a:	ce86                	sw	ra,92(sp)
2040439c:	cc96                	sw	t0,88(sp)
2040439e:	ca9a                	sw	t1,84(sp)
204043a0:	c89e                	sw	t2,80(sp)
204043a2:	c6a2                	sw	s0,76(sp)
204043a4:	c4aa                	sw	a0,72(sp)
204043a6:	c2ae                	sw	a1,68(sp)
204043a8:	c0b2                	sw	a2,64(sp)
204043aa:	de36                	sw	a3,60(sp)
204043ac:	dc3a                	sw	a4,56(sp)
204043ae:	da3e                	sw	a5,52(sp)
204043b0:	d842                	sw	a6,48(sp)
204043b2:	d646                	sw	a7,44(sp)
204043b4:	d472                	sw	t3,40(sp)
204043b6:	d276                	sw	t4,36(sp)
204043b8:	d07a                	sw	t5,32(sp)
204043ba:	ce7e                	sw	t6,28(sp)
204043bc:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
204043be:	a90ff0ef          	jal	ra,2040364e <__metal_myhart_id>
204043c2:	872a                	mv	a4,a0
204043c4:	800007b7          	lui	a5,0x80000
204043c8:	070a                	slli	a4,a4,0x2
204043ca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
204043ce:	97ba                	add	a5,a5,a4
204043d0:	439c                	lw	a5,0(a5)
204043d2:	faf42623          	sw	a5,-84(s0)
204043d6:	fac42783          	lw	a5,-84(s0)
204043da:	c78d                	beqz	a5,20404404 <metal_lc13_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
204043dc:	fac42503          	lw	a0,-84(s0)
204043e0:	9f0ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
204043e4:	faa42423          	sw	a0,-88(s0)
204043e8:	fa842783          	lw	a5,-88(s0)
204043ec:	3507a783          	lw	a5,848(a5)
204043f0:	faf42223          	sw	a5,-92(s0)
204043f4:	fa842783          	lw	a5,-88(s0)
204043f8:	3487a783          	lw	a5,840(a5)
204043fc:	fa442583          	lw	a1,-92(s0)
20404400:	4575                	li	a0,29
20404402:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404404:	0001                	nop
20404406:	40f6                	lw	ra,92(sp)
20404408:	42e6                	lw	t0,88(sp)
2040440a:	4356                	lw	t1,84(sp)
2040440c:	43c6                	lw	t2,80(sp)
2040440e:	4436                	lw	s0,76(sp)
20404410:	4526                	lw	a0,72(sp)
20404412:	4596                	lw	a1,68(sp)
20404414:	4606                	lw	a2,64(sp)
20404416:	56f2                	lw	a3,60(sp)
20404418:	5762                	lw	a4,56(sp)
2040441a:	57d2                	lw	a5,52(sp)
2040441c:	5842                	lw	a6,48(sp)
2040441e:	58b2                	lw	a7,44(sp)
20404420:	5e22                	lw	t3,40(sp)
20404422:	5e92                	lw	t4,36(sp)
20404424:	5f02                	lw	t5,32(sp)
20404426:	4ff2                	lw	t6,28(sp)
20404428:	6125                	addi	sp,sp,96
2040442a:	30200073          	mret

2040442e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2040442e:	711d                	addi	sp,sp,-96
20404430:	ce86                	sw	ra,92(sp)
20404432:	cc96                	sw	t0,88(sp)
20404434:	ca9a                	sw	t1,84(sp)
20404436:	c89e                	sw	t2,80(sp)
20404438:	c6a2                	sw	s0,76(sp)
2040443a:	c4aa                	sw	a0,72(sp)
2040443c:	c2ae                	sw	a1,68(sp)
2040443e:	c0b2                	sw	a2,64(sp)
20404440:	de36                	sw	a3,60(sp)
20404442:	dc3a                	sw	a4,56(sp)
20404444:	da3e                	sw	a5,52(sp)
20404446:	d842                	sw	a6,48(sp)
20404448:	d646                	sw	a7,44(sp)
2040444a:	d472                	sw	t3,40(sp)
2040444c:	d276                	sw	t4,36(sp)
2040444e:	d07a                	sw	t5,32(sp)
20404450:	ce7e                	sw	t6,28(sp)
20404452:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404454:	9faff0ef          	jal	ra,2040364e <__metal_myhart_id>
20404458:	872a                	mv	a4,a0
2040445a:	800007b7          	lui	a5,0x80000
2040445e:	070a                	slli	a4,a4,0x2
20404460:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
20404464:	97ba                	add	a5,a5,a4
20404466:	439c                	lw	a5,0(a5)
20404468:	faf42623          	sw	a5,-84(s0)
2040446c:	fac42783          	lw	a5,-84(s0)
20404470:	c78d                	beqz	a5,2040449a <metal_lc14_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404472:	fac42503          	lw	a0,-84(s0)
20404476:	95aff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
2040447a:	faa42423          	sw	a0,-88(s0)
2040447e:	fa842783          	lw	a5,-88(s0)
20404482:	3687a783          	lw	a5,872(a5)
20404486:	faf42223          	sw	a5,-92(s0)
2040448a:	fa842783          	lw	a5,-88(s0)
2040448e:	3607a783          	lw	a5,864(a5)
20404492:	fa442583          	lw	a1,-92(s0)
20404496:	4579                	li	a0,30
20404498:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040449a:	0001                	nop
2040449c:	40f6                	lw	ra,92(sp)
2040449e:	42e6                	lw	t0,88(sp)
204044a0:	4356                	lw	t1,84(sp)
204044a2:	43c6                	lw	t2,80(sp)
204044a4:	4436                	lw	s0,76(sp)
204044a6:	4526                	lw	a0,72(sp)
204044a8:	4596                	lw	a1,68(sp)
204044aa:	4606                	lw	a2,64(sp)
204044ac:	56f2                	lw	a3,60(sp)
204044ae:	5762                	lw	a4,56(sp)
204044b0:	57d2                	lw	a5,52(sp)
204044b2:	5842                	lw	a6,48(sp)
204044b4:	58b2                	lw	a7,44(sp)
204044b6:	5e22                	lw	t3,40(sp)
204044b8:	5e92                	lw	t4,36(sp)
204044ba:	5f02                	lw	t5,32(sp)
204044bc:	4ff2                	lw	t6,28(sp)
204044be:	6125                	addi	sp,sp,96
204044c0:	30200073          	mret

204044c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
204044c4:	711d                	addi	sp,sp,-96
204044c6:	ce86                	sw	ra,92(sp)
204044c8:	cc96                	sw	t0,88(sp)
204044ca:	ca9a                	sw	t1,84(sp)
204044cc:	c89e                	sw	t2,80(sp)
204044ce:	c6a2                	sw	s0,76(sp)
204044d0:	c4aa                	sw	a0,72(sp)
204044d2:	c2ae                	sw	a1,68(sp)
204044d4:	c0b2                	sw	a2,64(sp)
204044d6:	de36                	sw	a3,60(sp)
204044d8:	dc3a                	sw	a4,56(sp)
204044da:	da3e                	sw	a5,52(sp)
204044dc:	d842                	sw	a6,48(sp)
204044de:	d646                	sw	a7,44(sp)
204044e0:	d472                	sw	t3,40(sp)
204044e2:	d276                	sw	t4,36(sp)
204044e4:	d07a                	sw	t5,32(sp)
204044e6:	ce7e                	sw	t6,28(sp)
204044e8:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
204044ea:	964ff0ef          	jal	ra,2040364e <__metal_myhart_id>
204044ee:	872a                	mv	a4,a0
204044f0:	800007b7          	lui	a5,0x80000
204044f4:	070a                	slli	a4,a4,0x2
204044f6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
204044fa:	97ba                	add	a5,a5,a4
204044fc:	439c                	lw	a5,0(a5)
204044fe:	faf42623          	sw	a5,-84(s0)
20404502:	fac42783          	lw	a5,-84(s0)
20404506:	c78d                	beqz	a5,20404530 <metal_lc15_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404508:	fac42503          	lw	a0,-84(s0)
2040450c:	8c4ff0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404510:	faa42423          	sw	a0,-88(s0)
20404514:	fa842783          	lw	a5,-88(s0)
20404518:	3807a783          	lw	a5,896(a5)
2040451c:	faf42223          	sw	a5,-92(s0)
20404520:	fa842783          	lw	a5,-88(s0)
20404524:	3787a783          	lw	a5,888(a5)
20404528:	fa442583          	lw	a1,-92(s0)
2040452c:	457d                	li	a0,31
2040452e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404530:	0001                	nop
20404532:	40f6                	lw	ra,92(sp)
20404534:	42e6                	lw	t0,88(sp)
20404536:	4356                	lw	t1,84(sp)
20404538:	43c6                	lw	t2,80(sp)
2040453a:	4436                	lw	s0,76(sp)
2040453c:	4526                	lw	a0,72(sp)
2040453e:	4596                	lw	a1,68(sp)
20404540:	4606                	lw	a2,64(sp)
20404542:	56f2                	lw	a3,60(sp)
20404544:	5762                	lw	a4,56(sp)
20404546:	57d2                	lw	a5,52(sp)
20404548:	5842                	lw	a6,48(sp)
2040454a:	58b2                	lw	a7,44(sp)
2040454c:	5e22                	lw	t3,40(sp)
2040454e:	5e92                	lw	t4,36(sp)
20404550:	5f02                	lw	t5,32(sp)
20404552:	4ff2                	lw	t6,28(sp)
20404554:	6125                	addi	sp,sp,96
20404556:	30200073          	mret

2040455a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2040455a:	1101                	addi	sp,sp,-32
2040455c:	ce22                	sw	s0,28(sp)
2040455e:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404560:	305027f3          	csrr	a5,mtvec
20404564:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404568:	fec42783          	lw	a5,-20(s0)
2040456c:	03f7f793          	andi	a5,a5,63
20404570:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404574:	fec42703          	lw	a4,-20(s0)
20404578:	478d                	li	a5,3
2040457a:	02f70363          	beq	a4,a5,204045a0 <__metal_controller_interrupt_vector_mode+0x46>
2040457e:	fec42703          	lw	a4,-20(s0)
20404582:	478d                	li	a5,3
20404584:	02e7e263          	bltu	a5,a4,204045a8 <__metal_controller_interrupt_vector_mode+0x4e>
20404588:	fec42703          	lw	a4,-20(s0)
2040458c:	4785                	li	a5,1
2040458e:	00f70b63          	beq	a4,a5,204045a4 <__metal_controller_interrupt_vector_mode+0x4a>
20404592:	fec42703          	lw	a4,-20(s0)
20404596:	4789                	li	a5,2
20404598:	00f71863          	bne	a4,a5,204045a8 <__metal_controller_interrupt_vector_mode+0x4e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040459c:	478d                	li	a5,3
2040459e:	a031                	j	204045aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
204045a0:	4791                	li	a5,4
204045a2:	a021                	j	204045aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204045a4:	4785                	li	a5,1
204045a6:	a011                	j	204045aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204045a8:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:314
}
204045aa:	853e                	mv	a0,a5
204045ac:	4472                	lw	s0,28(sp)
204045ae:	6105                	addi	sp,sp,32
204045b0:	8082                	ret

204045b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204045b2:	7179                	addi	sp,sp,-48
204045b4:	d622                	sw	s0,44(sp)
204045b6:	1800                	addi	s0,sp,48
204045b8:	fca42e23          	sw	a0,-36(s0)
204045bc:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204045c0:	305027f3          	csrr	a5,mtvec
204045c4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204045c8:	fec42783          	lw	a5,-20(s0)
204045cc:	fc07f793          	andi	a5,a5,-64
204045d0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
204045d4:	fd842783          	lw	a5,-40(s0)
204045d8:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
204045dc:	fdc42703          	lw	a4,-36(s0)
204045e0:	4791                	li	a5,4
204045e2:	04f70563          	beq	a4,a5,2040462c <__metal_controller_interrupt_vector+0x7a>
204045e6:	fdc42703          	lw	a4,-36(s0)
204045ea:	4791                	li	a5,4
204045ec:	06e7e863          	bltu	a5,a4,2040465c <__metal_controller_interrupt_vector+0xaa>
204045f0:	fdc42703          	lw	a4,-36(s0)
204045f4:	478d                	li	a5,3
204045f6:	06e7e363          	bltu	a5,a4,2040465c <__metal_controller_interrupt_vector+0xaa>
204045fa:	fdc42703          	lw	a4,-36(s0)
204045fe:	4789                	li	a5,2
20404600:	00f77b63          	bgeu	a4,a5,20404616 <__metal_controller_interrupt_vector+0x64>
20404604:	fdc42783          	lw	a5,-36(s0)
20404608:	c7a1                	beqz	a5,20404650 <__metal_controller_interrupt_vector+0x9e>
2040460a:	fdc42703          	lw	a4,-36(s0)
2040460e:	4785                	li	a5,1
20404610:	02f70963          	beq	a4,a5,20404642 <__metal_controller_interrupt_vector+0x90>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404614:	a0a1                	j	2040465c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404616:	fe842783          	lw	a5,-24(s0)
2040461a:	30779073          	csrw	mtvt,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040461e:	fec42783          	lw	a5,-20(s0)
20404622:	0027e793          	ori	a5,a5,2
20404626:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2040462a:	a80d                	j	2040465c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040462c:	fe842783          	lw	a5,-24(s0)
20404630:	30779073          	csrw	mtvt,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404634:	fec42783          	lw	a5,-20(s0)
20404638:	0037e793          	ori	a5,a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2040463c:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404640:	a831                	j	2040465c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404642:	fe842783          	lw	a5,-24(s0)
20404646:	0017e793          	ori	a5,a5,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2040464a:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2040464e:	a039                	j	2040465c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404650:	fe842783          	lw	a5,-24(s0)
20404654:	9bf1                	andi	a5,a5,-4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404656:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2040465a:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:344
}
2040465c:	0001                	nop
2040465e:	5432                	lw	s0,44(sp)
20404660:	6145                	addi	sp,sp,48
20404662:	8082                	ret

20404664 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404664:	1101                	addi	sp,sp,-32
20404666:	ce22                	sw	s0,28(sp)
20404668:	1000                	addi	s0,sp,32
2040466a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040466e:	fec42703          	lw	a4,-20(s0)
20404672:	47fd                	li	a5,31
20404674:	02e7c663          	blt	a5,a4,204046a0 <__metal_valid_interrupt_id+0x3c>
20404678:	fec42703          	lw	a4,-20(s0)
2040467c:	478d                	li	a5,3
2040467e:	02f74963          	blt	a4,a5,204046b0 <__metal_valid_interrupt_id+0x4c>
20404682:	fec42783          	lw	a5,-20(s0)
20404686:	4705                	li	a4,1
20404688:	00f71733          	sll	a4,a4,a5
2040468c:	77c5                	lui	a5,0xffff1
2040468e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef3b8>
20404692:	8ff9                	and	a5,a5,a4
20404694:	00f037b3          	snez	a5,a5
20404698:	0ff7f793          	zext.b	a5,a5
2040469c:	eb81                	bnez	a5,204046ac <__metal_valid_interrupt_id+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040469e:	a809                	j	204046b0 <__metal_valid_interrupt_id+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204046a0:	fec42703          	lw	a4,-20(s0)
204046a4:	08000793          	li	a5,128
204046a8:	00f71463          	bne	a4,a5,204046b0 <__metal_valid_interrupt_id+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204046ac:	4785                	li	a5,1
204046ae:	a019                	j	204046b4 <__metal_valid_interrupt_id+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204046b0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204046b2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:374
}
204046b4:	853e                	mv	a0,a5
204046b6:	4472                	lw	s0,28(sp)
204046b8:	6105                	addi	sp,sp,32
204046ba:	8082                	ret

204046bc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204046bc:	7179                	addi	sp,sp,-48
204046be:	d606                	sw	ra,44(sp)
204046c0:	d422                	sw	s0,40(sp)
204046c2:	1800                	addi	s0,sp,48
204046c4:	fca42e23          	sw	a0,-36(s0)
204046c8:	fcb42c23          	sw	a1,-40(s0)
204046cc:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204046d0:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204046d4:	fdc42783          	lw	a5,-36(s0)
204046d8:	e399                	bnez	a5,204046de <__metal_local_interrupt_enable+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204046da:	57fd                	li	a5,-1
204046dc:	a849                	j	2040476e <__metal_local_interrupt_enable+0xb2>
204046de:	fd842703          	lw	a4,-40(s0)
204046e2:	47fd                	li	a5,31
204046e4:	08e7e063          	bltu	a5,a4,20404764 <__metal_local_interrupt_enable+0xa8>
204046e8:	fd842783          	lw	a5,-40(s0)
204046ec:	00279713          	slli	a4,a5,0x2
204046f0:	204007b7          	lui	a5,0x20400
204046f4:	65878793          	addi	a5,a5,1624 # 20400658 <__metal_driver_vtable_riscv_clint0+0x64>
204046f8:	97ba                	add	a5,a5,a4
204046fa:	439c                	lw	a5,0(a5)
204046fc:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204046fe:	fd442783          	lw	a5,-44(s0)
20404702:	c781                	beqz	a5,2040470a <__metal_local_interrupt_enable+0x4e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404704:	f65fe0ef          	jal	ra,20403668 <__metal_interrupt_global_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404708:	a08d                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2040470a:	f77fe0ef          	jal	ra,20403680 <__metal_interrupt_global_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040470e:	a8b1                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404710:	fd442783          	lw	a5,-44(s0)
20404714:	c781                	beqz	a5,2040471c <__metal_local_interrupt_enable+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404716:	f83fe0ef          	jal	ra,20403698 <__metal_interrupt_software_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2040471a:	a881                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040471c:	f95fe0ef          	jal	ra,204036b0 <__metal_interrupt_software_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404720:	a0a9                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404722:	fd442783          	lw	a5,-44(s0)
20404726:	c781                	beqz	a5,2040472e <__metal_local_interrupt_enable+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404728:	fa1fe0ef          	jal	ra,204036c8 <__metal_interrupt_timer_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2040472c:	a83d                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2040472e:	fb5fe0ef          	jal	ra,204036e2 <__metal_interrupt_timer_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404732:	a825                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404734:	fd442783          	lw	a5,-44(s0)
20404738:	c781                	beqz	a5,20404740 <__metal_local_interrupt_enable+0x84>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
2040473a:	fc3fe0ef          	jal	ra,204036fc <__metal_interrupt_external_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2040473e:	a035                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404740:	fd9fe0ef          	jal	ra,20403718 <__metal_interrupt_external_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404744:	a01d                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404746:	fd442783          	lw	a5,-44(s0)
2040474a:	c799                	beqz	a5,20404758 <__metal_local_interrupt_enable+0x9c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2040474c:	fd842783          	lw	a5,-40(s0)
20404750:	853e                	mv	a0,a5
20404752:	fe3fe0ef          	jal	ra,20403734 <__metal_interrupt_local_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404756:	a811                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404758:	fd842783          	lw	a5,-40(s0)
2040475c:	853e                	mv	a0,a5
2040475e:	802ff0ef          	jal	ra,20403760 <__metal_interrupt_local_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404762:	a021                	j	2040476a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404764:	57fd                	li	a5,-1
20404766:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
2040476a:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:439
}
2040476e:	853e                	mv	a0,a5
20404770:	50b2                	lw	ra,44(sp)
20404772:	5422                	lw	s0,40(sp)
20404774:	6145                	addi	sp,sp,48
20404776:	8082                	ret

20404778 <__metal_exception_register>:
__metal_exception_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404778:	7179                	addi	sp,sp,-48
2040477a:	d622                	sw	s0,44(sp)
2040477c:	1800                	addi	s0,sp,48
2040477e:	fca42e23          	sw	a0,-36(s0)
20404782:	fcb42c23          	sw	a1,-40(s0)
20404786:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040478a:	fdc42783          	lw	a5,-36(s0)
2040478e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404792:	fd842703          	lw	a4,-40(s0)
20404796:	47ad                	li	a5,11
20404798:	02e7c263          	blt	a5,a4,204047bc <__metal_exception_register+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2040479c:	fd442783          	lw	a5,-44(s0)
204047a0:	cf91                	beqz	a5,204047bc <__metal_exception_register+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
204047a2:	fec42703          	lw	a4,-20(s0)
204047a6:	fd842783          	lw	a5,-40(s0)
204047aa:	0e878793          	addi	a5,a5,232
204047ae:	078a                	slli	a5,a5,0x2
204047b0:	97ba                	add	a5,a5,a4
204047b2:	fd442703          	lw	a4,-44(s0)
204047b6:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
204047b8:	4781                	li	a5,0
204047ba:	a011                	j	204047be <__metal_exception_register+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
204047bc:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:450
}
204047be:	853e                	mv	a0,a5
204047c0:	5432                	lw	s0,44(sp)
204047c2:	6145                	addi	sp,sp,48
204047c4:	8082                	ret

204047c6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
204047c6:	7179                	addi	sp,sp,-48
204047c8:	d606                	sw	ra,44(sp)
204047ca:	d422                	sw	s0,40(sp)
204047cc:	1800                	addi	s0,sp,48
204047ce:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204047d2:	fdc42783          	lw	a5,-36(s0)
204047d6:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
204047da:	fe442783          	lw	a5,-28(s0)
204047de:	43dc                	lw	a5,4(a5)
204047e0:	efdd                	bnez	a5,2040489e <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
204047e2:	fe042623          	sw	zero,-20(s0)
204047e6:	a0b9                	j	20404834 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
204047e8:	fe442683          	lw	a3,-28(s0)
204047ec:	fec42703          	lw	a4,-20(s0)
204047f0:	87ba                	mv	a5,a4
204047f2:	0786                	slli	a5,a5,0x1
204047f4:	97ba                	add	a5,a5,a4
204047f6:	078e                	slli	a5,a5,0x3
204047f8:	97b6                	add	a5,a5,a3
204047fa:	0807a823          	sw	zero,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
204047fe:	fe442683          	lw	a3,-28(s0)
20404802:	fec42703          	lw	a4,-20(s0)
20404806:	87ba                	mv	a5,a4
20404808:	0786                	slli	a5,a5,0x1
2040480a:	97ba                	add	a5,a5,a4
2040480c:	078e                	slli	a5,a5,0x3
2040480e:	97b6                	add	a5,a5,a3
20404810:	0807aa23          	sw	zero,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404814:	fe442683          	lw	a3,-28(s0)
20404818:	fec42703          	lw	a4,-20(s0)
2040481c:	87ba                	mv	a5,a4
2040481e:	0786                	slli	a5,a5,0x1
20404820:	97ba                	add	a5,a5,a4
20404822:	078e                	slli	a5,a5,0x3
20404824:	97b6                	add	a5,a5,a3
20404826:	0807ac23          	sw	zero,152(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
2040482a:	fec42783          	lw	a5,-20(s0)
2040482e:	0785                	addi	a5,a5,1
20404830:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404834:	fec42703          	lw	a4,-20(s0)
20404838:	47fd                	li	a5,31
2040483a:	fae7d7e3          	bge	a5,a4,204047e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2040483e:	fe042423          	sw	zero,-24(s0)
20404842:	a01d                	j	20404868 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404844:	fe442703          	lw	a4,-28(s0)
20404848:	fe842783          	lw	a5,-24(s0)
2040484c:	0e878793          	addi	a5,a5,232
20404850:	078a                	slli	a5,a5,0x2
20404852:	97ba                	add	a5,a5,a4
20404854:	20403737          	lui	a4,0x20403
20404858:	78c70713          	addi	a4,a4,1932 # 2040378c <__metal_default_exception_handler>
2040485c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2040485e:	fe842783          	lw	a5,-24(s0)
20404862:	0785                	addi	a5,a5,1
20404864:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404868:	fe842703          	lw	a4,-24(s0)
2040486c:	47ad                	li	a5,11
2040486e:	fce7dbe3          	bge	a5,a4,20404844 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404872:	305027f3          	csrr	a5,mtvec
20404876:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
2040487a:	204007b7          	lui	a5,0x20400
2040487e:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20404882:	fe042703          	lw	a4,-32(s0)
20404886:	00f71863          	bne	a4,a5,20404896 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
2040488a:	204047b7          	lui	a5,0x20404
2040488e:	a0078593          	addi	a1,a5,-1536 # 20403a00 <__metal_exception_handler>
20404892:	4501                	li	a0,0
20404894:	3b39                	jal	204045b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404896:	fe442783          	lw	a5,-28(s0)
2040489a:	4705                	li	a4,1
2040489c:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2040489e:	0001                	nop
204048a0:	50b2                	lw	ra,44(sp)
204048a2:	5422                	lw	s0,40(sp)
204048a4:	6145                	addi	sp,sp,48
204048a6:	8082                	ret

204048a8 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
204048a8:	7179                	addi	sp,sp,-48
204048aa:	d606                	sw	ra,44(sp)
204048ac:	d422                	sw	s0,40(sp)
204048ae:	1800                	addi	s0,sp,48
204048b0:	fca42e23          	sw	a0,-36(s0)
204048b4:	fcb42c23          	sw	a1,-40(s0)
204048b8:	fcc42a23          	sw	a2,-44(s0)
204048bc:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204048c0:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204048c4:	fdc42783          	lw	a5,-36(s0)
204048c8:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204048cc:	fd842503          	lw	a0,-40(s0)
204048d0:	3b51                	jal	20404664 <__metal_valid_interrupt_id>
204048d2:	87aa                	mv	a5,a0
204048d4:	e399                	bnez	a5,204048da <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204048d6:	57d5                	li	a5,-11
204048d8:	a265                	j	20404a80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204048da:	fd842703          	lw	a4,-40(s0)
204048de:	08000793          	li	a5,128
204048e2:	00f71863          	bne	a4,a5,204048f2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
204048e6:	c75ff0ef          	jal	ra,2040455a <__metal_controller_interrupt_vector_mode>
204048ea:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204048ec:	c399                	beqz	a5,204048f2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
204048ee:	57cd                	li	a5,-13
204048f0:	aa41                	j	20404a80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
204048f2:	fd442783          	lw	a5,-44(s0)
204048f6:	cfb9                	beqz	a5,20404954 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
204048f8:	fd842703          	lw	a4,-40(s0)
204048fc:	08000793          	li	a5,128
20404900:	00f71f63          	bne	a4,a5,2040491e <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404904:	fe842783          	lw	a5,-24(s0)
20404908:	fd442703          	lw	a4,-44(s0)
2040490c:	38e7a823          	sw	a4,912(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404910:	fe842783          	lw	a5,-24(s0)
20404914:	fd042703          	lw	a4,-48(s0)
20404918:	38e7ac23          	sw	a4,920(a5)
2040491c:	a285                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
2040491e:	fe842683          	lw	a3,-24(s0)
20404922:	fd842703          	lw	a4,-40(s0)
20404926:	87ba                	mv	a5,a4
20404928:	0786                	slli	a5,a5,0x1
2040492a:	97ba                	add	a5,a5,a4
2040492c:	078e                	slli	a5,a5,0x3
2040492e:	97b6                	add	a5,a5,a3
20404930:	fd442703          	lw	a4,-44(s0)
20404934:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404938:	fe842683          	lw	a3,-24(s0)
2040493c:	fd842703          	lw	a4,-40(s0)
20404940:	87ba                	mv	a5,a4
20404942:	0786                	slli	a5,a5,0x1
20404944:	97ba                	add	a5,a5,a4
20404946:	078e                	slli	a5,a5,0x3
20404948:	97b6                	add	a5,a5,a3
2040494a:	fd042703          	lw	a4,-48(s0)
2040494e:	08e7ac23          	sw	a4,152(a5)
20404952:	a22d                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404954:	fd842703          	lw	a4,-40(s0)
20404958:	08000793          	li	a5,128
2040495c:	0cf70163          	beq	a4,a5,20404a1e <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20404960:	fd842703          	lw	a4,-40(s0)
20404964:	08000793          	li	a5,128
20404968:	10e7c763          	blt	a5,a4,20404a76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
2040496c:	fd842703          	lw	a4,-40(s0)
20404970:	47fd                	li	a5,31
20404972:	10e7c263          	blt	a5,a4,20404a76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404976:	fd842703          	lw	a4,-40(s0)
2040497a:	47c1                	li	a5,16
2040497c:	0cf75063          	bge	a4,a5,20404a3c <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404980:	fd842703          	lw	a4,-40(s0)
20404984:	47ad                	li	a5,11
20404986:	0af70b63          	beq	a4,a5,20404a3c <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
2040498a:	fd842703          	lw	a4,-40(s0)
2040498e:	47ad                	li	a5,11
20404990:	0ee7c363          	blt	a5,a4,20404a76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404994:	fd842703          	lw	a4,-40(s0)
20404998:	478d                	li	a5,3
2040499a:	00f70863          	beq	a4,a5,204049aa <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
2040499e:	fd842703          	lw	a4,-40(s0)
204049a2:	479d                	li	a5,7
204049a4:	04f70063          	beq	a4,a5,204049e4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
204049a8:	a0f9                	j	20404a76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
204049aa:	fe842683          	lw	a3,-24(s0)
204049ae:	fd842703          	lw	a4,-40(s0)
204049b2:	87ba                	mv	a5,a4
204049b4:	0786                	slli	a5,a5,0x1
204049b6:	97ba                	add	a5,a5,a4
204049b8:	078e                	slli	a5,a5,0x3
204049ba:	97b6                	add	a5,a5,a3
204049bc:	20404737          	lui	a4,0x20404
204049c0:	87c70713          	addi	a4,a4,-1924 # 2040387c <__metal_default_sw_handler>
204049c4:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
204049c8:	fe842683          	lw	a3,-24(s0)
204049cc:	fd842703          	lw	a4,-40(s0)
204049d0:	87ba                	mv	a5,a4
204049d2:	0786                	slli	a5,a5,0x1
204049d4:	97ba                	add	a5,a5,a4
204049d6:	078e                	slli	a5,a5,0x3
204049d8:	97b6                	add	a5,a5,a3
204049da:	fd042703          	lw	a4,-48(s0)
204049de:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
204049e2:	a869                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
204049e4:	fe842683          	lw	a3,-24(s0)
204049e8:	fd842703          	lw	a4,-40(s0)
204049ec:	87ba                	mv	a5,a4
204049ee:	0786                	slli	a5,a5,0x1
204049f0:	97ba                	add	a5,a5,a4
204049f2:	078e                	slli	a5,a5,0x3
204049f4:	97b6                	add	a5,a5,a3
204049f6:	20404737          	lui	a4,0x20404
204049fa:	98c70713          	addi	a4,a4,-1652 # 2040398c <__metal_default_timer_handler>
204049fe:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404a02:	fe842683          	lw	a3,-24(s0)
20404a06:	fd842703          	lw	a4,-40(s0)
20404a0a:	87ba                	mv	a5,a4
20404a0c:	0786                	slli	a5,a5,0x1
20404a0e:	97ba                	add	a5,a5,a4
20404a10:	078e                	slli	a5,a5,0x3
20404a12:	97b6                	add	a5,a5,a3
20404a14:	fd042703          	lw	a4,-48(s0)
20404a18:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20404a1c:	a085                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20404a1e:	fe842783          	lw	a5,-24(s0)
20404a22:	20404737          	lui	a4,0x20404
20404a26:	97670713          	addi	a4,a4,-1674 # 20403976 <__metal_default_beu_handler>
20404a2a:	38e7a823          	sw	a4,912(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20404a2e:	fe842783          	lw	a5,-24(s0)
20404a32:	fd042703          	lw	a4,-48(s0)
20404a36:	38e7ac23          	sw	a4,920(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404a3a:	a089                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20404a3c:	fe842683          	lw	a3,-24(s0)
20404a40:	fd842703          	lw	a4,-40(s0)
20404a44:	87ba                	mv	a5,a4
20404a46:	0786                	slli	a5,a5,0x1
20404a48:	97ba                	add	a5,a5,a4
20404a4a:	078e                	slli	a5,a5,0x3
20404a4c:	97b6                	add	a5,a5,a3
20404a4e:	20403737          	lui	a4,0x20403
20404a52:	7a470713          	addi	a4,a4,1956 # 204037a4 <__metal_default_interrupt_handler>
20404a56:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404a5a:	fe842683          	lw	a3,-24(s0)
20404a5e:	fd842703          	lw	a4,-40(s0)
20404a62:	87ba                	mv	a5,a4
20404a64:	0786                	slli	a5,a5,0x1
20404a66:	97ba                	add	a5,a5,a4
20404a68:	078e                	slli	a5,a5,0x3
20404a6a:	97b6                	add	a5,a5,a3
20404a6c:	fd042703          	lw	a4,-48(s0)
20404a70:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404a74:	a021                	j	20404a7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404a76:	57d1                	li	a5,-12
20404a78:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404a7c:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404a80:	853e                	mv	a0,a5
20404a82:	50b2                	lw	ra,44(sp)
20404a84:	5422                	lw	s0,40(sp)
20404a86:	6145                	addi	sp,sp,48
20404a88:	8082                	ret

20404a8a <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404a8a:	1101                	addi	sp,sp,-32
20404a8c:	ce06                	sw	ra,28(sp)
20404a8e:	cc22                	sw	s0,24(sp)
20404a90:	1000                	addi	s0,sp,32
20404a92:	fea42623          	sw	a0,-20(s0)
20404a96:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404a9a:	fe842783          	lw	a5,-24(s0)
20404a9e:	4605                	li	a2,1
20404aa0:	85be                	mv	a1,a5
20404aa2:	fec42503          	lw	a0,-20(s0)
20404aa6:	c17ff0ef          	jal	ra,204046bc <__metal_local_interrupt_enable>
20404aaa:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404aac:	853e                	mv	a0,a5
20404aae:	40f2                	lw	ra,28(sp)
20404ab0:	4462                	lw	s0,24(sp)
20404ab2:	6105                	addi	sp,sp,32
20404ab4:	8082                	ret

20404ab6 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404ab6:	1101                	addi	sp,sp,-32
20404ab8:	ce06                	sw	ra,28(sp)
20404aba:	cc22                	sw	s0,24(sp)
20404abc:	1000                	addi	s0,sp,32
20404abe:	fea42623          	sw	a0,-20(s0)
20404ac2:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404ac6:	fe842783          	lw	a5,-24(s0)
20404aca:	4601                	li	a2,0
20404acc:	85be                	mv	a1,a5
20404ace:	fec42503          	lw	a0,-20(s0)
20404ad2:	bebff0ef          	jal	ra,204046bc <__metal_local_interrupt_enable>
20404ad6:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404ad8:	853e                	mv	a0,a5
20404ada:	40f2                	lw	ra,28(sp)
20404adc:	4462                	lw	s0,24(sp)
20404ade:	6105                	addi	sp,sp,32
20404ae0:	8082                	ret

20404ae2 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404ae2:	1101                	addi	sp,sp,-32
20404ae4:	ce06                	sw	ra,28(sp)
20404ae6:	cc22                	sw	s0,24(sp)
20404ae8:	1000                	addi	s0,sp,32
20404aea:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404aee:	a6dff0ef          	jal	ra,2040455a <__metal_controller_interrupt_vector_mode>
20404af2:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404af4:	853e                	mv	a0,a5
20404af6:	40f2                	lw	ra,28(sp)
20404af8:	4462                	lw	s0,24(sp)
20404afa:	6105                	addi	sp,sp,32
20404afc:	8082                	ret

20404afe <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404afe:	1101                	addi	sp,sp,-32
20404b00:	ce06                	sw	ra,28(sp)
20404b02:	cc22                	sw	s0,24(sp)
20404b04:	1000                	addi	s0,sp,32
20404b06:	fea42623          	sw	a0,-20(s0)
20404b0a:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404b0e:	fe842783          	lw	a5,-24(s0)
20404b12:	eb99                	bnez	a5,20404b28 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404b14:	204047b7          	lui	a5,0x20404
20404b18:	a0078593          	addi	a1,a5,-1536 # 20403a00 <__metal_exception_handler>
20404b1c:	fe842503          	lw	a0,-24(s0)
20404b20:	a93ff0ef          	jal	ra,204045b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404b24:	4781                	li	a5,0
20404b26:	a00d                	j	20404b48 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404b28:	fe842703          	lw	a4,-24(s0)
20404b2c:	4785                	li	a5,1
20404b2e:	00f71c63          	bne	a4,a5,20404b46 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404b32:	204077b7          	lui	a5,0x20407
20404b36:	38078593          	addi	a1,a5,896 # 20407380 <__metal_vector_table>
20404b3a:	fe842503          	lw	a0,-24(s0)
20404b3e:	a75ff0ef          	jal	ra,204045b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404b42:	4781                	li	a5,0
20404b44:	a011                	j	20404b48 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404b46:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404b48:	853e                	mv	a0,a5
20404b4a:	40f2                	lw	ra,28(sp)
20404b4c:	4462                	lw	s0,24(sp)
20404b4e:	6105                	addi	sp,sp,32
20404b50:	8082                	ret

20404b52 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404b52:	1101                	addi	sp,sp,-32
20404b54:	ce22                	sw	s0,28(sp)
20404b56:	1000                	addi	s0,sp,32
20404b58:	fea42623          	sw	a0,-20(s0)
20404b5c:	feb42423          	sw	a1,-24(s0)
20404b60:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404b64:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404b66:	853e                	mv	a0,a5
20404b68:	4472                	lw	s0,28(sp)
20404b6a:	6105                	addi	sp,sp,32
20404b6c:	8082                	ret

20404b6e <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404b6e:	7139                	addi	sp,sp,-64
20404b70:	de22                	sw	s0,60(sp)
20404b72:	0080                	addi	s0,sp,64
20404b74:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404b78:	4501                	li	a0,0
20404b7a:	4581                	li	a1,0
20404b7c:	fea42423          	sw	a0,-24(s0)
20404b80:	feb42623          	sw	a1,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404b84:	b80025f3          	csrr	a1,mcycleh
20404b88:	feb42223          	sw	a1,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404b8c:	b00025f3          	csrr	a1,mcycle
20404b90:	feb42023          	sw	a1,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404b94:	b80025f3          	csrr	a1,mcycleh
20404b98:	fcb42e23          	sw	a1,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404b9c:	fe442503          	lw	a0,-28(s0)
20404ba0:	fdc42583          	lw	a1,-36(s0)
20404ba4:	feb510e3          	bne	a0,a1,20404b84 <__metal_driver_cpu_mcycle_get+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404ba8:	fe442583          	lw	a1,-28(s0)
20404bac:	882e                	mv	a6,a1
20404bae:	4881                	li	a7,0
20404bb0:	00081793          	slli	a5,a6,0x0
20404bb4:	4701                	li	a4,0
20404bb6:	fe042583          	lw	a1,-32(s0)
20404bba:	862e                	mv	a2,a1
20404bbc:	4681                	li	a3,0
20404bbe:	00c765b3          	or	a1,a4,a2
20404bc2:	feb42423          	sw	a1,-24(s0)
20404bc6:	8fd5                	or	a5,a5,a3
20404bc8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404bcc:	fe842703          	lw	a4,-24(s0)
20404bd0:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404bd4:	853a                	mv	a0,a4
20404bd6:	85be                	mv	a1,a5
20404bd8:	5472                	lw	s0,60(sp)
20404bda:	6121                	addi	sp,sp,64
20404bdc:	8082                	ret

20404bde <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404bde:	7179                	addi	sp,sp,-48
20404be0:	d606                	sw	ra,44(sp)
20404be2:	d422                	sw	s0,40(sp)
20404be4:	d24a                	sw	s2,36(sp)
20404be6:	d04e                	sw	s3,32(sp)
20404be8:	1800                	addi	s0,sp,48
20404bea:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404bee:	fdc42783          	lw	a5,-36(s0)
20404bf2:	e781                	bnez	a5,20404bfa <__metal_driver_cpu_timebase_get+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404bf4:	4901                	li	s2,0
20404bf6:	4981                	li	s3,0
20404bf8:	a821                	j	20404c10 <__metal_driver_cpu_timebase_get+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404bfa:	fdc42503          	lw	a0,-36(s0)
20404bfe:	9a9fe0ef          	jal	ra,204035a6 <__metal_driver_cpu_timebase>
20404c02:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404c06:	fec42783          	lw	a5,-20(s0)
20404c0a:	893e                	mv	s2,a5
20404c0c:	87fd                	srai	a5,a5,0x1f
20404c0e:	89be                	mv	s3,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404c10:	874a                	mv	a4,s2
20404c12:	87ce                	mv	a5,s3
20404c14:	853a                	mv	a0,a4
20404c16:	85be                	mv	a1,a5
20404c18:	50b2                	lw	ra,44(sp)
20404c1a:	5422                	lw	s0,40(sp)
20404c1c:	5912                	lw	s2,36(sp)
20404c1e:	5982                	lw	s3,32(sp)
20404c20:	6145                	addi	sp,sp,48
20404c22:	8082                	ret

20404c24 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404c24:	7179                	addi	sp,sp,-48
20404c26:	d606                	sw	ra,44(sp)
20404c28:	d422                	sw	s0,40(sp)
20404c2a:	1800                	addi	s0,sp,48
20404c2c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404c30:	4781                	li	a5,0
20404c32:	4801                	li	a6,0
20404c34:	fef42023          	sw	a5,-32(s0)
20404c38:	ff042223          	sw	a6,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404c3c:	fdc42503          	lw	a0,-36(s0)
20404c40:	991fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404c44:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404c48:	fec42783          	lw	a5,-20(s0)
20404c4c:	c78d                	beqz	a5,20404c76 <__metal_driver_cpu_mtime_get+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404c4e:	fec42783          	lw	a5,-20(s0)
20404c52:	13c7a783          	lw	a5,316(a5)
20404c56:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404c5a:	fe842783          	lw	a5,-24(s0)
20404c5e:	cf81                	beqz	a5,20404c76 <__metal_driver_cpu_mtime_get+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404c60:	fe842783          	lw	a5,-24(s0)
20404c64:	439c                	lw	a5,0(a5)
20404c66:	47f8                	lw	a4,76(a5)
20404c68:	fe040793          	addi	a5,s0,-32
20404c6c:	863e                	mv	a2,a5
20404c6e:	4585                	li	a1,1
20404c70:	fe842503          	lw	a0,-24(s0)
20404c74:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404c76:	fe042703          	lw	a4,-32(s0)
20404c7a:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404c7e:	853a                	mv	a0,a4
20404c80:	85be                	mv	a1,a5
20404c82:	50b2                	lw	ra,44(sp)
20404c84:	5422                	lw	s0,40(sp)
20404c86:	6145                	addi	sp,sp,48
20404c88:	8082                	ret

20404c8a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404c8a:	7179                	addi	sp,sp,-48
20404c8c:	d606                	sw	ra,44(sp)
20404c8e:	d422                	sw	s0,40(sp)
20404c90:	d226                	sw	s1,36(sp)
20404c92:	1800                	addi	s0,sp,48
20404c94:	fca42e23          	sw	a0,-36(s0)
20404c98:	fcb42823          	sw	a1,-48(s0)
20404c9c:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404ca0:	57fd                	li	a5,-1
20404ca2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404ca6:	fdc42503          	lw	a0,-36(s0)
20404caa:	927fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404cae:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404cb2:	fe842783          	lw	a5,-24(s0)
20404cb6:	cf8d                	beqz	a5,20404cf0 <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404cb8:	fe842783          	lw	a5,-24(s0)
20404cbc:	13c7a783          	lw	a5,316(a5)
20404cc0:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20404cc4:	fe442783          	lw	a5,-28(s0)
20404cc8:	c785                	beqz	a5,20404cf0 <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404cca:	fe442783          	lw	a5,-28(s0)
20404cce:	439c                	lw	a5,0(a5)
20404cd0:	4ba4                	lw	s1,80(a5)
20404cd2:	fdc42503          	lw	a0,-36(s0)
20404cd6:	8adfe0ef          	jal	ra,20403582 <__metal_driver_cpu_hartid>
20404cda:	87aa                	mv	a5,a0
20404cdc:	fd042603          	lw	a2,-48(s0)
20404ce0:	fd442683          	lw	a3,-44(s0)
20404ce4:	85be                	mv	a1,a5
20404ce6:	fe442503          	lw	a0,-28(s0)
20404cea:	9482                	jalr	s1
20404cec:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404cf0:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:685
}
20404cf4:	853e                	mv	a0,a5
20404cf6:	50b2                	lw	ra,44(sp)
20404cf8:	5422                	lw	s0,40(sp)
20404cfa:	5492                	lw	s1,36(sp)
20404cfc:	6145                	addi	sp,sp,48
20404cfe:	8082                	ret

20404d00 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404d00:	1101                	addi	sp,sp,-32
20404d02:	ce22                	sw	s0,28(sp)
20404d04:	1000                	addi	s0,sp,32
20404d06:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404d0a:	800007b7          	lui	a5,0x80000
20404d0e:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20404d12:	853e                	mv	a0,a5
20404d14:	4472                	lw	s0,28(sp)
20404d16:	6105                	addi	sp,sp,32
20404d18:	8082                	ret

20404d1a <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404d1a:	1101                	addi	sp,sp,-32
20404d1c:	ce22                	sw	s0,28(sp)
20404d1e:	1000                	addi	s0,sp,32
20404d20:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404d24:	479d                	li	a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404d26:	853e                	mv	a0,a5
20404d28:	4472                	lw	s0,28(sp)
20404d2a:	6105                	addi	sp,sp,32
20404d2c:	8082                	ret

20404d2e <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20404d2e:	1101                	addi	sp,sp,-32
20404d30:	ce22                	sw	s0,28(sp)
20404d32:	1000                	addi	s0,sp,32
20404d34:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404d38:	800007b7          	lui	a5,0x80000
20404d3c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20404d40:	853e                	mv	a0,a5
20404d42:	4472                	lw	s0,28(sp)
20404d44:	6105                	addi	sp,sp,32
20404d46:	8082                	ret

20404d48 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404d48:	1101                	addi	sp,sp,-32
20404d4a:	ce22                	sw	s0,28(sp)
20404d4c:	1000                	addi	s0,sp,32
20404d4e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404d52:	478d                	li	a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404d54:	853e                	mv	a0,a5
20404d56:	4472                	lw	s0,28(sp)
20404d58:	6105                	addi	sp,sp,32
20404d5a:	8082                	ret

20404d5c <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404d5c:	7179                	addi	sp,sp,-48
20404d5e:	d606                	sw	ra,44(sp)
20404d60:	d422                	sw	s0,40(sp)
20404d62:	1800                	addi	s0,sp,48
20404d64:	fca42e23          	sw	a0,-36(s0)
20404d68:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20404d6c:	57fd                	li	a5,-1
20404d6e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404d72:	fdc42503          	lw	a0,-36(s0)
20404d76:	85bfe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404d7a:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20404d7e:	fe842783          	lw	a5,-24(s0)
20404d82:	c79d                	beqz	a5,20404db0 <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404d84:	fe842783          	lw	a5,-24(s0)
20404d88:	0dc7a783          	lw	a5,220(a5)
20404d8c:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404d90:	fe442783          	lw	a5,-28(s0)
20404d94:	cf91                	beqz	a5,20404db0 <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404d96:	fe442783          	lw	a5,-28(s0)
20404d9a:	439c                	lw	a5,0(a5)
20404d9c:	47f8                	lw	a4,76(a5)
20404d9e:	fd840793          	addi	a5,s0,-40
20404da2:	863e                	mv	a2,a5
20404da4:	458d                	li	a1,3
20404da6:	fe442503          	lw	a0,-28(s0)
20404daa:	9702                	jalr	a4
20404dac:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404db0:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404db4:	853e                	mv	a0,a5
20404db6:	50b2                	lw	ra,44(sp)
20404db8:	5422                	lw	s0,40(sp)
20404dba:	6145                	addi	sp,sp,48
20404dbc:	8082                	ret

20404dbe <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404dbe:	7179                	addi	sp,sp,-48
20404dc0:	d606                	sw	ra,44(sp)
20404dc2:	d422                	sw	s0,40(sp)
20404dc4:	1800                	addi	s0,sp,48
20404dc6:	fca42e23          	sw	a0,-36(s0)
20404dca:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20404dce:	57fd                	li	a5,-1
20404dd0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404dd4:	fdc42503          	lw	a0,-36(s0)
20404dd8:	ff8fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404ddc:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404de0:	fe842783          	lw	a5,-24(s0)
20404de4:	c79d                	beqz	a5,20404e12 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404de6:	fe842783          	lw	a5,-24(s0)
20404dea:	0dc7a783          	lw	a5,220(a5)
20404dee:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20404df2:	fe442783          	lw	a5,-28(s0)
20404df6:	cf91                	beqz	a5,20404e12 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404df8:	fe442783          	lw	a5,-28(s0)
20404dfc:	439c                	lw	a5,0(a5)
20404dfe:	47f8                	lw	a4,76(a5)
20404e00:	fd840793          	addi	a5,s0,-40
20404e04:	863e                	mv	a2,a5
20404e06:	4589                	li	a1,2
20404e08:	fe442503          	lw	a0,-28(s0)
20404e0c:	9702                	jalr	a4
20404e0e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20404e12:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404e16:	853e                	mv	a0,a5
20404e18:	50b2                	lw	ra,44(sp)
20404e1a:	5422                	lw	s0,40(sp)
20404e1c:	6145                	addi	sp,sp,48
20404e1e:	8082                	ret

20404e20 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404e20:	7179                	addi	sp,sp,-48
20404e22:	d606                	sw	ra,44(sp)
20404e24:	d422                	sw	s0,40(sp)
20404e26:	1800                	addi	s0,sp,48
20404e28:	fca42e23          	sw	a0,-36(s0)
20404e2c:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404e30:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404e34:	fdc42503          	lw	a0,-36(s0)
20404e38:	f98fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404e3c:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404e40:	fe842783          	lw	a5,-24(s0)
20404e44:	c79d                	beqz	a5,20404e72 <__metal_driver_cpu_get_msip+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404e46:	fe842783          	lw	a5,-24(s0)
20404e4a:	0dc7a783          	lw	a5,220(a5)
20404e4e:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404e52:	fe442783          	lw	a5,-28(s0)
20404e56:	cf91                	beqz	a5,20404e72 <__metal_driver_cpu_get_msip+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404e58:	fe442783          	lw	a5,-28(s0)
20404e5c:	439c                	lw	a5,0(a5)
20404e5e:	47f8                	lw	a4,76(a5)
20404e60:	fd840793          	addi	a5,s0,-40
20404e64:	863e                	mv	a2,a5
20404e66:	4591                	li	a1,4
20404e68:	fe442503          	lw	a0,-28(s0)
20404e6c:	9702                	jalr	a4
20404e6e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404e72:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404e76:	853e                	mv	a0,a5
20404e78:	50b2                	lw	ra,44(sp)
20404e7a:	5422                	lw	s0,40(sp)
20404e7c:	6145                	addi	sp,sp,48
20404e7e:	8082                	ret

20404e80 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404e80:	1101                	addi	sp,sp,-32
20404e82:	ce06                	sw	ra,28(sp)
20404e84:	cc22                	sw	s0,24(sp)
20404e86:	1000                	addi	s0,sp,32
20404e88:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404e8c:	fec42503          	lw	a0,-20(s0)
20404e90:	f40fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404e94:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404e96:	853e                	mv	a0,a5
20404e98:	40f2                	lw	ra,28(sp)
20404e9a:	4462                	lw	s0,24(sp)
20404e9c:	6105                	addi	sp,sp,32
20404e9e:	8082                	ret

20404ea0 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404ea0:	7179                	addi	sp,sp,-48
20404ea2:	d606                	sw	ra,44(sp)
20404ea4:	d422                	sw	s0,40(sp)
20404ea6:	1800                	addi	s0,sp,48
20404ea8:	fca42e23          	sw	a0,-36(s0)
20404eac:	fcb42c23          	sw	a1,-40(s0)
20404eb0:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404eb4:	fdc42503          	lw	a0,-36(s0)
20404eb8:	f18fe0ef          	jal	ra,204035d0 <__metal_driver_cpu_interrupt_controller>
20404ebc:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404ec0:	fec42783          	lw	a5,-20(s0)
20404ec4:	cb99                	beqz	a5,20404eda <__metal_driver_cpu_exception_register+0x3a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20404ec6:	fd442603          	lw	a2,-44(s0)
20404eca:	fd842583          	lw	a1,-40(s0)
20404ece:	fec42503          	lw	a0,-20(s0)
20404ed2:	8a7ff0ef          	jal	ra,20404778 <__metal_exception_register>
20404ed6:	87aa                	mv	a5,a0
20404ed8:	a011                	j	20404edc <__metal_driver_cpu_exception_register+0x3c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20404eda:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:808
}
20404edc:	853e                	mv	a0,a5
20404ede:	50b2                	lw	ra,44(sp)
20404ee0:	5422                	lw	s0,40(sp)
20404ee2:	6145                	addi	sp,sp,48
20404ee4:	8082                	ret

20404ee6 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20404ee6:	1101                	addi	sp,sp,-32
20404ee8:	ce22                	sw	s0,28(sp)
20404eea:	1000                	addi	s0,sp,32
20404eec:	fea42623          	sw	a0,-20(s0)
20404ef0:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20404ef4:	fe842783          	lw	a5,-24(s0)
20404ef8:	0007d783          	lhu	a5,0(a5)
20404efc:	0037f713          	andi	a4,a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20404f00:	478d                	li	a5,3
20404f02:	00f71463          	bne	a4,a5,20404f0a <__metal_driver_cpu_get_instruction_length+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20404f06:	4791                	li	a5,4
20404f08:	a011                	j	20404f0c <__metal_driver_cpu_get_instruction_length+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20404f0a:	4789                	li	a5,2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20404f0c:	853e                	mv	a0,a5
20404f0e:	4472                	lw	s0,28(sp)
20404f10:	6105                	addi	sp,sp,32
20404f12:	8082                	ret

20404f14 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20404f14:	7179                	addi	sp,sp,-48
20404f16:	d622                	sw	s0,44(sp)
20404f18:	1800                	addi	s0,sp,48
20404f1a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404f1e:	341027f3          	csrr	a5,mepc
20404f22:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20404f26:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:827
}
20404f2a:	853e                	mv	a0,a5
20404f2c:	5432                	lw	s0,44(sp)
20404f2e:	6145                	addi	sp,sp,48
20404f30:	8082                	ret

20404f32 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20404f32:	1101                	addi	sp,sp,-32
20404f34:	ce22                	sw	s0,28(sp)
20404f36:	1000                	addi	s0,sp,32
20404f38:	fea42623          	sw	a0,-20(s0)
20404f3c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20404f40:	fe842783          	lw	a5,-24(s0)
20404f44:	34179073          	csrw	mepc,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20404f48:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:832
}
20404f4a:	853e                	mv	a0,a5
20404f4c:	4472                	lw	s0,28(sp)
20404f4e:	6105                	addi	sp,sp,32
20404f50:	8082                	ret

20404f52 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20404f52:	1101                	addi	sp,sp,-32
20404f54:	ce06                	sw	ra,28(sp)
20404f56:	cc22                	sw	s0,24(sp)
20404f58:	1000                	addi	s0,sp,32
20404f5a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20404f5e:	fec42503          	lw	a0,-20(s0)
20404f62:	e98fe0ef          	jal	ra,204035fa <__metal_driver_cpu_buserror>
20404f66:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:836
}
20404f68:	853e                	mv	a0,a5
20404f6a:	40f2                	lw	ra,28(sp)
20404f6c:	4462                	lw	s0,24(sp)
20404f6e:	6105                	addi	sp,sp,32
20404f70:	8082                	ret

20404f72 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20404f72:	1101                	addi	sp,sp,-32
20404f74:	ce22                	sw	s0,28(sp)
20404f76:	1000                	addi	s0,sp,32
20404f78:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404f7c:	fec42703          	lw	a4,-20(s0)
20404f80:	800007b7          	lui	a5,0x80000
20404f84:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffef88>
20404f88:	00f71563          	bne	a4,a5,20404f92 <__metal_driver_sifive_plic0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20404f8c:	0c0007b7          	lui	a5,0xc000
20404f90:	a011                	j	20404f94 <__metal_driver_sifive_plic0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:319
	}
	else {
		return 0;
20404f92:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:321
	}
}
20404f94:	853e                	mv	a0,a5
20404f96:	4472                	lw	s0,28(sp)
20404f98:	6105                	addi	sp,sp,32
20404f9a:	8082                	ret

20404f9c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20404f9c:	1101                	addi	sp,sp,-32
20404f9e:	ce22                	sw	s0,28(sp)
20404fa0:	1000                	addi	s0,sp,32
20404fa2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404fa6:	fec42703          	lw	a4,-20(s0)
20404faa:	800007b7          	lui	a5,0x80000
20404fae:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffef88>
20404fb2:	00f71463          	bne	a4,a5,20404fba <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20404fb6:	47ed                	li	a5,27
20404fb8:	a011                	j	20404fbc <__metal_driver_sifive_plic0_num_interrupts+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:339
	}
	else {
		return 0;
20404fba:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:341
	}
}
20404fbc:	853e                	mv	a0,a5
20404fbe:	4472                	lw	s0,28(sp)
20404fc0:	6105                	addi	sp,sp,32
20404fc2:	8082                	ret

20404fc4 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20404fc4:	1101                	addi	sp,sp,-32
20404fc6:	ce22                	sw	s0,28(sp)
20404fc8:	1000                	addi	s0,sp,32
20404fca:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404fce:	fec42703          	lw	a4,-20(s0)
20404fd2:	800007b7          	lui	a5,0x80000
20404fd6:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffef88>
20404fda:	00f71463          	bne	a4,a5,20404fe2 <__metal_driver_sifive_plic0_max_priority+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20404fde:	479d                	li	a5,7
20404fe0:	a011                	j	20404fe4 <__metal_driver_sifive_plic0_max_priority+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:349
	}
	else {
		return 0;
20404fe2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:351
	}
}
20404fe4:	853e                	mv	a0,a5
20404fe6:	4472                	lw	s0,28(sp)
20404fe8:	6105                	addi	sp,sp,32
20404fea:	8082                	ret

20404fec <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20404fec:	1101                	addi	sp,sp,-32
20404fee:	ce22                	sw	s0,28(sp)
20404ff0:	1000                	addi	s0,sp,32
20404ff2:	fea42623          	sw	a0,-20(s0)
20404ff6:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:355
	if (idx == 0) {
20404ffa:	fe842783          	lw	a5,-24(s0)
20404ffe:	e791                	bnez	a5,2040500a <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405000:	800007b7          	lui	a5,0x80000
20405004:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffebb8>
20405008:	a011                	j	2040500c <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:359
	}
	else {
		return NULL;
2040500a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:361
	}
}
2040500c:	853e                	mv	a0,a5
2040500e:	4472                	lw	s0,28(sp)
20405010:	6105                	addi	sp,sp,32
20405012:	8082                	ret

20405014 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405014:	1101                	addi	sp,sp,-32
20405016:	ce22                	sw	s0,28(sp)
20405018:	1000                	addi	s0,sp,32
2040501a:	fea42623          	sw	a0,-20(s0)
2040501e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:365
	if (idx == 0) {
20405022:	fe842783          	lw	a5,-24(s0)
20405026:	e399                	bnez	a5,2040502c <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:366
		return 11;
20405028:	47ad                	li	a5,11
2040502a:	a011                	j	2040502e <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:369
	}
	else {
		return 0;
2040502c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:371
	}
}
2040502e:	853e                	mv	a0,a5
20405030:	4472                	lw	s0,28(sp)
20405032:	6105                	addi	sp,sp,32
20405034:	8082                	ret

20405036 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20405036:	1101                	addi	sp,sp,-32
20405038:	ce22                	sw	s0,28(sp)
2040503a:	1000                	addi	s0,sp,32
2040503c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:375
	if (hartid == 0) {
20405040:	fec42783          	lw	a5,-20(s0)
20405044:	e399                	bnez	a5,2040504a <__metal_driver_sifive_plic0_context_ids+0x14>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:376
		return 0;
20405046:	4781                	li	a5,0
20405048:	a011                	j	2040504c <__metal_driver_sifive_plic0_context_ids+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:379
	}
	else {
		return -1;
2040504a:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:381
	}
}
2040504c:	853e                	mv	a0,a5
2040504e:	4472                	lw	s0,28(sp)
20405050:	6105                	addi	sp,sp,32
20405052:	8082                	ret

20405054 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20405054:	7179                	addi	sp,sp,-48
20405056:	d606                	sw	ra,44(sp)
20405058:	d422                	sw	s0,40(sp)
2040505a:	1800                	addi	s0,sp,48
2040505c:	fca42e23          	sw	a0,-36(s0)
20405060:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405064:	fdc42503          	lw	a0,-36(s0)
20405068:	3729                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
2040506a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
2040506e:	fd842783          	lw	a5,-40(s0)
20405072:	00c79713          	slli	a4,a5,0xc
20405076:	fec42783          	lw	a5,-20(s0)
2040507a:	973e                	add	a4,a4,a5
2040507c:	002007b7          	lui	a5,0x200
20405080:	0791                	addi	a5,a5,4
20405082:	97ba                	add	a5,a5,a4
20405084:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405086:	853e                	mv	a0,a5
20405088:	50b2                	lw	ra,44(sp)
2040508a:	5422                	lw	s0,40(sp)
2040508c:	6145                	addi	sp,sp,48
2040508e:	8082                	ret

20405090 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405090:	7179                	addi	sp,sp,-48
20405092:	d606                	sw	ra,44(sp)
20405094:	d422                	sw	s0,40(sp)
20405096:	1800                	addi	s0,sp,48
20405098:	fca42e23          	sw	a0,-36(s0)
2040509c:	fcb42c23          	sw	a1,-40(s0)
204050a0:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204050a4:	fdc42503          	lw	a0,-36(s0)
204050a8:	35e9                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
204050aa:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204050ae:	fd842783          	lw	a5,-40(s0)
204050b2:	00c79713          	slli	a4,a5,0xc
204050b6:	fec42783          	lw	a5,-20(s0)
204050ba:	973e                	add	a4,a4,a5
204050bc:	002007b7          	lui	a5,0x200
204050c0:	0791                	addi	a5,a5,4
204050c2:	97ba                	add	a5,a5,a4
204050c4:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204050c6:	fd442783          	lw	a5,-44(s0)
204050ca:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:35
}
204050cc:	0001                	nop
204050ce:	50b2                	lw	ra,44(sp)
204050d0:	5422                	lw	s0,40(sp)
204050d2:	6145                	addi	sp,sp,48
204050d4:	8082                	ret

204050d6 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204050d6:	7179                	addi	sp,sp,-48
204050d8:	d606                	sw	ra,44(sp)
204050da:	d422                	sw	s0,40(sp)
204050dc:	1800                	addi	s0,sp,48
204050de:	fca42e23          	sw	a0,-36(s0)
204050e2:	fcb42c23          	sw	a1,-40(s0)
204050e6:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204050ea:	fdc42503          	lw	a0,-36(s0)
204050ee:	3551                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
204050f0:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204050f4:	fd842783          	lw	a5,-40(s0)
204050f8:	00c79713          	slli	a4,a5,0xc
204050fc:	fec42783          	lw	a5,-20(s0)
20405100:	973e                	add	a4,a4,a5
20405102:	002007b7          	lui	a5,0x200
20405106:	97ba                	add	a5,a5,a4
20405108:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2040510a:	fd442783          	lw	a5,-44(s0)
2040510e:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405110:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405112:	853e                	mv	a0,a5
20405114:	50b2                	lw	ra,44(sp)
20405116:	5422                	lw	s0,40(sp)
20405118:	6145                	addi	sp,sp,48
2040511a:	8082                	ret

2040511c <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040511c:	7179                	addi	sp,sp,-48
2040511e:	d606                	sw	ra,44(sp)
20405120:	d422                	sw	s0,40(sp)
20405122:	1800                	addi	s0,sp,48
20405124:	fca42e23          	sw	a0,-36(s0)
20405128:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040512c:	fdc42503          	lw	a0,-36(s0)
20405130:	3589                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
20405132:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20405136:	fd842783          	lw	a5,-40(s0)
2040513a:	00c79713          	slli	a4,a5,0xc
2040513e:	fec42783          	lw	a5,-20(s0)
20405142:	973e                	add	a4,a4,a5
20405144:	002007b7          	lui	a5,0x200
20405148:	97ba                	add	a5,a5,a4
2040514a:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2040514c:	853e                	mv	a0,a5
2040514e:	50b2                	lw	ra,44(sp)
20405150:	5422                	lw	s0,40(sp)
20405152:	6145                	addi	sp,sp,48
20405154:	8082                	ret

20405156 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20405156:	7179                	addi	sp,sp,-48
20405158:	d606                	sw	ra,44(sp)
2040515a:	d422                	sw	s0,40(sp)
2040515c:	1800                	addi	s0,sp,48
2040515e:	fca42e23          	sw	a0,-36(s0)
20405162:	fcb42c23          	sw	a1,-40(s0)
20405166:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040516a:	fdc42503          	lw	a0,-36(s0)
2040516e:	3511                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
20405170:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20405174:	fdc42503          	lw	a0,-36(s0)
20405178:	35b1                	jal	20404fc4 <__metal_driver_sifive_plic0_max_priority>
2040517a:	87aa                	mv	a5,a0
2040517c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405180:	fe842783          	lw	a5,-24(s0)
20405184:	c785                	beqz	a5,204051ac <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405186:	fd442703          	lw	a4,-44(s0)
2040518a:	fe842783          	lw	a5,-24(s0)
2040518e:	00f77f63          	bgeu	a4,a5,204051ac <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405192:	fd842783          	lw	a5,-40(s0)
20405196:	078a                	slli	a5,a5,0x2
20405198:	873e                	mv	a4,a5
2040519a:	fec42783          	lw	a5,-20(s0)
2040519e:	97ba                	add	a5,a5,a4
204051a0:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
204051a2:	fd442783          	lw	a5,-44(s0)
204051a6:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204051a8:	4781                	li	a5,0
204051aa:	a011                	j	204051ae <__metal_driver_riscv_plic0_set_priority+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204051ac:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:72
}
204051ae:	853e                	mv	a0,a5
204051b0:	50b2                	lw	ra,44(sp)
204051b2:	5422                	lw	s0,40(sp)
204051b4:	6145                	addi	sp,sp,48
204051b6:	8082                	ret

204051b8 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204051b8:	7179                	addi	sp,sp,-48
204051ba:	d606                	sw	ra,44(sp)
204051bc:	d422                	sw	s0,40(sp)
204051be:	1800                	addi	s0,sp,48
204051c0:	fca42e23          	sw	a0,-36(s0)
204051c4:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204051c8:	fdc42503          	lw	a0,-36(s0)
204051cc:	335d                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
204051ce:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204051d2:	fd842783          	lw	a5,-40(s0)
204051d6:	078a                	slli	a5,a5,0x2
204051d8:	873e                	mv	a4,a5
204051da:	fec42783          	lw	a5,-20(s0)
204051de:	97ba                	add	a5,a5,a4
204051e0:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204051e2:	853e                	mv	a0,a5
204051e4:	50b2                	lw	ra,44(sp)
204051e6:	5422                	lw	s0,40(sp)
204051e8:	6145                	addi	sp,sp,48
204051ea:	8082                	ret

204051ec <__metal_plic0_enable>:
__metal_plic0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204051ec:	7179                	addi	sp,sp,-48
204051ee:	d606                	sw	ra,44(sp)
204051f0:	d422                	sw	s0,40(sp)
204051f2:	1800                	addi	s0,sp,48
204051f4:	fca42e23          	sw	a0,-36(s0)
204051f8:	fcb42c23          	sw	a1,-40(s0)
204051fc:	fcc42a23          	sw	a2,-44(s0)
20405200:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405204:	fdc42503          	lw	a0,-36(s0)
20405208:	33ad                	jal	20404f72 <__metal_driver_sifive_plic0_control_base>
2040520a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2040520e:	fd842783          	lw	a5,-40(s0)
20405212:	00779713          	slli	a4,a5,0x7
20405216:	fec42783          	lw	a5,-20(s0)
2040521a:	97ba                	add	a5,a5,a4
2040521c:	fd442703          	lw	a4,-44(s0)
20405220:	8715                	srai	a4,a4,0x5
20405222:	070a                	slli	a4,a4,0x2
20405224:	973e                	add	a4,a4,a5
20405226:	6789                	lui	a5,0x2
20405228:	97ba                	add	a5,a5,a4
2040522a:	439c                	lw	a5,0(a5)
2040522c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405230:	fd042783          	lw	a5,-48(s0)
20405234:	cf81                	beqz	a5,2040524c <__metal_plic0_enable+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20405236:	fd442783          	lw	a5,-44(s0)
2040523a:	8bfd                	andi	a5,a5,31
2040523c:	4705                	li	a4,1
2040523e:	00f717b3          	sll	a5,a4,a5
20405242:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405244:	fe842783          	lw	a5,-24(s0)
20405248:	8fd9                	or	a5,a5,a4
2040524a:	a829                	j	20405264 <__metal_plic0_enable+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2040524c:	fd442783          	lw	a5,-44(s0)
20405250:	8bfd                	andi	a5,a5,31
20405252:	4705                	li	a4,1
20405254:	00f717b3          	sll	a5,a4,a5
20405258:	fff7c793          	not	a5,a5
2040525c:	873e                	mv	a4,a5
2040525e:	fe842783          	lw	a5,-24(s0)
20405262:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20405264:	fd842703          	lw	a4,-40(s0)
20405268:	00771693          	slli	a3,a4,0x7
2040526c:	fec42703          	lw	a4,-20(s0)
20405270:	9736                	add	a4,a4,a3
20405272:	fd442683          	lw	a3,-44(s0)
20405276:	8695                	srai	a3,a3,0x5
20405278:	068a                	slli	a3,a3,0x2
2040527a:	96ba                	add	a3,a3,a4
2040527c:	6709                	lui	a4,0x2
2040527e:	9736                	add	a4,a4,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405280:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405282:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405284:	853e                	mv	a0,a5
20405286:	50b2                	lw	ra,44(sp)
20405288:	5422                	lw	s0,40(sp)
2040528a:	6145                	addi	sp,sp,48
2040528c:	8082                	ret

2040528e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2040528e:	1101                	addi	sp,sp,-32
20405290:	ce06                	sw	ra,28(sp)
20405292:	cc22                	sw	s0,24(sp)
20405294:	1000                	addi	s0,sp,32
20405296:	fea42623          	sw	a0,-20(s0)
2040529a:	feb42423          	sw	a1,-24(s0)
2040529e:	12c00513          	li	a0,300
204052a2:	aebfd0ef          	jal	ra,20402d8c <metal_shutdown>

204052a6 <__metal_plic0_handler>:
__metal_plic0_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204052a6:	7179                	addi	sp,sp,-48
204052a8:	d606                	sw	ra,44(sp)
204052aa:	d422                	sw	s0,40(sp)
204052ac:	1800                	addi	s0,sp,48
204052ae:	fca42e23          	sw	a0,-36(s0)
204052b2:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204052b6:	fd842783          	lw	a5,-40(s0)
204052ba:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204052be:	b90fe0ef          	jal	ra,2040364e <__metal_myhart_id>
204052c2:	87aa                	mv	a5,a0
204052c4:	853e                	mv	a0,a5
204052c6:	3b85                	jal	20405036 <__metal_driver_sifive_plic0_context_ids>
204052c8:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204052cc:	fe842583          	lw	a1,-24(s0)
204052d0:	fec42503          	lw	a0,-20(s0)
204052d4:	3341                	jal	20405054 <__metal_plic0_claim_interrupt>
204052d6:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
204052da:	fec42503          	lw	a0,-20(s0)
204052de:	cbfff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
204052e2:	87aa                	mv	a5,a0
204052e4:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
204052e8:	fe442703          	lw	a4,-28(s0)
204052ec:	fe042783          	lw	a5,-32(s0)
204052f0:	04f77263          	bgeu	a4,a5,20405334 <__metal_plic0_handler+0x8e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204052f4:	fec42703          	lw	a4,-20(s0)
204052f8:	fe442783          	lw	a5,-28(s0)
204052fc:	078a                	slli	a5,a5,0x2
204052fe:	97ba                	add	a5,a5,a4
20405300:	479c                	lw	a5,8(a5)
20405302:	cb8d                	beqz	a5,20405334 <__metal_plic0_handler+0x8e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20405304:	fec42703          	lw	a4,-20(s0)
20405308:	fe442783          	lw	a5,-28(s0)
2040530c:	078a                	slli	a5,a5,0x2
2040530e:	97ba                	add	a5,a5,a4
20405310:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20405314:	fe442603          	lw	a2,-28(s0)
20405318:	fec42683          	lw	a3,-20(s0)
2040531c:	fe442703          	lw	a4,-28(s0)
20405320:	87ba                	mv	a5,a4
20405322:	0786                	slli	a5,a5,0x1
20405324:	97ba                	add	a5,a5,a4
20405326:	078e                	slli	a5,a5,0x3
20405328:	97b6                	add	a5,a5,a3
2040532a:	0887a783          	lw	a5,136(a5)
2040532e:	85be                	mv	a1,a5
20405330:	8532                	mv	a0,a2
20405332:	9802                	jalr	a6
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20405334:	fe442603          	lw	a2,-28(s0)
20405338:	fe842583          	lw	a1,-24(s0)
2040533c:	fec42503          	lw	a0,-20(s0)
20405340:	3b81                	jal	20405090 <__metal_plic0_complete_interrupt>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:121
}
20405342:	0001                	nop
20405344:	50b2                	lw	ra,44(sp)
20405346:	5422                	lw	s0,40(sp)
20405348:	6145                	addi	sp,sp,48
2040534a:	8082                	ret

2040534c <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
2040534c:	7139                	addi	sp,sp,-64
2040534e:	de06                	sw	ra,60(sp)
20405350:	dc22                	sw	s0,56(sp)
20405352:	0080                	addi	s0,sp,64
20405354:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405358:	fcc42783          	lw	a5,-52(s0)
2040535c:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20405360:	fe442783          	lw	a5,-28(s0)
20405364:	43dc                	lw	a5,4(a5)
20405366:	12079a63          	bnez	a5,2040549a <__metal_driver_riscv_plic0_init+0x14e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040536a:	fe042623          	sw	zero,-20(s0)
2040536e:	aa31                	j	2040548a <__metal_driver_riscv_plic0_init+0x13e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20405370:	fcc42503          	lw	a0,-52(s0)
20405374:	c29ff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
20405378:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
2040537c:	fec42583          	lw	a1,-20(s0)
20405380:	fcc42503          	lw	a0,-52(s0)
20405384:	c69ff0ef          	jal	ra,20404fec <__metal_driver_sifive_plic0_interrupt_parents>
20405388:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
2040538c:	fec42583          	lw	a1,-20(s0)
20405390:	fcc42503          	lw	a0,-52(s0)
20405394:	c81ff0ef          	jal	ra,20405014 <__metal_driver_sifive_plic0_interrupt_lines>
20405398:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
2040539c:	fdc42783          	lw	a5,-36(s0)
204053a0:	439c                	lw	a5,0(a5)
204053a2:	439c                	lw	a5,0(a5)
204053a4:	fdc42503          	lw	a0,-36(s0)
204053a8:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204053aa:	fe042423          	sw	zero,-24(s0)
204053ae:	a885                	j	2040541e <__metal_driver_riscv_plic0_init+0xd2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204053b0:	4681                	li	a3,0
204053b2:	fe842603          	lw	a2,-24(s0)
204053b6:	fec42583          	lw	a1,-20(s0)
204053ba:	fe442503          	lw	a0,-28(s0)
204053be:	353d                	jal	204051ec <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204053c0:	fe842703          	lw	a4,-24(s0)
204053c4:	fe042783          	lw	a5,-32(s0)
204053c8:	04f75663          	bge	a4,a5,20405414 <__metal_driver_riscv_plic0_init+0xc8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204053cc:	4601                	li	a2,0
204053ce:	fe842583          	lw	a1,-24(s0)
204053d2:	fcc42503          	lw	a0,-52(s0)
204053d6:	3341                	jal	20405156 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
204053d8:	fe442703          	lw	a4,-28(s0)
204053dc:	fe842783          	lw	a5,-24(s0)
204053e0:	078a                	slli	a5,a5,0x2
204053e2:	97ba                	add	a5,a5,a4
204053e4:	0007a423          	sw	zero,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
204053e8:	fe442683          	lw	a3,-28(s0)
204053ec:	fe842703          	lw	a4,-24(s0)
204053f0:	87ba                	mv	a5,a4
204053f2:	0786                	slli	a5,a5,0x1
204053f4:	97ba                	add	a5,a5,a4
204053f6:	078e                	slli	a5,a5,0x3
204053f8:	97b6                	add	a5,a5,a3
204053fa:	0807a223          	sw	zero,132(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
204053fe:	fe442683          	lw	a3,-28(s0)
20405402:	fe842703          	lw	a4,-24(s0)
20405406:	87ba                	mv	a5,a4
20405408:	0786                	slli	a5,a5,0x1
2040540a:	97ba                	add	a5,a5,a4
2040540c:	078e                	slli	a5,a5,0x3
2040540e:	97b6                	add	a5,a5,a3
20405410:	0807a423          	sw	zero,136(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405414:	fe842783          	lw	a5,-24(s0)
20405418:	0785                	addi	a5,a5,1
2040541a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040541e:	fe842703          	lw	a4,-24(s0)
20405422:	3ff00793          	li	a5,1023
20405426:	f8e7d5e3          	bge	a5,a4,204053b0 <__metal_driver_riscv_plic0_init+0x64>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
2040542a:	4601                	li	a2,0
2040542c:	fec42583          	lw	a1,-20(s0)
20405430:	fcc42503          	lw	a0,-52(s0)
20405434:	ca3ff0ef          	jal	ra,204050d6 <__metal_plic0_set_threshold>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405438:	fdc42783          	lw	a5,-36(s0)
2040543c:	439c                	lw	a5,0(a5)
2040543e:	4fdc                	lw	a5,28(a5)
20405440:	fe442683          	lw	a3,-28(s0)
20405444:	4601                	li	a2,0
20405446:	fd842583          	lw	a1,-40(s0)
2040544a:	fdc42503          	lw	a0,-36(s0)
2040544e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20405450:	fdc42783          	lw	a5,-36(s0)
20405454:	439c                	lw	a5,0(a5)
20405456:	4fd8                	lw	a4,28(a5)
20405458:	fe442683          	lw	a3,-28(s0)
2040545c:	204057b7          	lui	a5,0x20405
20405460:	2a678613          	addi	a2,a5,678 # 204052a6 <__metal_plic0_handler>
20405464:	fd842583          	lw	a1,-40(s0)
20405468:	fdc42503          	lw	a0,-36(s0)
2040546c:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2040546e:	fdc42783          	lw	a5,-36(s0)
20405472:	439c                	lw	a5,0(a5)
20405474:	53dc                	lw	a5,36(a5)
20405476:	fd842583          	lw	a1,-40(s0)
2040547a:	fdc42503          	lw	a0,-36(s0)
2040547e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405480:	fec42783          	lw	a5,-20(s0)
20405484:	0785                	addi	a5,a5,1
20405486:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
2040548a:	fec42783          	lw	a5,-20(s0)
2040548e:	eef051e3          	blez	a5,20405370 <__metal_driver_riscv_plic0_init+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20405492:	fe442783          	lw	a5,-28(s0)
20405496:	4705                	li	a4,1
20405498:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
2040549a:	0001                	nop
2040549c:	50f2                	lw	ra,60(sp)
2040549e:	5462                	lw	s0,56(sp)
204054a0:	6121                	addi	sp,sp,64
204054a2:	8082                	ret

204054a4 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
204054a4:	7179                	addi	sp,sp,-48
204054a6:	d606                	sw	ra,44(sp)
204054a8:	d422                	sw	s0,40(sp)
204054aa:	1800                	addi	s0,sp,48
204054ac:	fca42e23          	sw	a0,-36(s0)
204054b0:	fcb42c23          	sw	a1,-40(s0)
204054b4:	fcc42a23          	sw	a2,-44(s0)
204054b8:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204054bc:	fdc42783          	lw	a5,-36(s0)
204054c0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204054c4:	fdc42503          	lw	a0,-36(s0)
204054c8:	ad5ff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
204054cc:	872a                	mv	a4,a0
204054ce:	fd842783          	lw	a5,-40(s0)
204054d2:	00e7c463          	blt	a5,a4,204054da <__metal_driver_riscv_plic0_register+0x36>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
204054d6:	57fd                	li	a5,-1
204054d8:	a051                	j	2040555c <__metal_driver_riscv_plic0_register+0xb8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
204054da:	fd442783          	lw	a5,-44(s0)
204054de:	cf9d                	beqz	a5,2040551c <__metal_driver_riscv_plic0_register+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
204054e0:	4609                	li	a2,2
204054e2:	fd842583          	lw	a1,-40(s0)
204054e6:	fdc42503          	lw	a0,-36(s0)
204054ea:	c6dff0ef          	jal	ra,20405156 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
204054ee:	fec42703          	lw	a4,-20(s0)
204054f2:	fd842783          	lw	a5,-40(s0)
204054f6:	078a                	slli	a5,a5,0x2
204054f8:	97ba                	add	a5,a5,a4
204054fa:	fd442703          	lw	a4,-44(s0)
204054fe:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20405500:	fec42683          	lw	a3,-20(s0)
20405504:	fd842703          	lw	a4,-40(s0)
20405508:	87ba                	mv	a5,a4
2040550a:	0786                	slli	a5,a5,0x1
2040550c:	97ba                	add	a5,a5,a4
2040550e:	078e                	slli	a5,a5,0x3
20405510:	97b6                	add	a5,a5,a3
20405512:	fd042703          	lw	a4,-48(s0)
20405516:	08e7a423          	sw	a4,136(a5)
2040551a:	a081                	j	2040555a <__metal_driver_riscv_plic0_register+0xb6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
2040551c:	4605                	li	a2,1
2040551e:	fd842583          	lw	a1,-40(s0)
20405522:	fdc42503          	lw	a0,-36(s0)
20405526:	c31ff0ef          	jal	ra,20405156 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
2040552a:	fec42703          	lw	a4,-20(s0)
2040552e:	fd842783          	lw	a5,-40(s0)
20405532:	078a                	slli	a5,a5,0x2
20405534:	97ba                	add	a5,a5,a4
20405536:	20405737          	lui	a4,0x20405
2040553a:	28e70713          	addi	a4,a4,654 # 2040528e <__metal_plic0_default_handler>
2040553e:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20405540:	fec42683          	lw	a3,-20(s0)
20405544:	fd842703          	lw	a4,-40(s0)
20405548:	87ba                	mv	a5,a4
2040554a:	0786                	slli	a5,a5,0x1
2040554c:	97ba                	add	a5,a5,a4
2040554e:	078e                	slli	a5,a5,0x3
20405550:	97b6                	add	a5,a5,a3
20405552:	fd042703          	lw	a4,-48(s0)
20405556:	08e7a223          	sw	a4,132(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
2040555a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:185
}
2040555c:	853e                	mv	a0,a5
2040555e:	50b2                	lw	ra,44(sp)
20405560:	5422                	lw	s0,40(sp)
20405562:	6145                	addi	sp,sp,48
20405564:	8082                	ret

20405566 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405566:	7179                	addi	sp,sp,-48
20405568:	d606                	sw	ra,44(sp)
2040556a:	d422                	sw	s0,40(sp)
2040556c:	1800                	addi	s0,sp,48
2040556e:	fca42e23          	sw	a0,-36(s0)
20405572:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405576:	fdc42783          	lw	a5,-36(s0)
2040557a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040557e:	fdc42503          	lw	a0,-36(s0)
20405582:	a1bff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
20405586:	872a                	mv	a4,a0
20405588:	fd842783          	lw	a5,-40(s0)
2040558c:	00e7c463          	blt	a5,a4,20405594 <__metal_driver_riscv_plic0_enable+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20405590:	57fd                	li	a5,-1
20405592:	a829                	j	204055ac <__metal_driver_riscv_plic0_enable+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405594:	8bafe0ef          	jal	ra,2040364e <__metal_myhart_id>
20405598:	87aa                	mv	a5,a0
2040559a:	4685                	li	a3,1
2040559c:	fd842603          	lw	a2,-40(s0)
204055a0:	85be                	mv	a1,a5
204055a2:	fec42503          	lw	a0,-20(s0)
204055a6:	c47ff0ef          	jal	ra,204051ec <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204055aa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:197
}
204055ac:	853e                	mv	a0,a5
204055ae:	50b2                	lw	ra,44(sp)
204055b0:	5422                	lw	s0,40(sp)
204055b2:	6145                	addi	sp,sp,48
204055b4:	8082                	ret

204055b6 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204055b6:	7179                	addi	sp,sp,-48
204055b8:	d606                	sw	ra,44(sp)
204055ba:	d422                	sw	s0,40(sp)
204055bc:	1800                	addi	s0,sp,48
204055be:	fca42e23          	sw	a0,-36(s0)
204055c2:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204055c6:	fdc42783          	lw	a5,-36(s0)
204055ca:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204055ce:	fdc42503          	lw	a0,-36(s0)
204055d2:	9cbff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
204055d6:	872a                	mv	a4,a0
204055d8:	fd842783          	lw	a5,-40(s0)
204055dc:	00e7c463          	blt	a5,a4,204055e4 <__metal_driver_riscv_plic0_disable+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
204055e0:	57fd                	li	a5,-1
204055e2:	a829                	j	204055fc <__metal_driver_riscv_plic0_disable+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
204055e4:	86afe0ef          	jal	ra,2040364e <__metal_myhart_id>
204055e8:	87aa                	mv	a5,a0
204055ea:	4681                	li	a3,0
204055ec:	fd842603          	lw	a2,-40(s0)
204055f0:	85be                	mv	a1,a5
204055f2:	fec42503          	lw	a0,-20(s0)
204055f6:	bf7ff0ef          	jal	ra,204051ec <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
204055fa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:208
}
204055fc:	853e                	mv	a0,a5
204055fe:	50b2                	lw	ra,44(sp)
20405600:	5422                	lw	s0,40(sp)
20405602:	6145                	addi	sp,sp,48
20405604:	8082                	ret

20405606 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405606:	1101                	addi	sp,sp,-32
20405608:	ce06                	sw	ra,28(sp)
2040560a:	cc22                	sw	s0,24(sp)
2040560c:	1000                	addi	s0,sp,32
2040560e:	fea42623          	sw	a0,-20(s0)
20405612:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405616:	838fe0ef          	jal	ra,2040364e <__metal_myhart_id>
2040561a:	87aa                	mv	a5,a0
2040561c:	fe842603          	lw	a2,-24(s0)
20405620:	85be                	mv	a1,a5
20405622:	fec42503          	lw	a0,-20(s0)
20405626:	ab1ff0ef          	jal	ra,204050d6 <__metal_plic0_set_threshold>
2040562a:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
2040562c:	853e                	mv	a0,a5
2040562e:	40f2                	lw	ra,28(sp)
20405630:	4462                	lw	s0,24(sp)
20405632:	6105                	addi	sp,sp,32
20405634:	8082                	ret

20405636 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405636:	1101                	addi	sp,sp,-32
20405638:	ce06                	sw	ra,28(sp)
2040563a:	cc22                	sw	s0,24(sp)
2040563c:	1000                	addi	s0,sp,32
2040563e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20405642:	80cfe0ef          	jal	ra,2040364e <__metal_myhart_id>
20405646:	87aa                	mv	a5,a0
20405648:	85be                	mv	a1,a5
2040564a:	fec42503          	lw	a0,-20(s0)
2040564e:	acfff0ef          	jal	ra,2040511c <__metal_plic0_get_threshold>
20405652:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405654:	853e                	mv	a0,a5
20405656:	40f2                	lw	ra,28(sp)
20405658:	4462                	lw	s0,24(sp)
2040565a:	6105                	addi	sp,sp,32
2040565c:	8082                	ret

2040565e <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2040565e:	7179                	addi	sp,sp,-48
20405660:	d606                	sw	ra,44(sp)
20405662:	d422                	sw	s0,40(sp)
20405664:	1800                	addi	s0,sp,48
20405666:	fca42e23          	sw	a0,-36(s0)
2040566a:	fcb42c23          	sw	a1,-40(s0)
2040566e:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20405672:	fe042223          	sw	zero,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405676:	fdc42783          	lw	a5,-36(s0)
2040567a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040567e:	fdc42503          	lw	a0,-36(s0)
20405682:	91bff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
20405686:	872a                	mv	a4,a0
20405688:	fd442783          	lw	a5,-44(s0)
2040568c:	00e7c863          	blt	a5,a4,2040569c <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20405690:	57fd                	li	a5,-1
20405692:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405696:	fe442783          	lw	a5,-28(s0)
2040569a:	a899                	j	204056f0 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
2040569c:	fe042623          	sw	zero,-20(s0)
204056a0:	a099                	j	204056e6 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
204056a2:	fec42783          	lw	a5,-20(s0)
204056a6:	c795                	beqz	a5,204056d2 <__metal_driver_riscv_plic0_affinity_enable+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204056a8:	4685                	li	a3,1
204056aa:	fd442603          	lw	a2,-44(s0)
204056ae:	fec42583          	lw	a1,-20(s0)
204056b2:	fe842503          	lw	a0,-24(s0)
204056b6:	b37ff0ef          	jal	ra,204051ec <__metal_plic0_enable>
204056ba:	87aa                	mv	a5,a0
204056bc:	0017f713          	andi	a4,a5,1
204056c0:	fec42783          	lw	a5,-20(s0)
204056c4:	00f71733          	sll	a4,a4,a5
204056c8:	fe442783          	lw	a5,-28(s0)
204056cc:	8fd9                	or	a5,a5,a4
204056ce:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204056d2:	fec42783          	lw	a5,-20(s0)
204056d6:	0785                	addi	a5,a5,1
204056d8:	fef42623          	sw	a5,-20(s0)
204056dc:	fd842783          	lw	a5,-40(s0)
204056e0:	8385                	srli	a5,a5,0x1
204056e2:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
204056e6:	fd842783          	lw	a5,-40(s0)
204056ea:	ffc5                	bnez	a5,204056a2 <__metal_driver_riscv_plic0_affinity_enable+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
204056ec:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
204056f0:	853e                	mv	a0,a5
204056f2:	50b2                	lw	ra,44(sp)
204056f4:	5422                	lw	s0,40(sp)
204056f6:	6145                	addi	sp,sp,48
204056f8:	8082                	ret

204056fa <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
204056fa:	7179                	addi	sp,sp,-48
204056fc:	d606                	sw	ra,44(sp)
204056fe:	d422                	sw	s0,40(sp)
20405700:	1800                	addi	s0,sp,48
20405702:	fca42e23          	sw	a0,-36(s0)
20405706:	fcb42c23          	sw	a1,-40(s0)
2040570a:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040570e:	fe042223          	sw	zero,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405712:	fdc42783          	lw	a5,-36(s0)
20405716:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040571a:	fdc42503          	lw	a0,-36(s0)
2040571e:	87fff0ef          	jal	ra,20404f9c <__metal_driver_sifive_plic0_num_interrupts>
20405722:	872a                	mv	a4,a0
20405724:	fd442783          	lw	a5,-44(s0)
20405728:	00e7c863          	blt	a5,a4,20405738 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
2040572c:	57fd                	li	a5,-1
2040572e:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20405732:	fe442783          	lw	a5,-28(s0)
20405736:	a899                	j	2040578c <__metal_driver_riscv_plic0_affinity_disable+0x92>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405738:	fe042623          	sw	zero,-20(s0)
2040573c:	a099                	j	20405782 <__metal_driver_riscv_plic0_affinity_disable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2040573e:	fec42783          	lw	a5,-20(s0)
20405742:	c795                	beqz	a5,2040576e <__metal_driver_riscv_plic0_affinity_disable+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405744:	4681                	li	a3,0
20405746:	fd442603          	lw	a2,-44(s0)
2040574a:	fec42583          	lw	a1,-20(s0)
2040574e:	fe842503          	lw	a0,-24(s0)
20405752:	a9bff0ef          	jal	ra,204051ec <__metal_plic0_enable>
20405756:	87aa                	mv	a5,a0
20405758:	0017f713          	andi	a4,a5,1
2040575c:	fec42783          	lw	a5,-20(s0)
20405760:	00f71733          	sll	a4,a4,a5
20405764:	fe442783          	lw	a5,-28(s0)
20405768:	8fd9                	or	a5,a5,a4
2040576a:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040576e:	fec42783          	lw	a5,-20(s0)
20405772:	0785                	addi	a5,a5,1
20405774:	fef42623          	sw	a5,-20(s0)
20405778:	fd842783          	lw	a5,-40(s0)
2040577c:	8385                	srli	a5,a5,0x1
2040577e:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20405782:	fd842783          	lw	a5,-40(s0)
20405786:	ffc5                	bnez	a5,2040573e <__metal_driver_riscv_plic0_affinity_disable+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405788:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
2040578c:	853e                	mv	a0,a5
2040578e:	50b2                	lw	ra,44(sp)
20405790:	5422                	lw	s0,40(sp)
20405792:	6145                	addi	sp,sp,48
20405794:	8082                	ret

20405796 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405796:	7179                	addi	sp,sp,-48
20405798:	d606                	sw	ra,44(sp)
2040579a:	d422                	sw	s0,40(sp)
2040579c:	1800                	addi	s0,sp,48
2040579e:	fca42e23          	sw	a0,-36(s0)
204057a2:	fcb42c23          	sw	a1,-40(s0)
204057a6:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
204057aa:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
204057ae:	fe042623          	sw	zero,-20(s0)
204057b2:	a091                	j	204057f6 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
204057b4:	fec42783          	lw	a5,-20(s0)
204057b8:	c78d                	beqz	a5,204057e2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
204057ba:	fd442603          	lw	a2,-44(s0)
204057be:	fec42583          	lw	a1,-20(s0)
204057c2:	fdc42503          	lw	a0,-36(s0)
204057c6:	911ff0ef          	jal	ra,204050d6 <__metal_plic0_set_threshold>
204057ca:	87aa                	mv	a5,a0
204057cc:	0017f713          	andi	a4,a5,1
204057d0:	fec42783          	lw	a5,-20(s0)
204057d4:	00f71733          	sll	a4,a4,a5
204057d8:	fe842783          	lw	a5,-24(s0)
204057dc:	8fd9                	or	a5,a5,a4
204057de:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204057e2:	fec42783          	lw	a5,-20(s0)
204057e6:	0785                	addi	a5,a5,1
204057e8:	fef42623          	sw	a5,-20(s0)
204057ec:	fd842783          	lw	a5,-40(s0)
204057f0:	8385                	srli	a5,a5,0x1
204057f2:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
204057f6:	fd842783          	lw	a5,-40(s0)
204057fa:	ffcd                	bnez	a5,204057b4 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
204057fc:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:281
}
20405800:	853e                	mv	a0,a5
20405802:	50b2                	lw	ra,44(sp)
20405804:	5422                	lw	s0,40(sp)
20405806:	6145                	addi	sp,sp,48
20405808:	8082                	ret

2040580a <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
2040580a:	1101                	addi	sp,sp,-32
2040580c:	ce06                	sw	ra,28(sp)
2040580e:	cc22                	sw	s0,24(sp)
20405810:	1000                	addi	s0,sp,32
20405812:	fea42623          	sw	a0,-20(s0)
20405816:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
2040581a:	fe842583          	lw	a1,-24(s0)
2040581e:	fec42503          	lw	a0,-20(s0)
20405822:	8fbff0ef          	jal	ra,2040511c <__metal_plic0_get_threshold>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405826:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405828:	853e                	mv	a0,a5
2040582a:	40f2                	lw	ra,28(sp)
2040582c:	4462                	lw	s0,24(sp)
2040582e:	6105                	addi	sp,sp,32
20405830:	8082                	ret

20405832 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20405832:	1101                	addi	sp,sp,-32
20405834:	ce22                	sw	s0,28(sp)
20405836:	1000                	addi	s0,sp,32
20405838:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
2040583c:	800007b7          	lui	a5,0x80000
20405840:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffeb9c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1039
}
20405844:	853e                	mv	a0,a5
20405846:	4472                	lw	s0,28(sp)
20405848:	6105                	addi	sp,sp,32
2040584a:	8082                	ret

2040584c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
2040584c:	1101                	addi	sp,sp,-32
2040584e:	ce22                	sw	s0,28(sp)
20405850:	1000                	addi	s0,sp,32
20405852:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405856:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1044
}
2040585a:	853e                	mv	a0,a5
2040585c:	4472                	lw	s0,28(sp)
2040585e:	6105                	addi	sp,sp,32
20405860:	8082                	ret

20405862 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20405862:	1101                	addi	sp,sp,-32
20405864:	ce22                	sw	s0,28(sp)
20405866:	1000                	addi	s0,sp,32
20405868:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2040586c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1054
}
2040586e:	853e                	mv	a0,a5
20405870:	4472                	lw	s0,28(sp)
20405872:	6105                	addi	sp,sp,32
20405874:	8082                	ret

20405876 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405876:	1141                	addi	sp,sp,-16
20405878:	c622                	sw	s0,12(sp)
2040587a:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2040587c:	204017b7          	lui	a5,0x20401
20405880:	14478793          	addi	a5,a5,324 # 20401144 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405884:	853e                	mv	a0,a5
20405886:	4432                	lw	s0,12(sp)
20405888:	0141                	addi	sp,sp,16
2040588a:	8082                	ret

2040588c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2040588c:	7139                	addi	sp,sp,-64
2040588e:	de06                	sw	ra,60(sp)
20405890:	dc22                	sw	s0,56(sp)
20405892:	0080                	addi	s0,sp,64
20405894:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405898:	fcc42503          	lw	a0,-52(s0)
2040589c:	3f59                	jal	20405832 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2040589e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
204058a2:	fcc42503          	lw	a0,-52(s0)
204058a6:	3f75                	jal	20405862 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
204058a8:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
204058ac:	fcc42503          	lw	a0,-52(s0)
204058b0:	3f71                	jal	2040584c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
204058b2:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204058b6:	37c1                	jal	20405876 <__metal_driver_sifive_fe310_g000_prci_vtable>
204058b8:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
204058bc:	fe042783          	lw	a5,-32(s0)
204058c0:	439c                	lw	a5,0(a5)
204058c2:	fe842583          	lw	a1,-24(s0)
204058c6:	fe442503          	lw	a0,-28(s0)
204058ca:	9782                	jalr	a5
204058cc:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204058d0:	fdc42703          	lw	a4,-36(s0)
204058d4:	400007b7          	lui	a5,0x40000
204058d8:	8ff9                	and	a5,a5,a4
204058da:	e399                	bnez	a5,204058e0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
204058dc:	57fd                	li	a5,-1
204058de:	a025                	j	20405906 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
204058e0:	fdc42783          	lw	a5,-36(s0)
204058e4:	0007c463          	bltz	a5,204058ec <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
204058e8:	57fd                	li	a5,-1
204058ea:	a831                	j	20405906 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
204058ec:	fec42503          	lw	a0,-20(s0)
204058f0:	0ed010ef          	jal	ra,204071dc <metal_clock_get_rate_hz>
204058f4:	87aa                	mv	a5,a0
204058f6:	873e                	mv	a4,a5
204058f8:	fdc42783          	lw	a5,-36(s0)
204058fc:	03f7f793          	andi	a5,a5,63
20405900:	0785                	addi	a5,a5,1
20405902:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405906:	853e                	mv	a0,a5
20405908:	50f2                	lw	ra,60(sp)
2040590a:	5462                	lw	s0,56(sp)
2040590c:	6121                	addi	sp,sp,64
2040590e:	8082                	ret

20405910 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405910:	1101                	addi	sp,sp,-32
20405912:	ce06                	sw	ra,28(sp)
20405914:	cc22                	sw	s0,24(sp)
20405916:	1000                	addi	s0,sp,32
20405918:	fea42623          	sw	a0,-20(s0)
2040591c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405920:	fec42503          	lw	a0,-20(s0)
20405924:	37a5                	jal	2040588c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405926:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405928:	853e                	mv	a0,a5
2040592a:	40f2                	lw	ra,28(sp)
2040592c:	4462                	lw	s0,24(sp)
2040592e:	6105                	addi	sp,sp,32
20405930:	8082                	ret

20405932 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1060
{
20405932:	1101                	addi	sp,sp,-32
20405934:	ce22                	sw	s0,28(sp)
20405936:	1000                	addi	s0,sp,32
20405938:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2040593c:	800007b7          	lui	a5,0x80000
20405940:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffeb90>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1062
}
20405944:	853e                	mv	a0,a5
20405946:	4472                	lw	s0,28(sp)
20405948:	6105                	addi	sp,sp,32
2040594a:	8082                	ret

2040594c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1065
{
2040594c:	1101                	addi	sp,sp,-32
2040594e:	ce22                	sw	s0,28(sp)
20405950:	1000                	addi	s0,sp,32
20405952:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405956:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1067
}
2040595a:	853e                	mv	a0,a5
2040595c:	4472                	lw	s0,28(sp)
2040595e:	6105                	addi	sp,sp,32
20405960:	8082                	ret

20405962 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1070
{
20405962:	1101                	addi	sp,sp,-32
20405964:	ce22                	sw	s0,28(sp)
20405966:	1000                	addi	s0,sp,32
20405968:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2040596c:	4791                	li	a5,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1072
}
2040596e:	853e                	mv	a0,a5
20405970:	4472                	lw	s0,28(sp)
20405972:	6105                	addi	sp,sp,32
20405974:	8082                	ret

20405976 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
20405976:	1141                	addi	sp,sp,-16
20405978:	c622                	sw	s0,12(sp)
2040597a:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2040597c:	204017b7          	lui	a5,0x20401
20405980:	14478793          	addi	a5,a5,324 # 20401144 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405984:	853e                	mv	a0,a5
20405986:	4432                	lw	s0,12(sp)
20405988:	0141                	addi	sp,sp,16
2040598a:	8082                	ret

2040598c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
2040598c:	7139                	addi	sp,sp,-64
2040598e:	de06                	sw	ra,60(sp)
20405990:	dc22                	sw	s0,56(sp)
20405992:	0080                	addi	s0,sp,64
20405994:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405998:	fcc42503          	lw	a0,-52(s0)
2040599c:	3f59                	jal	20405932 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2040599e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
204059a2:	fcc42503          	lw	a0,-52(s0)
204059a6:	3f75                	jal	20405962 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
204059a8:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
204059ac:	fcc42503          	lw	a0,-52(s0)
204059b0:	3f71                	jal	2040594c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
204059b2:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204059b6:	37c1                	jal	20405976 <__metal_driver_sifive_fe310_g000_prci_vtable>
204059b8:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
204059bc:	fe042783          	lw	a5,-32(s0)
204059c0:	439c                	lw	a5,0(a5)
204059c2:	fe842583          	lw	a1,-24(s0)
204059c6:	fe442503          	lw	a0,-28(s0)
204059ca:	9782                	jalr	a5
204059cc:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
204059d0:	fdc42703          	lw	a4,-36(s0)
204059d4:	400007b7          	lui	a5,0x40000
204059d8:	8ff9                	and	a5,a5,a4
204059da:	e399                	bnez	a5,204059e0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
204059dc:	57fd                	li	a5,-1
204059de:	a821                	j	204059f6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
204059e0:	fdc42783          	lw	a5,-36(s0)
204059e4:	0007c463          	bltz	a5,204059ec <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
204059e8:	57fd                	li	a5,-1
204059ea:	a031                	j	204059f6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
204059ec:	fec42503          	lw	a0,-20(s0)
204059f0:	7ec010ef          	jal	ra,204071dc <metal_clock_get_rate_hz>
204059f4:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
204059f6:	853e                	mv	a0,a5
204059f8:	50f2                	lw	ra,60(sp)
204059fa:	5462                	lw	s0,56(sp)
204059fc:	6121                	addi	sp,sp,64
204059fe:	8082                	ret

20405a00 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405a00:	1101                	addi	sp,sp,-32
20405a02:	ce06                	sw	ra,28(sp)
20405a04:	cc22                	sw	s0,24(sp)
20405a06:	1000                	addi	s0,sp,32
20405a08:	fea42623          	sw	a0,-20(s0)
20405a0c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405a10:	fec42503          	lw	a0,-20(s0)
20405a14:	3fa5                	jal	2040598c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405a16:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405a18:	853e                	mv	a0,a5
20405a1a:	40f2                	lw	ra,28(sp)
20405a1c:	4462                	lw	s0,24(sp)
20405a1e:	6105                	addi	sp,sp,32
20405a20:	8082                	ret

20405a22 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1121
{
20405a22:	1101                	addi	sp,sp,-32
20405a24:	ce22                	sw	s0,28(sp)
20405a26:	1000                	addi	s0,sp,32
20405a28:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405a2c:	800007b7          	lui	a5,0x80000
20405a30:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xfffff2a8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1123
}
20405a34:	853e                	mv	a0,a5
20405a36:	4472                	lw	s0,28(sp)
20405a38:	6105                	addi	sp,sp,32
20405a3a:	8082                	ret

20405a3c <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1126
{
20405a3c:	1101                	addi	sp,sp,-32
20405a3e:	ce22                	sw	s0,28(sp)
20405a40:	1000                	addi	s0,sp,32
20405a42:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405a46:	800007b7          	lui	a5,0x80000
20405a4a:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xfffff2b4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1128
}
20405a4e:	853e                	mv	a0,a5
20405a50:	4472                	lw	s0,28(sp)
20405a52:	6105                	addi	sp,sp,32
20405a54:	8082                	ret

20405a56 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1131
{
20405a56:	1101                	addi	sp,sp,-32
20405a58:	ce22                	sw	s0,28(sp)
20405a5a:	1000                	addi	s0,sp,32
20405a5c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405a60:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1133
}
20405a64:	853e                	mv	a0,a5
20405a66:	4472                	lw	s0,28(sp)
20405a68:	6105                	addi	sp,sp,32
20405a6a:	8082                	ret

20405a6c <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1136
{
20405a6c:	1101                	addi	sp,sp,-32
20405a6e:	ce22                	sw	s0,28(sp)
20405a70:	1000                	addi	s0,sp,32
20405a72:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405a76:	47b1                	li	a5,12
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1138
}
20405a78:	853e                	mv	a0,a5
20405a7a:	4472                	lw	s0,28(sp)
20405a7c:	6105                	addi	sp,sp,32
20405a7e:	8082                	ret

20405a80 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1141
{
20405a80:	1141                	addi	sp,sp,-16
20405a82:	c622                	sw	s0,12(sp)
20405a84:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405a86:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1143
}
20405a8a:	853e                	mv	a0,a5
20405a8c:	4432                	lw	s0,12(sp)
20405a8e:	0141                	addi	sp,sp,16
20405a90:	8082                	ret

20405a92 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1146
{
20405a92:	1141                	addi	sp,sp,-16
20405a94:	c622                	sw	s0,12(sp)
20405a96:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405a98:	47a1                	li	a5,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1148
}
20405a9a:	853e                	mv	a0,a5
20405a9c:	4432                	lw	s0,12(sp)
20405a9e:	0141                	addi	sp,sp,16
20405aa0:	8082                	ret

20405aa2 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1151
{
20405aa2:	1141                	addi	sp,sp,-16
20405aa4:	c622                	sw	s0,12(sp)
20405aa6:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1152
		return 16000000;
20405aa8:	00f427b7          	lui	a5,0xf42
20405aac:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1153
}
20405ab0:	853e                	mv	a0,a5
20405ab2:	4432                	lw	s0,12(sp)
20405ab4:	0141                	addi	sp,sp,16
20405ab6:	8082                	ret

20405ab8 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1159
{
20405ab8:	1141                	addi	sp,sp,-16
20405aba:	c622                	sw	s0,12(sp)
20405abc:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405abe:	100087b7          	lui	a5,0x10008
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1161
}
20405ac2:	853e                	mv	a0,a5
20405ac4:	4432                	lw	s0,12(sp)
20405ac6:	0141                	addi	sp,sp,16
20405ac8:	8082                	ret

20405aca <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
20405aca:	1141                	addi	sp,sp,-16
20405acc:	c622                	sw	s0,12(sp)
20405ace:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405ad0:	204017b7          	lui	a5,0x20401
20405ad4:	14478793          	addi	a5,a5,324 # 20401144 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405ad8:	853e                	mv	a0,a5
20405ada:	4432                	lw	s0,12(sp)
20405adc:	0141                	addi	sp,sp,16
20405ade:	8082                	ret

20405ae0 <get_pll_config_freq>:
get_pll_config_freq():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405ae0:	1101                	addi	sp,sp,-32
20405ae2:	ce22                	sw	s0,28(sp)
20405ae4:	1000                	addi	s0,sp,32
20405ae6:	fea42623          	sw	a0,-20(s0)
20405aea:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405aee:	fe842783          	lw	a5,-24(s0)
20405af2:	479c                	lw	a5,8(a5)
20405af4:	fec42703          	lw	a4,-20(s0)
20405af8:	00f76963          	bltu	a4,a5,20405b0a <get_pll_config_freq+0x2a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405afc:	fe842783          	lw	a5,-24(s0)
20405b00:	47dc                	lw	a5,12(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405b02:	fec42703          	lw	a4,-20(s0)
20405b06:	00e7f463          	bgeu	a5,a4,20405b0e <get_pll_config_freq+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405b0a:	57fd                	li	a5,-1
20405b0c:	a829                	j	20405b26 <get_pll_config_freq+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405b0e:	fe842783          	lw	a5,-24(s0)
20405b12:	4398                	lw	a4,0(a5)
20405b14:	fec42783          	lw	a5,-20(s0)
20405b18:	02f70733          	mul	a4,a4,a5
20405b1c:	fe842783          	lw	a5,-24(s0)
20405b20:	43dc                	lw	a5,4(a5)
20405b22:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405b26:	853e                	mv	a0,a5
20405b28:	4472                	lw	s0,28(sp)
20405b2a:	6105                	addi	sp,sp,32
20405b2c:	8082                	ret

20405b2e <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405b2e:	7139                	addi	sp,sp,-64
20405b30:	de06                	sw	ra,60(sp)
20405b32:	dc22                	sw	s0,56(sp)
20405b34:	0080                	addi	s0,sp,64
20405b36:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405b3a:	fcc42783          	lw	a5,-52(s0)
20405b3e:	853e                	mv	a0,a5
20405b40:	3df5                	jal	20405a3c <__metal_driver_sifive_fe310_g000_pll_pllref>
20405b42:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405b46:	3fb1                	jal	20405aa2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405b48:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405b4c:	3799                	jal	20405a92 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405b4e:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405b52:	379d                	jal	20405ab8 <__metal_driver_sifive_fe310_g000_prci_base>
20405b54:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405b58:	fe042703          	lw	a4,-32(s0)
20405b5c:	fe442783          	lw	a5,-28(s0)
20405b60:	97ba                	add	a5,a5,a4
20405b62:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405b66:	fcc42783          	lw	a5,-52(s0)
20405b6a:	43dc                	lw	a5,4(a5)
20405b6c:	853e                	mv	a0,a5
20405b6e:	5d8010ef          	jal	ra,20407146 <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405b72:	fdc42783          	lw	a5,-36(s0)
20405b76:	4398                	lw	a4,0(a5)
20405b78:	67c1                	lui	a5,0x10
20405b7a:	8ff9                	and	a5,a5,a4
20405b7c:	cb91                	beqz	a5,20405b90 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405b7e:	fdc42783          	lw	a5,-36(s0)
20405b82:	4398                	lw	a4,0(a5)
20405b84:	77c1                	lui	a5,0xffff0
20405b86:	17fd                	addi	a5,a5,-1
20405b88:	8f7d                	and	a4,a4,a5
20405b8a:	fdc42783          	lw	a5,-36(s0)
20405b8e:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405b90:	fec42783          	lw	a5,-20(s0)
20405b94:	cb91                	beqz	a5,20405ba8 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405b96:	fdc42783          	lw	a5,-36(s0)
20405b9a:	4398                	lw	a4,0(a5)
20405b9c:	000207b7          	lui	a5,0x20
20405ba0:	8f5d                	or	a4,a4,a5
20405ba2:	fdc42783          	lw	a5,-36(s0)
20405ba6:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405ba8:	fcc42783          	lw	a5,-52(s0)
20405bac:	439c                	lw	a5,0(a5)
20405bae:	43d8                	lw	a4,4(a5)
20405bb0:	fcc42783          	lw	a5,-52(s0)
20405bb4:	fe842583          	lw	a1,-24(s0)
20405bb8:	853e                	mv	a0,a5
20405bba:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405bbc:	fcc42783          	lw	a5,-52(s0)
20405bc0:	479c                	lw	a5,8(a5)
20405bc2:	853e                	mv	a0,a5
20405bc4:	582010ef          	jal	ra,20407146 <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405bc8:	0001                	nop
20405bca:	50f2                	lw	ra,60(sp)
20405bcc:	5462                	lw	s0,56(sp)
20405bce:	6121                	addi	sp,sp,64
20405bd0:	8082                	ret

20405bd2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405bd2:	711d                	addi	sp,sp,-96
20405bd4:	ce86                	sw	ra,92(sp)
20405bd6:	cca2                	sw	s0,88(sp)
20405bd8:	1080                	addi	s0,sp,96
20405bda:	faa42623          	sw	a0,-84(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405bde:	fac42503          	lw	a0,-84(s0)
20405be2:	3da9                	jal	20405a3c <__metal_driver_sifive_fe310_g000_pll_pllref>
20405be4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405be8:	fac42503          	lw	a0,-84(s0)
20405bec:	3d1d                	jal	20405a22 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405bee:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405bf2:	fac42503          	lw	a0,-84(s0)
20405bf6:	3d71                	jal	20405a92 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405bf8:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405bfc:	fac42503          	lw	a0,-84(s0)
20405c00:	3541                	jal	20405a80 <__metal_driver_sifive_fe310_g000_pll_config_base>
20405c02:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405c06:	fac42503          	lw	a0,-84(s0)
20405c0a:	358d                	jal	20405a6c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405c0c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405c10:	fac42503          	lw	a0,-84(s0)
20405c14:	3589                	jal	20405a56 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405c16:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405c1a:	3d45                	jal	20405aca <__metal_driver_sifive_fe310_g000_prci_vtable>
20405c1c:	fca42a23          	sw	a0,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405c20:	fd442783          	lw	a5,-44(s0)
20405c24:	439c                	lw	a5,0(a5)
20405c26:	fe442583          	lw	a1,-28(s0)
20405c2a:	fe042503          	lw	a0,-32(s0)
20405c2e:	9782                	jalr	a5
20405c30:	fca42823          	sw	a0,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405c34:	fd442783          	lw	a5,-44(s0)
20405c38:	439c                	lw	a5,0(a5)
20405c3a:	fdc42583          	lw	a1,-36(s0)
20405c3e:	fd842503          	lw	a0,-40(s0)
20405c42:	9782                	jalr	a5
20405c44:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405c48:	fd042703          	lw	a4,-48(s0)
20405c4c:	67c1                	lui	a5,0x10
20405c4e:	8f7d                	and	a4,a4,a5
20405c50:	67c1                	lui	a5,0x10
20405c52:	00f77863          	bgeu	a4,a5,20405c62 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405c56:	fe842503          	lw	a0,-24(s0)
20405c5a:	582010ef          	jal	ra,204071dc <metal_clock_get_rate_hz>
20405c5e:	87aa                	mv	a5,a0
20405c60:	a8e1                	j	20405d38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405c62:	fd042703          	lw	a4,-48(s0)
20405c66:	000207b7          	lui	a5,0x20
20405c6a:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405c6c:	000207b7          	lui	a5,0x20
20405c70:	00f76563          	bltu	a4,a5,20405c7a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405c74:	fec42783          	lw	a5,-20(s0)
20405c78:	a019                	j	20405c7e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405c7a:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405c7e:	853e                	mv	a0,a5
20405c80:	55c010ef          	jal	ra,204071dc <metal_clock_get_rate_hz>
20405c84:	fca42423          	sw	a0,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405c88:	fd042703          	lw	a4,-48(s0)
20405c8c:	000407b7          	lui	a5,0x40
20405c90:	8f7d                	and	a4,a4,a5
20405c92:	000407b7          	lui	a5,0x40
20405c96:	00f76563          	bltu	a4,a5,20405ca0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405c9a:	fc842783          	lw	a5,-56(s0)
20405c9e:	a869                	j	20405d38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405ca0:	fd042783          	lw	a5,-48(s0)
20405ca4:	8b9d                	andi	a5,a5,7
20405ca6:	0785                	addi	a5,a5,1
20405ca8:	fcf42223          	sw	a5,-60(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405cac:	fd042783          	lw	a5,-48(s0)
20405cb0:	3f07f793          	andi	a5,a5,1008
20405cb4:	8391                	srli	a5,a5,0x4
20405cb6:	0785                	addi	a5,a5,1
20405cb8:	0786                	slli	a5,a5,0x1
20405cba:	fcf42023          	sw	a5,-64(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405cbe:	fd042703          	lw	a4,-48(s0)
20405cc2:	6785                	lui	a5,0x1
20405cc4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405cc8:	8f7d                	and	a4,a4,a5
20405cca:	3ff00793          	li	a5,1023
20405cce:	00e7e463          	bltu	a5,a4,20405cd6 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405cd2:	57fd                	li	a5,-1
20405cd4:	a095                	j	20405d38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405cd6:	fd042703          	lw	a4,-48(s0)
20405cda:	6785                	lui	a5,0x1
20405cdc:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405ce0:	8ff9                	and	a5,a5,a4
20405ce2:	83a9                	srli	a5,a5,0xa
20405ce4:	4705                	li	a4,1
20405ce6:	00f717b3          	sll	a5,a4,a5
20405cea:	faf42e23          	sw	a5,-68(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20405cee:	fc842703          	lw	a4,-56(s0)
20405cf2:	fc442783          	lw	a5,-60(s0)
20405cf6:	02f74733          	div	a4,a4,a5
20405cfa:	fc042783          	lw	a5,-64(s0)
20405cfe:	02f70733          	mul	a4,a4,a5
20405d02:	fbc42783          	lw	a5,-68(s0)
20405d06:	02f747b3          	div	a5,a4,a5
20405d0a:	faf42c23          	sw	a5,-72(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20405d0e:	fcc42783          	lw	a5,-52(s0)
20405d12:	1007f713          	andi	a4,a5,256
20405d16:	0ff00793          	li	a5,255
20405d1a:	00e7f563          	bgeu	a5,a4,20405d24 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20405d1e:	fb842783          	lw	a5,-72(s0)
20405d22:	a819                	j	20405d38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405d24:	fb842703          	lw	a4,-72(s0)
20405d28:	fcc42783          	lw	a5,-52(s0)
20405d2c:	03f7f793          	andi	a5,a5,63
20405d30:	0785                	addi	a5,a5,1
20405d32:	0786                	slli	a5,a5,0x1
20405d34:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405d38:	853e                	mv	a0,a5
20405d3a:	40f6                	lw	ra,92(sp)
20405d3c:	4466                	lw	s0,88(sp)
20405d3e:	6125                	addi	sp,sp,96
20405d40:	8082                	ret

20405d42 <find_closest_config>:
find_closest_config():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20405d42:	7139                	addi	sp,sp,-64
20405d44:	de06                	sw	ra,60(sp)
20405d46:	dc22                	sw	s0,56(sp)
20405d48:	0080                	addi	s0,sp,64
20405d4a:	fca42623          	sw	a0,-52(s0)
20405d4e:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20405d52:	57fd                	li	a5,-1
20405d54:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405d58:	800007b7          	lui	a5,0x80000
20405d5c:	fff7c793          	not	a5,a5
20405d60:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405d64:	04300793          	li	a5,67
20405d68:	fef42223          	sw	a5,-28(s0)
20405d6c:	a0b5                	j	20405dd8 <find_closest_config+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405d6e:	fcc42683          	lw	a3,-52(s0)
20405d72:	fe442783          	lw	a5,-28(s0)
20405d76:	00579713          	slli	a4,a5,0x5
20405d7a:	204007b7          	lui	a5,0x20400
20405d7e:	7e478793          	addi	a5,a5,2020 # 204007e4 <pll_configs>
20405d82:	97ba                	add	a5,a5,a4
20405d84:	85be                	mv	a1,a5
20405d86:	8536                	mv	a0,a3
20405d88:	d59ff0ef          	jal	ra,20405ae0 <get_pll_config_freq>
20405d8c:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405d90:	fe042703          	lw	a4,-32(s0)
20405d94:	57fd                	li	a5,-1
20405d96:	02f70c63          	beq	a4,a5,20405dce <find_closest_config+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405d9a:	fe042703          	lw	a4,-32(s0)
20405d9e:	fc842783          	lw	a5,-56(s0)
20405da2:	8f1d                	sub	a4,a4,a5
20405da4:	41f75793          	srai	a5,a4,0x1f
20405da8:	8f3d                	xor	a4,a4,a5
20405daa:	40f707b3          	sub	a5,a4,a5
20405dae:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20405db2:	fdc42703          	lw	a4,-36(s0)
20405db6:	fe842783          	lw	a5,-24(s0)
20405dba:	00f75a63          	bge	a4,a5,20405dce <find_closest_config+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20405dbe:	fe442783          	lw	a5,-28(s0)
20405dc2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20405dc6:	fdc42783          	lw	a5,-36(s0)
20405dca:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20405dce:	fe442783          	lw	a5,-28(s0)
20405dd2:	17fd                	addi	a5,a5,-1
20405dd4:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405dd8:	fe442783          	lw	a5,-28(s0)
20405ddc:	f807d9e3          	bgez	a5,20405d6e <find_closest_config+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20405de0:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20405de4:	853e                	mv	a0,a5
20405de6:	50f2                	lw	ra,60(sp)
20405de8:	5462                	lw	s0,56(sp)
20405dea:	6121                	addi	sp,sp,64
20405dec:	8082                	ret

20405dee <configure_pll>:
configure_pll():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20405dee:	7179                	addi	sp,sp,-48
20405df0:	d606                	sw	ra,44(sp)
20405df2:	d422                	sw	s0,40(sp)
20405df4:	1800                	addi	s0,sp,48
20405df6:	fca42e23          	sw	a0,-36(s0)
20405dfa:	fcb42c23          	sw	a1,-40(s0)
20405dfe:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405e02:	fdc42783          	lw	a5,-36(s0)
20405e06:	439c                	lw	a5,0(a5)
20405e08:	ff87f713          	andi	a4,a5,-8
20405e0c:	fdc42783          	lw	a5,-36(s0)
20405e10:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405e12:	fdc42783          	lw	a5,-36(s0)
20405e16:	4398                	lw	a4,0(a5)
20405e18:	fd442783          	lw	a5,-44(s0)
20405e1c:	4b9c                	lw	a5,16(a5)
20405e1e:	8b9d                	andi	a5,a5,7
20405e20:	8f5d                	or	a4,a4,a5
20405e22:	fdc42783          	lw	a5,-36(s0)
20405e26:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405e28:	fdc42783          	lw	a5,-36(s0)
20405e2c:	439c                	lw	a5,0(a5)
20405e2e:	c0f7f713          	andi	a4,a5,-1009
20405e32:	fdc42783          	lw	a5,-36(s0)
20405e36:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405e38:	fdc42783          	lw	a5,-36(s0)
20405e3c:	4398                	lw	a4,0(a5)
20405e3e:	fd442783          	lw	a5,-44(s0)
20405e42:	4bdc                	lw	a5,20(a5)
20405e44:	0792                	slli	a5,a5,0x4
20405e46:	3f07f793          	andi	a5,a5,1008
20405e4a:	8f5d                	or	a4,a4,a5
20405e4c:	fdc42783          	lw	a5,-36(s0)
20405e50:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20405e52:	fdc42783          	lw	a5,-36(s0)
20405e56:	4398                	lw	a4,0(a5)
20405e58:	77fd                	lui	a5,0xfffff
20405e5a:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdf2f>
20405e5e:	8f7d                	and	a4,a4,a5
20405e60:	fdc42783          	lw	a5,-36(s0)
20405e64:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405e66:	fdc42783          	lw	a5,-36(s0)
20405e6a:	4398                	lw	a4,0(a5)
20405e6c:	fd442783          	lw	a5,-44(s0)
20405e70:	4f9c                	lw	a5,24(a5)
20405e72:	00a79693          	slli	a3,a5,0xa
20405e76:	6785                	lui	a5,0x1
20405e78:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405e7c:	8ff5                	and	a5,a5,a3
20405e7e:	8f5d                	or	a4,a4,a5
20405e80:	fdc42783          	lw	a5,-36(s0)
20405e84:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20405e86:	fd442783          	lw	a5,-44(s0)
20405e8a:	4fdc                	lw	a5,28(a5)
20405e8c:	0207db63          	bgez	a5,20405ec2 <configure_pll+0xd4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405e90:	fd842783          	lw	a5,-40(s0)
20405e94:	439c                	lw	a5,0(a5)
20405e96:	1007e713          	ori	a4,a5,256
20405e9a:	fd842783          	lw	a5,-40(s0)
20405e9e:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405ea0:	fd842783          	lw	a5,-40(s0)
20405ea4:	439c                	lw	a5,0(a5)
20405ea6:	fc07f713          	andi	a4,a5,-64
20405eaa:	fd842783          	lw	a5,-40(s0)
20405eae:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405eb0:	fd842783          	lw	a5,-40(s0)
20405eb4:	439c                	lw	a5,0(a5)
20405eb6:	0017e713          	ori	a4,a5,1
20405eba:	fd842783          	lw	a5,-40(s0)
20405ebe:	c398                	sw	a4,0(a5)
20405ec0:	a82d                	j	20405efa <configure_pll+0x10c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405ec2:	fd842783          	lw	a5,-40(s0)
20405ec6:	439c                	lw	a5,0(a5)
20405ec8:	eff7f713          	andi	a4,a5,-257
20405ecc:	fd842783          	lw	a5,-40(s0)
20405ed0:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405ed2:	fd842783          	lw	a5,-40(s0)
20405ed6:	439c                	lw	a5,0(a5)
20405ed8:	fc07f713          	andi	a4,a5,-64
20405edc:	fd842783          	lw	a5,-40(s0)
20405ee0:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405ee2:	fd842783          	lw	a5,-40(s0)
20405ee6:	4398                	lw	a4,0(a5)
20405ee8:	fd442783          	lw	a5,-44(s0)
20405eec:	4fdc                	lw	a5,28(a5)
20405eee:	03f7f793          	andi	a5,a5,63
20405ef2:	8f5d                	or	a4,a4,a5
20405ef4:	fd842783          	lw	a5,-40(s0)
20405ef8:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20405efa:	fdc42783          	lw	a5,-36(s0)
20405efe:	4398                	lw	a4,0(a5)
20405f00:	fffc07b7          	lui	a5,0xfffc0
20405f04:	17fd                	addi	a5,a5,-1
20405f06:	8f7d                	and	a4,a4,a5
20405f08:	fdc42783          	lw	a5,-36(s0)
20405f0c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20405f0e:	fe040793          	addi	a5,s0,-32
20405f12:	863e                	mv	a2,a5
20405f14:	4585                	li	a1,1
20405f16:	800007b7          	lui	a5,0x80000
20405f1a:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
20405f1e:	cbcfd0ef          	jal	ra,204033da <__metal_driver_riscv_clint0_command_request>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20405f22:	fe042603          	lw	a2,-32(s0)
20405f26:	fe442683          	lw	a3,-28(s0)
20405f2a:	4511                	li	a0,4
20405f2c:	4581                	li	a1,0
20405f2e:	00a60733          	add	a4,a2,a0
20405f32:	883a                	mv	a6,a4
20405f34:	00c83833          	sltu	a6,a6,a2
20405f38:	00b687b3          	add	a5,a3,a1
20405f3c:	00f806b3          	add	a3,a6,a5
20405f40:	87b6                	mv	a5,a3
20405f42:	fee42423          	sw	a4,-24(s0)
20405f46:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405f4a:	a819                	j	20405f60 <configure_pll+0x172>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20405f4c:	fe040793          	addi	a5,s0,-32
20405f50:	863e                	mv	a2,a5
20405f52:	4585                	li	a1,1
20405f54:	800007b7          	lui	a5,0x80000
20405f58:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff2dc>
20405f5c:	c7efd0ef          	jal	ra,204033da <__metal_driver_riscv_clint0_command_request>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405f60:	fe042703          	lw	a4,-32(s0)
20405f64:	fe442783          	lw	a5,-28(s0)
20405f68:	fec42683          	lw	a3,-20(s0)
20405f6c:	863e                	mv	a2,a5
20405f6e:	00c6ec63          	bltu	a3,a2,20405f86 <configure_pll+0x198>
20405f72:	fec42683          	lw	a3,-20(s0)
20405f76:	863e                	mv	a2,a5
20405f78:	fcc69ae3          	bne	a3,a2,20405f4c <configure_pll+0x15e>
20405f7c:	fe842683          	lw	a3,-24(s0)
20405f80:	87ba                	mv	a5,a4
20405f82:	fcf6f5e3          	bgeu	a3,a5,20405f4c <configure_pll+0x15e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20405f86:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20405f88:	fdc42783          	lw	a5,-36(s0)
20405f8c:	439c                	lw	a5,0(a5)
20405f8e:	fe07dde3          	bgez	a5,20405f88 <configure_pll+0x19a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20405f92:	0001                	nop
20405f94:	0001                	nop
20405f96:	50b2                	lw	ra,44(sp)
20405f98:	5422                	lw	s0,40(sp)
20405f9a:	6145                	addi	sp,sp,48
20405f9c:	8082                	ret

20405f9e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20405f9e:	715d                	addi	sp,sp,-80
20405fa0:	c686                	sw	ra,76(sp)
20405fa2:	c4a2                	sw	s0,72(sp)
20405fa4:	0880                	addi	s0,sp,80
20405fa6:	faa42e23          	sw	a0,-68(s0)
20405faa:	fab42c23          	sw	a1,-72(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405fae:	fbc42503          	lw	a0,-68(s0)
20405fb2:	a8bff0ef          	jal	ra,20405a3c <__metal_driver_sifive_fe310_g000_pll_pllref>
20405fb6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405fba:	fbc42503          	lw	a0,-68(s0)
20405fbe:	a65ff0ef          	jal	ra,20405a22 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405fc2:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405fc6:	fbc42503          	lw	a0,-68(s0)
20405fca:	ac9ff0ef          	jal	ra,20405a92 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405fce:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405fd2:	fbc42503          	lw	a0,-68(s0)
20405fd6:	a97ff0ef          	jal	ra,20405a6c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405fda:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405fde:	adbff0ef          	jal	ra,20405ab8 <__metal_driver_sifive_fe310_g000_prci_base>
20405fe2:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405fe6:	fdc42703          	lw	a4,-36(s0)
20405fea:	fe442783          	lw	a5,-28(s0)
20405fee:	97ba                	add	a5,a5,a4
20405ff0:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20405ff4:	fdc42703          	lw	a4,-36(s0)
20405ff8:	fe042783          	lw	a5,-32(s0)
20405ffc:	97ba                	add	a5,a5,a4
20405ffe:	fcf42a23          	sw	a5,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20406002:	fd842783          	lw	a5,-40(s0)
20406006:	4398                	lw	a4,0(a5)
20406008:	67c1                	lui	a5,0x10
2040600a:	8ff9                	and	a5,a5,a4
2040600c:	cb91                	beqz	a5,20406020 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040600e:	fd842783          	lw	a5,-40(s0)
20406012:	4398                	lw	a4,0(a5)
20406014:	77c1                	lui	a5,0xffff0
20406016:	17fd                	addi	a5,a5,-1
20406018:	8f7d                	and	a4,a4,a5
2040601a:	fd842783          	lw	a5,-40(s0)
2040601e:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20406020:	fd842783          	lw	a5,-40(s0)
20406024:	4398                	lw	a4,0(a5)
20406026:	000207b7          	lui	a5,0x20
2040602a:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2040602c:	c781                	beqz	a5,20406034 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040602e:	fec42783          	lw	a5,-20(s0)
20406032:	a019                	j	20406038 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20406034:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20406038:	853e                	mv	a0,a5
2040603a:	1a2010ef          	jal	ra,204071dc <metal_clock_get_rate_hz>
2040603e:	fca42823          	sw	a0,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20406042:	fd042703          	lw	a4,-48(s0)
20406046:	87ba                	mv	a5,a4
20406048:	0786                	slli	a5,a5,0x1
2040604a:	97ba                	add	a5,a5,a4
2040604c:	41f7d713          	srai	a4,a5,0x1f
20406050:	8b0d                	andi	a4,a4,3
20406052:	97ba                	add	a5,a5,a4
20406054:	8789                	srai	a5,a5,0x2
20406056:	873e                	mv	a4,a5
20406058:	fb842783          	lw	a5,-72(s0)
2040605c:	02e7cb63          	blt	a5,a4,20406092 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20406060:	fd042703          	lw	a4,-48(s0)
20406064:	87ba                	mv	a5,a4
20406066:	078a                	slli	a5,a5,0x2
20406068:	97ba                	add	a5,a5,a4
2040606a:	41f7d713          	srai	a4,a5,0x1f
2040606e:	8b0d                	andi	a4,a4,3
20406070:	97ba                	add	a5,a5,a4
20406072:	8789                	srai	a5,a5,0x2
20406074:	873e                	mv	a4,a5
20406076:	fb842783          	lw	a5,-72(s0)
2040607a:	00f74c63          	blt	a4,a5,20406092 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2040607e:	fd842783          	lw	a5,-40(s0)
20406082:	4398                	lw	a4,0(a5)
20406084:	000407b7          	lui	a5,0x40
20406088:	8f5d                	or	a4,a4,a5
2040608a:	fd842783          	lw	a5,-40(s0)
2040608e:	c398                	sw	a4,0(a5)
20406090:	a881                	j	204060e0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20406092:	fb842583          	lw	a1,-72(s0)
20406096:	fd042503          	lw	a0,-48(s0)
2040609a:	ca9ff0ef          	jal	ra,20405d42 <find_closest_config>
2040609e:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
204060a2:	fcc42703          	lw	a4,-52(s0)
204060a6:	57fd                	li	a5,-1
204060a8:	02f70363          	beq	a4,a5,204060ce <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204060ac:	fcc42783          	lw	a5,-52(s0)
204060b0:	00579713          	slli	a4,a5,0x5
204060b4:	204007b7          	lui	a5,0x20400
204060b8:	7e478793          	addi	a5,a5,2020 # 204007e4 <pll_configs>
204060bc:	97ba                	add	a5,a5,a4
204060be:	863e                	mv	a2,a5
204060c0:	fd442583          	lw	a1,-44(s0)
204060c4:	fd842503          	lw	a0,-40(s0)
204060c8:	d27ff0ef          	jal	ra,20405dee <configure_pll>
204060cc:	a811                	j	204060e0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204060ce:	fd842783          	lw	a5,-40(s0)
204060d2:	4398                	lw	a4,0(a5)
204060d4:	000407b7          	lui	a5,0x40
204060d8:	8f5d                	or	a4,a4,a5
204060da:	fd842783          	lw	a5,-40(s0)
204060de:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204060e0:	fd842783          	lw	a5,-40(s0)
204060e4:	4398                	lw	a4,0(a5)
204060e6:	67c1                	lui	a5,0x10
204060e8:	8f5d                	or	a4,a4,a5
204060ea:	fd842783          	lw	a5,-40(s0)
204060ee:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
204060f0:	fbc42503          	lw	a0,-68(s0)
204060f4:	adfff0ef          	jal	ra,20405bd2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
204060f8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
204060fa:	853e                	mv	a0,a5
204060fc:	40b6                	lw	ra,76(sp)
204060fe:	4426                	lw	s0,72(sp)
20406100:	6161                	addi	sp,sp,80
20406102:	8082                	ret

20406104 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1159
{
20406104:	1141                	addi	sp,sp,-16
20406106:	c622                	sw	s0,12(sp)
20406108:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040610a:	100087b7          	lui	a5,0x10008
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1161
}
2040610e:	853e                	mv	a0,a5
20406110:	4432                	lw	s0,12(sp)
20406112:	0141                	addi	sp,sp,16
20406114:	8082                	ret

20406116 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20406116:	7179                	addi	sp,sp,-48
20406118:	d606                	sw	ra,44(sp)
2040611a:	d422                	sw	s0,40(sp)
2040611c:	1800                	addi	s0,sp,48
2040611e:	fca42e23          	sw	a0,-36(s0)
20406122:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406126:	3ff9                	jal	20406104 <__metal_driver_sifive_fe310_g000_prci_base>
20406128:	87aa                	mv	a5,a0
2040612a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
2040612e:	fd842703          	lw	a4,-40(s0)
20406132:	fec42783          	lw	a5,-20(s0)
20406136:	97ba                	add	a5,a5,a4
20406138:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2040613a:	853e                	mv	a0,a5
2040613c:	50b2                	lw	ra,44(sp)
2040613e:	5422                	lw	s0,40(sp)
20406140:	6145                	addi	sp,sp,48
20406142:	8082                	ret

20406144 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20406144:	7179                	addi	sp,sp,-48
20406146:	d606                	sw	ra,44(sp)
20406148:	d422                	sw	s0,40(sp)
2040614a:	1800                	addi	s0,sp,48
2040614c:	fca42e23          	sw	a0,-36(s0)
20406150:	fcb42c23          	sw	a1,-40(s0)
20406154:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406158:	3775                	jal	20406104 <__metal_driver_sifive_fe310_g000_prci_base>
2040615a:	87aa                	mv	a5,a0
2040615c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20406160:	fd842703          	lw	a4,-40(s0)
20406164:	fec42783          	lw	a5,-20(s0)
20406168:	97ba                	add	a5,a5,a4
2040616a:	873e                	mv	a4,a5
2040616c:	fd442783          	lw	a5,-44(s0)
20406170:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20406172:	853e                	mv	a0,a5
20406174:	50b2                	lw	ra,44(sp)
20406176:	5422                	lw	s0,40(sp)
20406178:	6145                	addi	sp,sp,48
2040617a:	8082                	ret

2040617c <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:474
{
2040617c:	1101                	addi	sp,sp,-32
2040617e:	ce22                	sw	s0,28(sp)
20406180:	1000                	addi	s0,sp,32
20406182:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406186:	fec42703          	lw	a4,-20(s0)
2040618a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040618e:	00f71563          	bne	a4,a5,20406198 <__metal_driver_sifive_gpio0_base+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20406192:	100127b7          	lui	a5,0x10012
20406196:	a011                	j	2040619a <__metal_driver_sifive_gpio0_base+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:479
		return 0;
20406198:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:481
}
2040619a:	853e                	mv	a0,a5
2040619c:	4472                	lw	s0,28(sp)
2040619e:	6105                	addi	sp,sp,32
204061a0:	8082                	ret

204061a2 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:504
{
204061a2:	1101                	addi	sp,sp,-32
204061a4:	ce22                	sw	s0,28(sp)
204061a6:	1000                	addi	s0,sp,32
204061a8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204061ac:	fec42703          	lw	a4,-20(s0)
204061b0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061b4:	00f71763          	bne	a4,a5,204061c2 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204061b8:	800007b7          	lui	a5,0x80000
204061bc:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffef88>
204061c0:	a011                	j	204061c4 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:509
		return 0;
204061c2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:511
}
204061c4:	853e                	mv	a0,a5
204061c6:	4472                	lw	s0,28(sp)
204061c8:	6105                	addi	sp,sp,32
204061ca:	8082                	ret

204061cc <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:514
{
204061cc:	1101                	addi	sp,sp,-32
204061ce:	ce22                	sw	s0,28(sp)
204061d0:	1000                	addi	s0,sp,32
204061d2:	fea42623          	sw	a0,-20(s0)
204061d6:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
204061da:	fec42703          	lw	a4,-20(s0)
204061de:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061e2:	00f71763          	bne	a4,a5,204061f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:515 (discriminator 1)
204061e6:	fe842783          	lw	a5,-24(s0)
204061ea:	e399                	bnez	a5,204061f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:516
		return 7;
204061ec:	479d                	li	a5,7
204061ee:	a269                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
204061f0:	fec42703          	lw	a4,-20(s0)
204061f4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061f8:	00f71963          	bne	a4,a5,2040620a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:518 (discriminator 1)
204061fc:	fe842703          	lw	a4,-24(s0)
20406200:	4785                	li	a5,1
20406202:	00f71463          	bne	a4,a5,2040620a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:519
		return 8;
20406206:	47a1                	li	a5,8
20406208:	aa85                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2040620a:	fec42703          	lw	a4,-20(s0)
2040620e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406212:	00f71963          	bne	a4,a5,20406224 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:521 (discriminator 1)
20406216:	fe842703          	lw	a4,-24(s0)
2040621a:	4789                	li	a5,2
2040621c:	00f71463          	bne	a4,a5,20406224 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:522
		return 9;
20406220:	47a5                	li	a5,9
20406222:	aa99                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20406224:	fec42703          	lw	a4,-20(s0)
20406228:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040622c:	00f71963          	bne	a4,a5,2040623e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:524 (discriminator 1)
20406230:	fe842703          	lw	a4,-24(s0)
20406234:	478d                	li	a5,3
20406236:	00f71463          	bne	a4,a5,2040623e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:525
		return 10;
2040623a:	47a9                	li	a5,10
2040623c:	aa35                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2040623e:	fec42703          	lw	a4,-20(s0)
20406242:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406246:	00f71963          	bne	a4,a5,20406258 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:527 (discriminator 1)
2040624a:	fe842703          	lw	a4,-24(s0)
2040624e:	4791                	li	a5,4
20406250:	00f71463          	bne	a4,a5,20406258 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:528
		return 11;
20406254:	47ad                	li	a5,11
20406256:	a20d                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20406258:	fec42703          	lw	a4,-20(s0)
2040625c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406260:	00f71963          	bne	a4,a5,20406272 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:530 (discriminator 1)
20406264:	fe842703          	lw	a4,-24(s0)
20406268:	4795                	li	a5,5
2040626a:	00f71463          	bne	a4,a5,20406272 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:531
		return 12;
2040626e:	47b1                	li	a5,12
20406270:	a221                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20406272:	fec42703          	lw	a4,-20(s0)
20406276:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040627a:	00f71963          	bne	a4,a5,2040628c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:533 (discriminator 1)
2040627e:	fe842703          	lw	a4,-24(s0)
20406282:	4799                	li	a5,6
20406284:	00f71463          	bne	a4,a5,2040628c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:534
		return 13;
20406288:	47b5                	li	a5,13
2040628a:	a0fd                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
2040628c:	fec42703          	lw	a4,-20(s0)
20406290:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406294:	00f71963          	bne	a4,a5,204062a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:536 (discriminator 1)
20406298:	fe842703          	lw	a4,-24(s0)
2040629c:	479d                	li	a5,7
2040629e:	00f71463          	bne	a4,a5,204062a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:537
		return 14;
204062a2:	47b9                	li	a5,14
204062a4:	a8d1                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204062a6:	fec42703          	lw	a4,-20(s0)
204062aa:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062ae:	00f71963          	bne	a4,a5,204062c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:539 (discriminator 1)
204062b2:	fe842703          	lw	a4,-24(s0)
204062b6:	47a1                	li	a5,8
204062b8:	00f71463          	bne	a4,a5,204062c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:540
		return 15;
204062bc:	47bd                	li	a5,15
204062be:	a86d                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204062c0:	fec42703          	lw	a4,-20(s0)
204062c4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062c8:	00f71963          	bne	a4,a5,204062da <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:542 (discriminator 1)
204062cc:	fe842703          	lw	a4,-24(s0)
204062d0:	47a5                	li	a5,9
204062d2:	00f71463          	bne	a4,a5,204062da <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:543
		return 16;
204062d6:	47c1                	li	a5,16
204062d8:	a045                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
204062da:	fec42703          	lw	a4,-20(s0)
204062de:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062e2:	00f71963          	bne	a4,a5,204062f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:545 (discriminator 1)
204062e6:	fe842703          	lw	a4,-24(s0)
204062ea:	47a9                	li	a5,10
204062ec:	00f71463          	bne	a4,a5,204062f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:546
		return 17;
204062f0:	47c5                	li	a5,17
204062f2:	a059                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
204062f4:	fec42703          	lw	a4,-20(s0)
204062f8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062fc:	00f71963          	bne	a4,a5,2040630e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:548 (discriminator 1)
20406300:	fe842703          	lw	a4,-24(s0)
20406304:	47ad                	li	a5,11
20406306:	00f71463          	bne	a4,a5,2040630e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:549
		return 18;
2040630a:	47c9                	li	a5,18
2040630c:	a0b5                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2040630e:	fec42703          	lw	a4,-20(s0)
20406312:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406316:	00f71963          	bne	a4,a5,20406328 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:551 (discriminator 1)
2040631a:	fe842703          	lw	a4,-24(s0)
2040631e:	47b1                	li	a5,12
20406320:	00f71463          	bne	a4,a5,20406328 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:552
		return 19;
20406324:	47cd                	li	a5,19
20406326:	a889                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20406328:	fec42703          	lw	a4,-20(s0)
2040632c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406330:	00f71963          	bne	a4,a5,20406342 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:554 (discriminator 1)
20406334:	fe842703          	lw	a4,-24(s0)
20406338:	47b5                	li	a5,13
2040633a:	00f71463          	bne	a4,a5,20406342 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:555
		return 20;
2040633e:	47d1                	li	a5,20
20406340:	a825                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20406342:	fec42703          	lw	a4,-20(s0)
20406346:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040634a:	00f71963          	bne	a4,a5,2040635c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:557 (discriminator 1)
2040634e:	fe842703          	lw	a4,-24(s0)
20406352:	47b9                	li	a5,14
20406354:	00f71463          	bne	a4,a5,2040635c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:558
		return 21;
20406358:	47d5                	li	a5,21
2040635a:	a839                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2040635c:	fec42703          	lw	a4,-20(s0)
20406360:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406364:	00f71963          	bne	a4,a5,20406376 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:560 (discriminator 1)
20406368:	fe842703          	lw	a4,-24(s0)
2040636c:	47bd                	li	a5,15
2040636e:	00f71463          	bne	a4,a5,20406376 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:561
		return 22;
20406372:	47d9                	li	a5,22
20406374:	a011                	j	20406378 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:564
		return 0;
20406376:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:566
}
20406378:	853e                	mv	a0,a5
2040637a:	4472                	lw	s0,28(sp)
2040637c:	6105                	addi	sp,sp,32
2040637e:	8082                	ret

20406380 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406380:	7179                	addi	sp,sp,-48
20406382:	d606                	sw	ra,44(sp)
20406384:	d422                	sw	s0,40(sp)
20406386:	1800                	addi	s0,sp,48
20406388:	fca42e23          	sw	a0,-36(s0)
2040638c:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406390:	fdc42503          	lw	a0,-36(s0)
20406394:	de9ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406398:	87aa                	mv	a5,a0
2040639a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2040639e:	fec42783          	lw	a5,-20(s0)
204063a2:	0791                	addi	a5,a5,4
204063a4:	4398                	lw	a4,0(a5)
204063a6:	fd842783          	lw	a5,-40(s0)
204063aa:	fec42683          	lw	a3,-20(s0)
204063ae:	0691                	addi	a3,a3,4
204063b0:	8fd9                	or	a5,a5,a4
204063b2:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204063b4:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204063b6:	853e                	mv	a0,a5
204063b8:	50b2                	lw	ra,44(sp)
204063ba:	5422                	lw	s0,40(sp)
204063bc:	6145                	addi	sp,sp,48
204063be:	8082                	ret

204063c0 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204063c0:	7179                	addi	sp,sp,-48
204063c2:	d606                	sw	ra,44(sp)
204063c4:	d422                	sw	s0,40(sp)
204063c6:	1800                	addi	s0,sp,48
204063c8:	fca42e23          	sw	a0,-36(s0)
204063cc:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204063d0:	fdc42503          	lw	a0,-36(s0)
204063d4:	da9ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
204063d8:	87aa                	mv	a5,a0
204063da:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
204063de:	fec42783          	lw	a5,-20(s0)
204063e2:	0791                	addi	a5,a5,4
204063e4:	439c                	lw	a5,0(a5)
204063e6:	fd842703          	lw	a4,-40(s0)
204063ea:	fff74713          	not	a4,a4
204063ee:	86ba                	mv	a3,a4
204063f0:	fec42703          	lw	a4,-20(s0)
204063f4:	0711                	addi	a4,a4,4
204063f6:	8ff5                	and	a5,a5,a3
204063f8:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
204063fa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:30
}
204063fc:	853e                	mv	a0,a5
204063fe:	50b2                	lw	ra,44(sp)
20406400:	5422                	lw	s0,40(sp)
20406402:	6145                	addi	sp,sp,48
20406404:	8082                	ret

20406406 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406406:	7179                	addi	sp,sp,-48
20406408:	d606                	sw	ra,44(sp)
2040640a:	d422                	sw	s0,40(sp)
2040640c:	1800                	addi	s0,sp,48
2040640e:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406412:	fdc42503          	lw	a0,-36(s0)
20406416:	d67ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
2040641a:	87aa                	mv	a5,a0
2040641c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20406420:	fec42783          	lw	a5,-20(s0)
20406424:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20406426:	853e                	mv	a0,a5
20406428:	50b2                	lw	ra,44(sp)
2040642a:	5422                	lw	s0,40(sp)
2040642c:	6145                	addi	sp,sp,48
2040642e:	8082                	ret

20406430 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20406430:	7179                	addi	sp,sp,-48
20406432:	d606                	sw	ra,44(sp)
20406434:	d422                	sw	s0,40(sp)
20406436:	1800                	addi	s0,sp,48
20406438:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040643c:	fdc42503          	lw	a0,-36(s0)
20406440:	d3dff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406444:	87aa                	mv	a5,a0
20406446:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2040644a:	fec42783          	lw	a5,-20(s0)
2040644e:	07b1                	addi	a5,a5,12
20406450:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20406452:	853e                	mv	a0,a5
20406454:	50b2                	lw	ra,44(sp)
20406456:	5422                	lw	s0,40(sp)
20406458:	6145                	addi	sp,sp,48
2040645a:	8082                	ret

2040645c <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
2040645c:	7179                	addi	sp,sp,-48
2040645e:	d606                	sw	ra,44(sp)
20406460:	d422                	sw	s0,40(sp)
20406462:	1800                	addi	s0,sp,48
20406464:	fca42e23          	sw	a0,-36(s0)
20406468:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040646c:	fdc42503          	lw	a0,-36(s0)
20406470:	d0dff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406474:	87aa                	mv	a5,a0
20406476:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2040647a:	fec42783          	lw	a5,-20(s0)
2040647e:	07a1                	addi	a5,a5,8
20406480:	439c                	lw	a5,0(a5)
20406482:	fd842703          	lw	a4,-40(s0)
20406486:	fff74713          	not	a4,a4
2040648a:	86ba                	mv	a3,a4
2040648c:	fec42703          	lw	a4,-20(s0)
20406490:	0721                	addi	a4,a4,8
20406492:	8ff5                	and	a5,a5,a3
20406494:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406496:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406498:	853e                	mv	a0,a5
2040649a:	50b2                	lw	ra,44(sp)
2040649c:	5422                	lw	s0,40(sp)
2040649e:	6145                	addi	sp,sp,48
204064a0:	8082                	ret

204064a2 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
204064a2:	7179                	addi	sp,sp,-48
204064a4:	d606                	sw	ra,44(sp)
204064a6:	d422                	sw	s0,40(sp)
204064a8:	1800                	addi	s0,sp,48
204064aa:	fca42e23          	sw	a0,-36(s0)
204064ae:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204064b2:	fdc42503          	lw	a0,-36(s0)
204064b6:	cc7ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
204064ba:	87aa                	mv	a5,a0
204064bc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204064c0:	fec42783          	lw	a5,-20(s0)
204064c4:	07a1                	addi	a5,a5,8
204064c6:	4398                	lw	a4,0(a5)
204064c8:	fd842783          	lw	a5,-40(s0)
204064cc:	fec42683          	lw	a3,-20(s0)
204064d0:	06a1                	addi	a3,a3,8
204064d2:	8fd9                	or	a5,a5,a4
204064d4:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
204064d6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:64
}
204064d8:	853e                	mv	a0,a5
204064da:	50b2                	lw	ra,44(sp)
204064dc:	5422                	lw	s0,40(sp)
204064de:	6145                	addi	sp,sp,48
204064e0:	8082                	ret

204064e2 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
204064e2:	7179                	addi	sp,sp,-48
204064e4:	d606                	sw	ra,44(sp)
204064e6:	d422                	sw	s0,40(sp)
204064e8:	1800                	addi	s0,sp,48
204064ea:	fca42e23          	sw	a0,-36(s0)
204064ee:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204064f2:	fdc42503          	lw	a0,-36(s0)
204064f6:	c87ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
204064fa:	87aa                	mv	a5,a0
204064fc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406500:	fec42783          	lw	a5,-20(s0)
20406504:	07b1                	addi	a5,a5,12
20406506:	4398                	lw	a4,0(a5)
20406508:	fd842783          	lw	a5,-40(s0)
2040650c:	fec42683          	lw	a3,-20(s0)
20406510:	06b1                	addi	a3,a3,12
20406512:	8fd9                	or	a5,a5,a4
20406514:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406516:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406518:	853e                	mv	a0,a5
2040651a:	50b2                	lw	ra,44(sp)
2040651c:	5422                	lw	s0,40(sp)
2040651e:	6145                	addi	sp,sp,48
20406520:	8082                	ret

20406522 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20406522:	7179                	addi	sp,sp,-48
20406524:	d606                	sw	ra,44(sp)
20406526:	d422                	sw	s0,40(sp)
20406528:	1800                	addi	s0,sp,48
2040652a:	fca42e23          	sw	a0,-36(s0)
2040652e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406532:	fdc42503          	lw	a0,-36(s0)
20406536:	c47ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
2040653a:	87aa                	mv	a5,a0
2040653c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406540:	fec42783          	lw	a5,-20(s0)
20406544:	07b1                	addi	a5,a5,12
20406546:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406548:	fd842703          	lw	a4,-40(s0)
2040654c:	fff74713          	not	a4,a4
20406550:	86ba                	mv	a3,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406552:	fec42703          	lw	a4,-20(s0)
20406556:	0731                	addi	a4,a4,12
20406558:	8ff5                	and	a5,a5,a3
2040655a:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
2040655c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:84
}
2040655e:	853e                	mv	a0,a5
20406560:	50b2                	lw	ra,44(sp)
20406562:	5422                	lw	s0,40(sp)
20406564:	6145                	addi	sp,sp,48
20406566:	8082                	ret

20406568 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406568:	7179                	addi	sp,sp,-48
2040656a:	d606                	sw	ra,44(sp)
2040656c:	d422                	sw	s0,40(sp)
2040656e:	1800                	addi	s0,sp,48
20406570:	fca42e23          	sw	a0,-36(s0)
20406574:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406578:	fdc42503          	lw	a0,-36(s0)
2040657c:	c01ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406580:	87aa                	mv	a5,a0
20406582:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406586:	fec42783          	lw	a5,-20(s0)
2040658a:	07b1                	addi	a5,a5,12
2040658c:	4398                	lw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2040658e:	fd842783          	lw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406592:	fec42683          	lw	a3,-20(s0)
20406596:	06b1                	addi	a3,a3,12
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406598:	8fb9                	xor	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040659a:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2040659c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2040659e:	853e                	mv	a0,a5
204065a0:	50b2                	lw	ra,44(sp)
204065a2:	5422                	lw	s0,40(sp)
204065a4:	6145                	addi	sp,sp,48
204065a6:	8082                	ret

204065a8 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204065a8:	7179                	addi	sp,sp,-48
204065aa:	d606                	sw	ra,44(sp)
204065ac:	d422                	sw	s0,40(sp)
204065ae:	1800                	addi	s0,sp,48
204065b0:	fca42e23          	sw	a0,-36(s0)
204065b4:	fcb42c23          	sw	a1,-40(s0)
204065b8:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204065bc:	fdc42503          	lw	a0,-36(s0)
204065c0:	bbdff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
204065c4:	87aa                	mv	a5,a0
204065c6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204065ca:	fec42783          	lw	a5,-20(s0)
204065ce:	03c78793          	addi	a5,a5,60
204065d2:	4398                	lw	a4,0(a5)
204065d4:	fd842783          	lw	a5,-40(s0)
204065d8:	fec42683          	lw	a3,-20(s0)
204065dc:	03c68693          	addi	a3,a3,60
204065e0:	8fd9                	or	a5,a5,a4
204065e2:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
204065e4:	fec42783          	lw	a5,-20(s0)
204065e8:	03878793          	addi	a5,a5,56
204065ec:	4398                	lw	a4,0(a5)
204065ee:	fd442783          	lw	a5,-44(s0)
204065f2:	fec42683          	lw	a3,-20(s0)
204065f6:	03868693          	addi	a3,a3,56
204065fa:	8fd9                	or	a5,a5,a4
204065fc:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
204065fe:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406600:	853e                	mv	a0,a5
20406602:	50b2                	lw	ra,44(sp)
20406604:	5422                	lw	s0,40(sp)
20406606:	6145                	addi	sp,sp,48
20406608:	8082                	ret

2040660a <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2040660a:	7179                	addi	sp,sp,-48
2040660c:	d606                	sw	ra,44(sp)
2040660e:	d422                	sw	s0,40(sp)
20406610:	1800                	addi	s0,sp,48
20406612:	fca42e23          	sw	a0,-36(s0)
20406616:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040661a:	fdc42503          	lw	a0,-36(s0)
2040661e:	b5fff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406622:	87aa                	mv	a5,a0
20406624:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406628:	fec42783          	lw	a5,-20(s0)
2040662c:	03878793          	addi	a5,a5,56
20406630:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20406632:	fd842703          	lw	a4,-40(s0)
20406636:	fff74713          	not	a4,a4
2040663a:	86ba                	mv	a3,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2040663c:	fec42703          	lw	a4,-20(s0)
20406640:	03870713          	addi	a4,a4,56
20406644:	8ff5                	and	a5,a5,a3
20406646:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406648:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2040664a:	853e                	mv	a0,a5
2040664c:	50b2                	lw	ra,44(sp)
2040664e:	5422                	lw	s0,40(sp)
20406650:	6145                	addi	sp,sp,48
20406652:	8082                	ret

20406654 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406654:	7179                	addi	sp,sp,-48
20406656:	d606                	sw	ra,44(sp)
20406658:	d422                	sw	s0,40(sp)
2040665a:	1800                	addi	s0,sp,48
2040665c:	fca42e23          	sw	a0,-36(s0)
20406660:	fcb42c23          	sw	a1,-40(s0)
20406664:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406668:	fdc42503          	lw	a0,-36(s0)
2040666c:	b11ff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406670:	87aa                	mv	a5,a0
20406672:	fef42623          	sw	a5,-20(s0)
20406676:	fd442703          	lw	a4,-44(s0)
2040667a:	479d                	li	a5,7
2040667c:	1ce7e963          	bltu	a5,a4,2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406680:	fd442783          	lw	a5,-44(s0)
20406684:	00279713          	slli	a4,a5,0x2
20406688:	204017b7          	lui	a5,0x20401
2040668c:	07078793          	addi	a5,a5,112 # 20401070 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406690:	97ba                	add	a5,a5,a4
20406692:	439c                	lw	a5,0(a5)
20406694:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406696:	fec42783          	lw	a5,-20(s0)
2040669a:	07e1                	addi	a5,a5,24
2040669c:	439c                	lw	a5,0(a5)
2040669e:	fd842703          	lw	a4,-40(s0)
204066a2:	fff74713          	not	a4,a4
204066a6:	86ba                	mv	a3,a4
204066a8:	fec42703          	lw	a4,-20(s0)
204066ac:	0761                	addi	a4,a4,24
204066ae:	8ff5                	and	a5,a5,a3
204066b0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204066b2:	fec42783          	lw	a5,-20(s0)
204066b6:	02078793          	addi	a5,a5,32
204066ba:	439c                	lw	a5,0(a5)
204066bc:	fd842703          	lw	a4,-40(s0)
204066c0:	fff74713          	not	a4,a4
204066c4:	86ba                	mv	a3,a4
204066c6:	fec42703          	lw	a4,-20(s0)
204066ca:	02070713          	addi	a4,a4,32
204066ce:	8ff5                	and	a5,a5,a3
204066d0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204066d2:	fec42783          	lw	a5,-20(s0)
204066d6:	02878793          	addi	a5,a5,40
204066da:	439c                	lw	a5,0(a5)
204066dc:	fd842703          	lw	a4,-40(s0)
204066e0:	fff74713          	not	a4,a4
204066e4:	86ba                	mv	a3,a4
204066e6:	fec42703          	lw	a4,-20(s0)
204066ea:	02870713          	addi	a4,a4,40
204066ee:	8ff5                	and	a5,a5,a3
204066f0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
204066f2:	fec42783          	lw	a5,-20(s0)
204066f6:	03078793          	addi	a5,a5,48
204066fa:	439c                	lw	a5,0(a5)
204066fc:	fd842703          	lw	a4,-40(s0)
20406700:	fff74713          	not	a4,a4
20406704:	86ba                	mv	a3,a4
20406706:	fec42703          	lw	a4,-20(s0)
2040670a:	03070713          	addi	a4,a4,48
2040670e:	8ff5                	and	a5,a5,a3
20406710:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406712:	aa35                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406714:	fec42783          	lw	a5,-20(s0)
20406718:	07e1                	addi	a5,a5,24
2040671a:	4398                	lw	a4,0(a5)
2040671c:	fd842783          	lw	a5,-40(s0)
20406720:	fec42683          	lw	a3,-20(s0)
20406724:	06e1                	addi	a3,a3,24
20406726:	8fd9                	or	a5,a5,a4
20406728:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2040672a:	a215                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040672c:	fec42783          	lw	a5,-20(s0)
20406730:	02078793          	addi	a5,a5,32
20406734:	4398                	lw	a4,0(a5)
20406736:	fd842783          	lw	a5,-40(s0)
2040673a:	fec42683          	lw	a3,-20(s0)
2040673e:	02068693          	addi	a3,a3,32
20406742:	8fd9                	or	a5,a5,a4
20406744:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406746:	a221                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406748:	fec42783          	lw	a5,-20(s0)
2040674c:	07e1                	addi	a5,a5,24
2040674e:	4398                	lw	a4,0(a5)
20406750:	fd842783          	lw	a5,-40(s0)
20406754:	fec42683          	lw	a3,-20(s0)
20406758:	06e1                	addi	a3,a3,24
2040675a:	8fd9                	or	a5,a5,a4
2040675c:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040675e:	fec42783          	lw	a5,-20(s0)
20406762:	02078793          	addi	a5,a5,32
20406766:	4398                	lw	a4,0(a5)
20406768:	fd842783          	lw	a5,-40(s0)
2040676c:	fec42683          	lw	a3,-20(s0)
20406770:	02068693          	addi	a3,a3,32
20406774:	8fd9                	or	a5,a5,a4
20406776:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406778:	a8d9                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040677a:	fec42783          	lw	a5,-20(s0)
2040677e:	02878793          	addi	a5,a5,40
20406782:	4398                	lw	a4,0(a5)
20406784:	fd842783          	lw	a5,-40(s0)
20406788:	fec42683          	lw	a3,-20(s0)
2040678c:	02868693          	addi	a3,a3,40
20406790:	8fd9                	or	a5,a5,a4
20406792:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406794:	a86d                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406796:	fec42783          	lw	a5,-20(s0)
2040679a:	03078793          	addi	a5,a5,48
2040679e:	4398                	lw	a4,0(a5)
204067a0:	fd842783          	lw	a5,-40(s0)
204067a4:	fec42683          	lw	a3,-20(s0)
204067a8:	03068693          	addi	a3,a3,48
204067ac:	8fd9                	or	a5,a5,a4
204067ae:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204067b0:	a879                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204067b2:	fec42783          	lw	a5,-20(s0)
204067b6:	02878793          	addi	a5,a5,40
204067ba:	4398                	lw	a4,0(a5)
204067bc:	fd842783          	lw	a5,-40(s0)
204067c0:	fec42683          	lw	a3,-20(s0)
204067c4:	02868693          	addi	a3,a3,40
204067c8:	8fd9                	or	a5,a5,a4
204067ca:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204067cc:	fec42783          	lw	a5,-20(s0)
204067d0:	03078793          	addi	a5,a5,48
204067d4:	4398                	lw	a4,0(a5)
204067d6:	fd842783          	lw	a5,-40(s0)
204067da:	fec42683          	lw	a3,-20(s0)
204067de:	03068693          	addi	a3,a3,48
204067e2:	8fd9                	or	a5,a5,a4
204067e4:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
204067e6:	a0a5                	j	2040684e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204067e8:	fec42783          	lw	a5,-20(s0)
204067ec:	07e1                	addi	a5,a5,24
204067ee:	4398                	lw	a4,0(a5)
204067f0:	fd842783          	lw	a5,-40(s0)
204067f4:	fec42683          	lw	a3,-20(s0)
204067f8:	06e1                	addi	a3,a3,24
204067fa:	8fd9                	or	a5,a5,a4
204067fc:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204067fe:	fec42783          	lw	a5,-20(s0)
20406802:	02078793          	addi	a5,a5,32
20406806:	4398                	lw	a4,0(a5)
20406808:	fd842783          	lw	a5,-40(s0)
2040680c:	fec42683          	lw	a3,-20(s0)
20406810:	02068693          	addi	a3,a3,32
20406814:	8fd9                	or	a5,a5,a4
20406816:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406818:	fec42783          	lw	a5,-20(s0)
2040681c:	02878793          	addi	a5,a5,40
20406820:	4398                	lw	a4,0(a5)
20406822:	fd842783          	lw	a5,-40(s0)
20406826:	fec42683          	lw	a3,-20(s0)
2040682a:	02868693          	addi	a3,a3,40
2040682e:	8fd9                	or	a5,a5,a4
20406830:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406832:	fec42783          	lw	a5,-20(s0)
20406836:	03078793          	addi	a5,a5,48
2040683a:	4398                	lw	a4,0(a5)
2040683c:	fd842783          	lw	a5,-40(s0)
20406840:	fec42683          	lw	a3,-20(s0)
20406844:	03068693          	addi	a3,a3,48
20406848:	8fd9                	or	a5,a5,a4
2040684a:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2040684c:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2040684e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406850:	853e                	mv	a0,a5
20406852:	50b2                	lw	ra,44(sp)
20406854:	5422                	lw	s0,40(sp)
20406856:	6145                	addi	sp,sp,48
20406858:	8082                	ret

2040685a <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2040685a:	7179                	addi	sp,sp,-48
2040685c:	d606                	sw	ra,44(sp)
2040685e:	d422                	sw	s0,40(sp)
20406860:	1800                	addi	s0,sp,48
20406862:	fca42e23          	sw	a0,-36(s0)
20406866:	fcb42c23          	sw	a1,-40(s0)
2040686a:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040686e:	fdc42503          	lw	a0,-36(s0)
20406872:	90bff0ef          	jal	ra,2040617c <__metal_driver_sifive_gpio0_base>
20406876:	87aa                	mv	a5,a0
20406878:	fef42623          	sw	a5,-20(s0)
2040687c:	fd442703          	lw	a4,-44(s0)
20406880:	479d                	li	a5,7
20406882:	14e7ea63          	bltu	a5,a4,204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406886:	fd442783          	lw	a5,-44(s0)
2040688a:	00279713          	slli	a4,a5,0x2
2040688e:	204017b7          	lui	a5,0x20401
20406892:	09078793          	addi	a5,a5,144 # 20401090 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406896:	97ba                	add	a5,a5,a4
20406898:	439c                	lw	a5,0(a5)
2040689a:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2040689c:	fec42783          	lw	a5,-20(s0)
204068a0:	07f1                	addi	a5,a5,28
204068a2:	4398                	lw	a4,0(a5)
204068a4:	fd842783          	lw	a5,-40(s0)
204068a8:	fec42683          	lw	a3,-20(s0)
204068ac:	06f1                	addi	a3,a3,28
204068ae:	8fd9                	or	a5,a5,a4
204068b0:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204068b2:	a215                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204068b4:	fec42783          	lw	a5,-20(s0)
204068b8:	02478793          	addi	a5,a5,36
204068bc:	4398                	lw	a4,0(a5)
204068be:	fd842783          	lw	a5,-40(s0)
204068c2:	fec42683          	lw	a3,-20(s0)
204068c6:	02468693          	addi	a3,a3,36
204068ca:	8fd9                	or	a5,a5,a4
204068cc:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
204068ce:	a221                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204068d0:	fec42783          	lw	a5,-20(s0)
204068d4:	07f1                	addi	a5,a5,28
204068d6:	4398                	lw	a4,0(a5)
204068d8:	fd842783          	lw	a5,-40(s0)
204068dc:	fec42683          	lw	a3,-20(s0)
204068e0:	06f1                	addi	a3,a3,28
204068e2:	8fd9                	or	a5,a5,a4
204068e4:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204068e6:	fec42783          	lw	a5,-20(s0)
204068ea:	02478793          	addi	a5,a5,36
204068ee:	4398                	lw	a4,0(a5)
204068f0:	fd842783          	lw	a5,-40(s0)
204068f4:	fec42683          	lw	a3,-20(s0)
204068f8:	02468693          	addi	a3,a3,36
204068fc:	8fd9                	or	a5,a5,a4
204068fe:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406900:	a8d9                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406902:	fec42783          	lw	a5,-20(s0)
20406906:	02c78793          	addi	a5,a5,44
2040690a:	4398                	lw	a4,0(a5)
2040690c:	fd842783          	lw	a5,-40(s0)
20406910:	fec42683          	lw	a3,-20(s0)
20406914:	02c68693          	addi	a3,a3,44
20406918:	8fd9                	or	a5,a5,a4
2040691a:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2040691c:	a86d                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2040691e:	fec42783          	lw	a5,-20(s0)
20406922:	03478793          	addi	a5,a5,52
20406926:	4398                	lw	a4,0(a5)
20406928:	fd842783          	lw	a5,-40(s0)
2040692c:	fec42683          	lw	a3,-20(s0)
20406930:	03468693          	addi	a3,a3,52
20406934:	8fd9                	or	a5,a5,a4
20406936:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406938:	a879                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2040693a:	fec42783          	lw	a5,-20(s0)
2040693e:	02c78793          	addi	a5,a5,44
20406942:	4398                	lw	a4,0(a5)
20406944:	fd842783          	lw	a5,-40(s0)
20406948:	fec42683          	lw	a3,-20(s0)
2040694c:	02c68693          	addi	a3,a3,44
20406950:	8fd9                	or	a5,a5,a4
20406952:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406954:	fec42783          	lw	a5,-20(s0)
20406958:	03478793          	addi	a5,a5,52
2040695c:	4398                	lw	a4,0(a5)
2040695e:	fd842783          	lw	a5,-40(s0)
20406962:	fec42683          	lw	a3,-20(s0)
20406966:	03468693          	addi	a3,a3,52
2040696a:	8fd9                	or	a5,a5,a4
2040696c:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2040696e:	a0a5                	j	204069d6 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406970:	fec42783          	lw	a5,-20(s0)
20406974:	07f1                	addi	a5,a5,28
20406976:	4398                	lw	a4,0(a5)
20406978:	fd842783          	lw	a5,-40(s0)
2040697c:	fec42683          	lw	a3,-20(s0)
20406980:	06f1                	addi	a3,a3,28
20406982:	8fd9                	or	a5,a5,a4
20406984:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406986:	fec42783          	lw	a5,-20(s0)
2040698a:	02478793          	addi	a5,a5,36
2040698e:	4398                	lw	a4,0(a5)
20406990:	fd842783          	lw	a5,-40(s0)
20406994:	fec42683          	lw	a3,-20(s0)
20406998:	02468693          	addi	a3,a3,36
2040699c:	8fd9                	or	a5,a5,a4
2040699e:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
204069a0:	fec42783          	lw	a5,-20(s0)
204069a4:	02c78793          	addi	a5,a5,44
204069a8:	4398                	lw	a4,0(a5)
204069aa:	fd842783          	lw	a5,-40(s0)
204069ae:	fec42683          	lw	a3,-20(s0)
204069b2:	02c68693          	addi	a3,a3,44
204069b6:	8fd9                	or	a5,a5,a4
204069b8:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204069ba:	fec42783          	lw	a5,-20(s0)
204069be:	03478793          	addi	a5,a5,52
204069c2:	4398                	lw	a4,0(a5)
204069c4:	fd842783          	lw	a5,-40(s0)
204069c8:	fec42683          	lw	a3,-20(s0)
204069cc:	03468693          	addi	a3,a3,52
204069d0:	8fd9                	or	a5,a5,a4
204069d2:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
204069d4:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
204069d6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:222
}
204069d8:	853e                	mv	a0,a5
204069da:	50b2                	lw	ra,44(sp)
204069dc:	5422                	lw	s0,40(sp)
204069de:	6145                	addi	sp,sp,48
204069e0:	8082                	ret

204069e2 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
204069e2:	1101                	addi	sp,sp,-32
204069e4:	ce06                	sw	ra,28(sp)
204069e6:	cc22                	sw	s0,24(sp)
204069e8:	1000                	addi	s0,sp,32
204069ea:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204069ee:	fec42503          	lw	a0,-20(s0)
204069f2:	fb0ff0ef          	jal	ra,204061a2 <__metal_driver_sifive_gpio0_interrupt_parent>
204069f6:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:227
}
204069f8:	853e                	mv	a0,a5
204069fa:	40f2                	lw	ra,28(sp)
204069fc:	4462                	lw	s0,24(sp)
204069fe:	6105                	addi	sp,sp,32
20406a00:	8082                	ret

20406a02 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406a02:	7179                	addi	sp,sp,-48
20406a04:	d606                	sw	ra,44(sp)
20406a06:	d422                	sw	s0,40(sp)
20406a08:	1800                	addi	s0,sp,48
20406a0a:	fca42e23          	sw	a0,-36(s0)
20406a0e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406a12:	fd842583          	lw	a1,-40(s0)
20406a16:	fdc42503          	lw	a0,-36(s0)
20406a1a:	fb2ff0ef          	jal	ra,204061cc <__metal_driver_sifive_gpio0_interrupt_lines>
20406a1e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406a22:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406a26:	853e                	mv	a0,a5
20406a28:	50b2                	lw	ra,44(sp)
20406a2a:	5422                	lw	s0,40(sp)
20406a2c:	6145                	addi	sp,sp,48
20406a2e:	8082                	ret

20406a30 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:863
{
20406a30:	1101                	addi	sp,sp,-32
20406a32:	ce22                	sw	s0,28(sp)
20406a34:	1000                	addi	s0,sp,32
20406a36:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406a3a:	fec42703          	lw	a4,-20(s0)
20406a3e:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406a42:	00f71563          	bne	a4,a5,20406a4c <__metal_driver_sifive_test0_base+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406a46:	001007b7          	lui	a5,0x100
20406a4a:	a011                	j	20406a4e <__metal_driver_sifive_test0_base+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:868
		return 0;
20406a4c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:870
}
20406a4e:	853e                	mv	a0,a5
20406a50:	4472                	lw	s0,28(sp)
20406a52:	6105                	addi	sp,sp,32
20406a54:	8082                	ret

20406a56 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406a56:	7179                	addi	sp,sp,-48
20406a58:	d606                	sw	ra,44(sp)
20406a5a:	d422                	sw	s0,40(sp)
20406a5c:	1800                	addi	s0,sp,48
20406a5e:	fca42e23          	sw	a0,-36(s0)
20406a62:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406a66:	fdc42503          	lw	a0,-36(s0)
20406a6a:	37d9                	jal	20406a30 <__metal_driver_sifive_test0_base>
20406a6c:	87aa                	mv	a5,a0
20406a6e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406a72:	fd842783          	lw	a5,-40(s0)
20406a76:	01079713          	slli	a4,a5,0x10
20406a7a:	fd842783          	lw	a5,-40(s0)
20406a7e:	e789                	bnez	a5,20406a88 <__metal_driver_sifive_test0_exit+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406a80:	6795                	lui	a5,0x5
20406a82:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406a86:	a021                	j	20406a8e <__metal_driver_sifive_test0_exit+0x38>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406a88:	678d                	lui	a5,0x3
20406a8a:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406a8e:	97ba                	add	a5,a5,a4
20406a90:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406a94:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406a98:	fe842703          	lw	a4,-24(s0)
20406a9c:	c398                	sw	a4,0(a5)
20406a9e:	bfdd                	j	20406a94 <__metal_driver_sifive_test0_exit+0x3e>

20406aa0 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:888
{
20406aa0:	1101                	addi	sp,sp,-32
20406aa2:	ce22                	sw	s0,28(sp)
20406aa4:	1000                	addi	s0,sp,32
20406aa6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406aaa:	fec42703          	lw	a4,-20(s0)
20406aae:	800007b7          	lui	a5,0x80000
20406ab2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406ab6:	00f71563          	bne	a4,a5,20406ac0 <__metal_driver_sifive_uart0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406aba:	100137b7          	lui	a5,0x10013
20406abe:	a011                	j	20406ac2 <__metal_driver_sifive_uart0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:893
		return 0;
20406ac0:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:895
}
20406ac2:	853e                	mv	a0,a5
20406ac4:	4472                	lw	s0,28(sp)
20406ac6:	6105                	addi	sp,sp,32
20406ac8:	8082                	ret

20406aca <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:918
{
20406aca:	1101                	addi	sp,sp,-32
20406acc:	ce22                	sw	s0,28(sp)
20406ace:	1000                	addi	s0,sp,32
20406ad0:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406ad4:	fec42703          	lw	a4,-20(s0)
20406ad8:	800007b7          	lui	a5,0x80000
20406adc:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406ae0:	00f71763          	bne	a4,a5,20406aee <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406ae4:	800007b7          	lui	a5,0x80000
20406ae8:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffef88>
20406aec:	a011                	j	20406af0 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:923
		return 0;
20406aee:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:925
}
20406af0:	853e                	mv	a0,a5
20406af2:	4472                	lw	s0,28(sp)
20406af4:	6105                	addi	sp,sp,32
20406af6:	8082                	ret

20406af8 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:928
{
20406af8:	1101                	addi	sp,sp,-32
20406afa:	ce22                	sw	s0,28(sp)
20406afc:	1000                	addi	s0,sp,32
20406afe:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b02:	fec42703          	lw	a4,-20(s0)
20406b06:	800007b7          	lui	a5,0x80000
20406b0a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406b0e:	00f71463          	bne	a4,a5,20406b16 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:930
		return 5;
20406b12:	4795                	li	a5,5
20406b14:	a011                	j	20406b18 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:933
		return 0;
20406b16:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:935
}
20406b18:	853e                	mv	a0,a5
20406b1a:	4472                	lw	s0,28(sp)
20406b1c:	6105                	addi	sp,sp,32
20406b1e:	8082                	ret

20406b20 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:938
{
20406b20:	1101                	addi	sp,sp,-32
20406b22:	ce22                	sw	s0,28(sp)
20406b24:	1000                	addi	s0,sp,32
20406b26:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b2a:	fec42703          	lw	a4,-20(s0)
20406b2e:	800007b7          	lui	a5,0x80000
20406b32:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406b36:	00f71763          	bne	a4,a5,20406b44 <__metal_driver_sifive_uart0_clock+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406b3a:	800007b7          	lui	a5,0x80000
20406b3e:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff2c0>
20406b42:	a011                	j	20406b46 <__metal_driver_sifive_uart0_clock+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:943
		return 0;
20406b44:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:945
}
20406b46:	853e                	mv	a0,a5
20406b48:	4472                	lw	s0,28(sp)
20406b4a:	6105                	addi	sp,sp,32
20406b4c:	8082                	ret

20406b4e <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:948
{
20406b4e:	1101                	addi	sp,sp,-32
20406b50:	ce22                	sw	s0,28(sp)
20406b52:	1000                	addi	s0,sp,32
20406b54:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b58:	fec42703          	lw	a4,-20(s0)
20406b5c:	800007b7          	lui	a5,0x80000
20406b60:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406b64:	00f71563          	bne	a4,a5,20406b6e <__metal_driver_sifive_uart0_pinmux+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406b68:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406b6c:	a011                	j	20406b70 <__metal_driver_sifive_uart0_pinmux+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:953
		return 0;
20406b6e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:955
}
20406b70:	853e                	mv	a0,a5
20406b72:	4472                	lw	s0,28(sp)
20406b74:	6105                	addi	sp,sp,32
20406b76:	8082                	ret

20406b78 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:958
{
20406b78:	1101                	addi	sp,sp,-32
20406b7a:	ce22                	sw	s0,28(sp)
20406b7c:	1000                	addi	s0,sp,32
20406b7e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b82:	fec42703          	lw	a4,-20(s0)
20406b86:	800007b7          	lui	a5,0x80000
20406b8a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406b8e:	00f71463          	bne	a4,a5,20406b96 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:960
		return 0;
20406b92:	4781                	li	a5,0
20406b94:	a011                	j	20406b98 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:963
		return 0;
20406b96:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:965
}
20406b98:	853e                	mv	a0,a5
20406b9a:	4472                	lw	s0,28(sp)
20406b9c:	6105                	addi	sp,sp,32
20406b9e:	8082                	ret

20406ba0 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:968
{
20406ba0:	1101                	addi	sp,sp,-32
20406ba2:	ce22                	sw	s0,28(sp)
20406ba4:	1000                	addi	s0,sp,32
20406ba6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406baa:	fec42703          	lw	a4,-20(s0)
20406bae:	800007b7          	lui	a5,0x80000
20406bb2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff288>
20406bb6:	00f71563          	bne	a4,a5,20406bc0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:970
		return 196608;
20406bba:	000307b7          	lui	a5,0x30
20406bbe:	a011                	j	20406bc2 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:973
		return 0;
20406bc0:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:975
}
20406bc2:	853e                	mv	a0,a5
20406bc4:	4472                	lw	s0,28(sp)
20406bc6:	6105                	addi	sp,sp,32
20406bc8:	8082                	ret

20406bca <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406bca:	1101                	addi	sp,sp,-32
20406bcc:	ce06                	sw	ra,28(sp)
20406bce:	cc22                	sw	s0,24(sp)
20406bd0:	1000                	addi	s0,sp,32
20406bd2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406bd6:	fec42503          	lw	a0,-20(s0)
20406bda:	ef1ff0ef          	jal	ra,20406aca <__metal_driver_sifive_uart0_interrupt_parent>
20406bde:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406be0:	853e                	mv	a0,a5
20406be2:	40f2                	lw	ra,28(sp)
20406be4:	4462                	lw	s0,24(sp)
20406be6:	6105                	addi	sp,sp,32
20406be8:	8082                	ret

20406bea <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406bea:	1101                	addi	sp,sp,-32
20406bec:	ce06                	sw	ra,28(sp)
20406bee:	cc22                	sw	s0,24(sp)
20406bf0:	1000                	addi	s0,sp,32
20406bf2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406bf6:	fec42503          	lw	a0,-20(s0)
20406bfa:	effff0ef          	jal	ra,20406af8 <__metal_driver_sifive_uart0_interrupt_line>
20406bfe:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406c00:	853e                	mv	a0,a5
20406c02:	40f2                	lw	ra,28(sp)
20406c04:	4462                	lw	s0,24(sp)
20406c06:	6105                	addi	sp,sp,32
20406c08:	8082                	ret

20406c0a <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406c0a:	7179                	addi	sp,sp,-48
20406c0c:	d606                	sw	ra,44(sp)
20406c0e:	d422                	sw	s0,40(sp)
20406c10:	1800                	addi	s0,sp,48
20406c12:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c16:	fdc42503          	lw	a0,-36(s0)
20406c1a:	e87ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406c1e:	87aa                	mv	a5,a0
20406c20:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406c24:	fec42783          	lw	a5,-20(s0)
20406c28:	07c1                	addi	a5,a5,16
20406c2a:	439c                	lw	a5,0(a5)
20406c2c:	fec42703          	lw	a4,-20(s0)
20406c30:	0741                	addi	a4,a4,16
20406c32:	0017e793          	ori	a5,a5,1
20406c36:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406c38:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406c3a:	853e                	mv	a0,a5
20406c3c:	50b2                	lw	ra,44(sp)
20406c3e:	5422                	lw	s0,40(sp)
20406c40:	6145                	addi	sp,sp,48
20406c42:	8082                	ret

20406c44 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406c44:	7179                	addi	sp,sp,-48
20406c46:	d606                	sw	ra,44(sp)
20406c48:	d422                	sw	s0,40(sp)
20406c4a:	1800                	addi	s0,sp,48
20406c4c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c50:	fdc42503          	lw	a0,-36(s0)
20406c54:	e4dff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406c58:	87aa                	mv	a5,a0
20406c5a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406c5e:	fec42783          	lw	a5,-20(s0)
20406c62:	07c1                	addi	a5,a5,16
20406c64:	439c                	lw	a5,0(a5)
20406c66:	fec42703          	lw	a4,-20(s0)
20406c6a:	0741                	addi	a4,a4,16
20406c6c:	9bf9                	andi	a5,a5,-2
20406c6e:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406c70:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406c72:	853e                	mv	a0,a5
20406c74:	50b2                	lw	ra,44(sp)
20406c76:	5422                	lw	s0,40(sp)
20406c78:	6145                	addi	sp,sp,48
20406c7a:	8082                	ret

20406c7c <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406c7c:	7179                	addi	sp,sp,-48
20406c7e:	d606                	sw	ra,44(sp)
20406c80:	d422                	sw	s0,40(sp)
20406c82:	1800                	addi	s0,sp,48
20406c84:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c88:	fdc42503          	lw	a0,-36(s0)
20406c8c:	e15ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406c90:	87aa                	mv	a5,a0
20406c92:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406c96:	fec42783          	lw	a5,-20(s0)
20406c9a:	07c1                	addi	a5,a5,16
20406c9c:	439c                	lw	a5,0(a5)
20406c9e:	fec42703          	lw	a4,-20(s0)
20406ca2:	0741                	addi	a4,a4,16
20406ca4:	0027e793          	ori	a5,a5,2
20406ca8:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406caa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406cac:	853e                	mv	a0,a5
20406cae:	50b2                	lw	ra,44(sp)
20406cb0:	5422                	lw	s0,40(sp)
20406cb2:	6145                	addi	sp,sp,48
20406cb4:	8082                	ret

20406cb6 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406cb6:	7179                	addi	sp,sp,-48
20406cb8:	d606                	sw	ra,44(sp)
20406cba:	d422                	sw	s0,40(sp)
20406cbc:	1800                	addi	s0,sp,48
20406cbe:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406cc2:	fdc42503          	lw	a0,-36(s0)
20406cc6:	ddbff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406cca:	87aa                	mv	a5,a0
20406ccc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406cd0:	fec42783          	lw	a5,-20(s0)
20406cd4:	07c1                	addi	a5,a5,16
20406cd6:	439c                	lw	a5,0(a5)
20406cd8:	fec42703          	lw	a4,-20(s0)
20406cdc:	0741                	addi	a4,a4,16
20406cde:	9bf5                	andi	a5,a5,-3
20406ce0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406ce2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406ce4:	853e                	mv	a0,a5
20406ce6:	50b2                	lw	ra,44(sp)
20406ce8:	5422                	lw	s0,40(sp)
20406cea:	6145                	addi	sp,sp,48
20406cec:	8082                	ret

20406cee <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406cee:	7179                	addi	sp,sp,-48
20406cf0:	d606                	sw	ra,44(sp)
20406cf2:	d422                	sw	s0,40(sp)
20406cf4:	1800                	addi	s0,sp,48
20406cf6:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406cfa:	fdc42503          	lw	a0,-36(s0)
20406cfe:	da3ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406d02:	87aa                	mv	a5,a0
20406d04:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406d08:	fec42783          	lw	a5,-20(s0)
20406d0c:	439c                	lw	a5,0(a5)
20406d0e:	83fd                	srli	a5,a5,0x1f
20406d10:	0ff7f793          	zext.b	a5,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:77
}
20406d14:	853e                	mv	a0,a5
20406d16:	50b2                	lw	ra,44(sp)
20406d18:	5422                	lw	s0,40(sp)
20406d1a:	6145                	addi	sp,sp,48
20406d1c:	8082                	ret

20406d1e <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406d1e:	7179                	addi	sp,sp,-48
20406d20:	d606                	sw	ra,44(sp)
20406d22:	d422                	sw	s0,40(sp)
20406d24:	1800                	addi	s0,sp,48
20406d26:	fca42e23          	sw	a0,-36(s0)
20406d2a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d2e:	fdc42503          	lw	a0,-36(s0)
20406d32:	d6fff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406d36:	87aa                	mv	a5,a0
20406d38:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406d3c:	fec42783          	lw	a5,-20(s0)
20406d40:	07a1                	addi	a5,a5,8
20406d42:	4398                	lw	a4,0(a5)
20406d44:	fd842783          	lw	a5,-40(s0)
20406d48:	01079693          	slli	a3,a5,0x10
20406d4c:	000707b7          	lui	a5,0x70
20406d50:	8ff5                	and	a5,a5,a3
20406d52:	fec42683          	lw	a3,-20(s0)
20406d56:	06a1                	addi	a3,a3,8
20406d58:	8fd9                	or	a5,a5,a4
20406d5a:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406d5c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406d5e:	853e                	mv	a0,a5
20406d60:	50b2                	lw	ra,44(sp)
20406d62:	5422                	lw	s0,40(sp)
20406d64:	6145                	addi	sp,sp,48
20406d66:	8082                	ret

20406d68 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20406d68:	7179                	addi	sp,sp,-48
20406d6a:	d606                	sw	ra,44(sp)
20406d6c:	d422                	sw	s0,40(sp)
20406d6e:	1800                	addi	s0,sp,48
20406d70:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d74:	fdc42503          	lw	a0,-36(s0)
20406d78:	d29ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406d7c:	87aa                	mv	a5,a0
20406d7e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406d82:	fec42783          	lw	a5,-20(s0)
20406d86:	07a1                	addi	a5,a5,8
20406d88:	439c                	lw	a5,0(a5)
20406d8a:	83c1                	srli	a5,a5,0x10
20406d8c:	8b9d                	andi	a5,a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406d8e:	853e                	mv	a0,a5
20406d90:	50b2                	lw	ra,44(sp)
20406d92:	5422                	lw	s0,40(sp)
20406d94:	6145                	addi	sp,sp,48
20406d96:	8082                	ret

20406d98 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406d98:	7179                	addi	sp,sp,-48
20406d9a:	d606                	sw	ra,44(sp)
20406d9c:	d422                	sw	s0,40(sp)
20406d9e:	1800                	addi	s0,sp,48
20406da0:	fca42e23          	sw	a0,-36(s0)
20406da4:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406da8:	fdc42503          	lw	a0,-36(s0)
20406dac:	cf5ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406db0:	87aa                	mv	a5,a0
20406db2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406db6:	fec42783          	lw	a5,-20(s0)
20406dba:	07b1                	addi	a5,a5,12
20406dbc:	4398                	lw	a4,0(a5)
20406dbe:	fd842783          	lw	a5,-40(s0)
20406dc2:	01079693          	slli	a3,a5,0x10
20406dc6:	000707b7          	lui	a5,0x70
20406dca:	8ff5                	and	a5,a5,a3
20406dcc:	fec42683          	lw	a3,-20(s0)
20406dd0:	06b1                	addi	a3,a3,12
20406dd2:	8fd9                	or	a5,a5,a4
20406dd4:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406dd6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406dd8:	853e                	mv	a0,a5
20406dda:	50b2                	lw	ra,44(sp)
20406ddc:	5422                	lw	s0,40(sp)
20406dde:	6145                	addi	sp,sp,48
20406de0:	8082                	ret

20406de2 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406de2:	7179                	addi	sp,sp,-48
20406de4:	d606                	sw	ra,44(sp)
20406de6:	d422                	sw	s0,40(sp)
20406de8:	1800                	addi	s0,sp,48
20406dea:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406dee:	fdc42503          	lw	a0,-36(s0)
20406df2:	cafff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406df6:	87aa                	mv	a5,a0
20406df8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20406dfc:	fec42783          	lw	a5,-20(s0)
20406e00:	07b1                	addi	a5,a5,12
20406e02:	439c                	lw	a5,0(a5)
20406e04:	83c1                	srli	a5,a5,0x10
20406e06:	8b9d                	andi	a5,a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406e08:	853e                	mv	a0,a5
20406e0a:	50b2                	lw	ra,44(sp)
20406e0c:	5422                	lw	s0,40(sp)
20406e0e:	6145                	addi	sp,sp,48
20406e10:	8082                	ret

20406e12 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406e12:	7179                	addi	sp,sp,-48
20406e14:	d606                	sw	ra,44(sp)
20406e16:	d422                	sw	s0,40(sp)
20406e18:	1800                	addi	s0,sp,48
20406e1a:	fca42e23          	sw	a0,-36(s0)
20406e1e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e22:	fdc42503          	lw	a0,-36(s0)
20406e26:	c7bff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406e2a:	87aa                	mv	a5,a0
20406e2c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406e30:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406e32:	fdc42503          	lw	a0,-36(s0)
20406e36:	eb9ff0ef          	jal	ra,20406cee <__metal_driver_sifive_uart0_txready>
20406e3a:	87aa                	mv	a5,a0
20406e3c:	fbfd                	bnez	a5,20406e32 <__metal_driver_sifive_uart0_putc+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406e3e:	fec42783          	lw	a5,-20(s0)
20406e42:	fd842703          	lw	a4,-40(s0)
20406e46:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20406e48:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406e4a:	853e                	mv	a0,a5
20406e4c:	50b2                	lw	ra,44(sp)
20406e4e:	5422                	lw	s0,40(sp)
20406e50:	6145                	addi	sp,sp,48
20406e52:	8082                	ret

20406e54 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20406e54:	7179                	addi	sp,sp,-48
20406e56:	d606                	sw	ra,44(sp)
20406e58:	d422                	sw	s0,40(sp)
20406e5a:	1800                	addi	s0,sp,48
20406e5c:	fca42e23          	sw	a0,-36(s0)
20406e60:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e64:	fdc42503          	lw	a0,-36(s0)
20406e68:	c39ff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406e6c:	87aa                	mv	a5,a0
20406e6e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406e72:	fec42783          	lw	a5,-20(s0)
20406e76:	0791                	addi	a5,a5,4
20406e78:	439c                	lw	a5,0(a5)
20406e7a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406e7e:	fe842783          	lw	a5,-24(s0)
20406e82:	0007d763          	bgez	a5,20406e90 <__metal_driver_sifive_uart0_getc+0x3c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20406e86:	fd842783          	lw	a5,-40(s0)
20406e8a:	577d                	li	a4,-1
20406e8c:	c398                	sw	a4,0(a5)
20406e8e:	a801                	j	20406e9e <__metal_driver_sifive_uart0_getc+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406e90:	fe842783          	lw	a5,-24(s0)
20406e94:	0ff7f713          	zext.b	a4,a5
20406e98:	fd842783          	lw	a5,-40(s0)
20406e9c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406e9e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406ea0:	853e                	mv	a0,a5
20406ea2:	50b2                	lw	ra,44(sp)
20406ea4:	5422                	lw	s0,40(sp)
20406ea6:	6145                	addi	sp,sp,48
20406ea8:	8082                	ret

20406eaa <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20406eaa:	7179                	addi	sp,sp,-48
20406eac:	d622                	sw	s0,44(sp)
20406eae:	1800                	addi	s0,sp,48
20406eb0:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406eb4:	fdc42783          	lw	a5,-36(s0)
20406eb8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20406ebc:	fec42783          	lw	a5,-20(s0)
20406ec0:	43dc                	lw	a5,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406ec2:	853e                	mv	a0,a5
20406ec4:	5432                	lw	s0,44(sp)
20406ec6:	6145                	addi	sp,sp,48
20406ec8:	8082                	ret

20406eca <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20406eca:	7179                	addi	sp,sp,-48
20406ecc:	d606                	sw	ra,44(sp)
20406ece:	d422                	sw	s0,40(sp)
20406ed0:	1800                	addi	s0,sp,48
20406ed2:	fca42e23          	sw	a0,-36(s0)
20406ed6:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406eda:	fdc42783          	lw	a5,-36(s0)
20406ede:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406ee2:	fdc42503          	lw	a0,-36(s0)
20406ee6:	bbbff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406eea:	87aa                	mv	a5,a0
20406eec:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406ef0:	fdc42503          	lw	a0,-36(s0)
20406ef4:	c2dff0ef          	jal	ra,20406b20 <__metal_driver_sifive_uart0_clock>
20406ef8:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20406efc:	fd842703          	lw	a4,-40(s0)
20406f00:	fec42783          	lw	a5,-20(s0)
20406f04:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20406f06:	fe442783          	lw	a5,-28(s0)
20406f0a:	cbb1                	beqz	a5,20406f5e <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20406f0c:	fe442783          	lw	a5,-28(s0)
20406f10:	439c                	lw	a5,0(a5)
20406f12:	439c                	lw	a5,0(a5)
20406f14:	fe442503          	lw	a0,-28(s0)
20406f18:	9782                	jalr	a5
20406f1a:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20406f1e:	fe042703          	lw	a4,-32(s0)
20406f22:	fd842783          	lw	a5,-40(s0)
20406f26:	02f747b3          	div	a5,a4,a5
20406f2a:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20406f2e:	fe842783          	lw	a5,-24(s0)
20406f32:	07e1                	addi	a5,a5,24
20406f34:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20406f36:	fe842783          	lw	a5,-24(s0)
20406f3a:	07a1                	addi	a5,a5,8
20406f3c:	439c                	lw	a5,0(a5)
20406f3e:	fe842703          	lw	a4,-24(s0)
20406f42:	0721                	addi	a4,a4,8
20406f44:	0017e793          	ori	a5,a5,1
20406f48:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20406f4a:	fe842783          	lw	a5,-24(s0)
20406f4e:	07b1                	addi	a5,a5,12
20406f50:	439c                	lw	a5,0(a5)
20406f52:	fe842703          	lw	a4,-24(s0)
20406f56:	0731                	addi	a4,a4,12
20406f58:	0017e793          	ori	a5,a5,1
20406f5c:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20406f5e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:151
}
20406f60:	853e                	mv	a0,a5
20406f62:	50b2                	lw	ra,44(sp)
20406f64:	5422                	lw	s0,40(sp)
20406f66:	6145                	addi	sp,sp,48
20406f68:	8082                	ret

20406f6a <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20406f6a:	7139                	addi	sp,sp,-64
20406f6c:	de06                	sw	ra,60(sp)
20406f6e:	dc22                	sw	s0,56(sp)
20406f70:	0080                	addi	s0,sp,64
20406f72:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20406f76:	fcc42783          	lw	a5,-52(s0)
20406f7a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20406f7e:	fcc42503          	lw	a0,-52(s0)
20406f82:	b1fff0ef          	jal	ra,20406aa0 <__metal_driver_sifive_uart0_control_base>
20406f86:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20406f88:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20406f8c:	fcc42503          	lw	a0,-52(s0)
20406f90:	b91ff0ef          	jal	ra,20406b20 <__metal_driver_sifive_uart0_clock>
20406f94:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20406f98:	fe842783          	lw	a5,-24(s0)
20406f9c:	07a1                	addi	a5,a5,8
20406f9e:	4398                	lw	a4,0(a5)
20406fa0:	fe842783          	lw	a5,-24(s0)
20406fa4:	07a1                	addi	a5,a5,8
20406fa6:	86be                	mv	a3,a5
20406fa8:	fff907b7          	lui	a5,0xfff90
20406fac:	17fd                	addi	a5,a5,-1
20406fae:	8ff9                	and	a5,a5,a4
20406fb0:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406fb2:	fe842783          	lw	a5,-24(s0)
20406fb6:	07a1                	addi	a5,a5,8
20406fb8:	4398                	lw	a4,0(a5)
20406fba:	fe842783          	lw	a5,-24(s0)
20406fbe:	07a1                	addi	a5,a5,8
20406fc0:	86be                	mv	a3,a5
20406fc2:	67c1                	lui	a5,0x10
20406fc4:	8fd9                	or	a5,a5,a4
20406fc6:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20406fc8:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20406fca:	fe842783          	lw	a5,-24(s0)
20406fce:	07d1                	addi	a5,a5,20
20406fd0:	439c                	lw	a5,0(a5)
20406fd2:	8b85                	andi	a5,a5,1
20406fd4:	dbfd                	beqz	a5,20406fca <pre_rate_change_callback_func+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20406fd6:	fe842783          	lw	a5,-24(s0)
20406fda:	07a1                	addi	a5,a5,8
20406fdc:	439c                	lw	a5,0(a5)
20406fde:	8b89                	andi	a5,a5,2
20406fe0:	c399                	beqz	a5,20406fe6 <pre_rate_change_callback_func+0x7c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406fe2:	47a5                	li	a5,9
20406fe4:	a011                	j	20406fe8 <pre_rate_change_callback_func+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20406fe6:	47a9                	li	a5,10
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20406fe8:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20406fec:	fe442783          	lw	a5,-28(s0)
20406ff0:	439c                	lw	a5,0(a5)
20406ff2:	439c                	lw	a5,0(a5)
20406ff4:	fe442503          	lw	a0,-28(s0)
20406ff8:	9782                	jalr	a5
20406ffa:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20406ffe:	fe042703          	lw	a4,-32(s0)
20407002:	fdc42783          	lw	a5,-36(s0)
20407006:	02f707b3          	mul	a5,a4,a5
2040700a:	873e                	mv	a4,a5
2040700c:	fec42783          	lw	a5,-20(s0)
20407010:	43dc                	lw	a5,4(a5)
20407012:	02f757b3          	divu	a5,a4,a5
20407016:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2040701a:	fc042a23          	sw	zero,-44(s0)
2040701e:	a039                	j	2040702c <pre_rate_change_callback_func+0xc2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20407020:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20407022:	fd442783          	lw	a5,-44(s0)
20407026:	0785                	addi	a5,a5,1
20407028:	fcf42a23          	sw	a5,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2040702c:	fd442783          	lw	a5,-44(s0)
20407030:	fd842703          	lw	a4,-40(s0)
20407034:	fee7c6e3          	blt	a5,a4,20407020 <pre_rate_change_callback_func+0xb6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:180
}
20407038:	0001                	nop
2040703a:	0001                	nop
2040703c:	50f2                	lw	ra,60(sp)
2040703e:	5462                	lw	s0,56(sp)
20407040:	6121                	addi	sp,sp,64
20407042:	8082                	ret

20407044 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20407044:	7179                	addi	sp,sp,-48
20407046:	d606                	sw	ra,44(sp)
20407048:	d422                	sw	s0,40(sp)
2040704a:	1800                	addi	s0,sp,48
2040704c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20407050:	fdc42783          	lw	a5,-36(s0)
20407054:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20407058:	fec42703          	lw	a4,-20(s0)
2040705c:	fec42783          	lw	a5,-20(s0)
20407060:	43dc                	lw	a5,4(a5)
20407062:	85be                	mv	a1,a5
20407064:	853a                	mv	a0,a4
20407066:	dbdfb0ef          	jal	ra,20402e22 <metal_uart_set_baud_rate>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:185
}
2040706a:	0001                	nop
2040706c:	50b2                	lw	ra,44(sp)
2040706e:	5422                	lw	s0,40(sp)
20407070:	6145                	addi	sp,sp,48
20407072:	8082                	ret

20407074 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20407074:	7139                	addi	sp,sp,-64
20407076:	de06                	sw	ra,60(sp)
20407078:	dc22                	sw	s0,56(sp)
2040707a:	0080                	addi	s0,sp,64
2040707c:	fca42623          	sw	a0,-52(s0)
20407080:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20407084:	fcc42783          	lw	a5,-52(s0)
20407088:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2040708c:	fcc42503          	lw	a0,-52(s0)
20407090:	a91ff0ef          	jal	ra,20406b20 <__metal_driver_sifive_uart0_clock>
20407094:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407098:	fcc42503          	lw	a0,-52(s0)
2040709c:	ab3ff0ef          	jal	ra,20406b4e <__metal_driver_sifive_uart0_pinmux>
204070a0:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
204070a4:	fe842783          	lw	a5,-24(s0)
204070a8:	c7b9                	beqz	a5,204070f6 <__metal_driver_sifive_uart0_init+0x82>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
204070aa:	fec42783          	lw	a5,-20(s0)
204070ae:	20407737          	lui	a4,0x20407
204070b2:	f6a70713          	addi	a4,a4,-150 # 20406f6a <pre_rate_change_callback_func>
204070b6:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
204070b8:	fec42783          	lw	a5,-20(s0)
204070bc:	fcc42703          	lw	a4,-52(s0)
204070c0:	c7d8                	sw	a4,12(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
204070c2:	fec42783          	lw	a5,-20(s0)
204070c6:	07a1                	addi	a5,a5,8
204070c8:	85be                	mv	a1,a5
204070ca:	fe842503          	lw	a0,-24(s0)
204070ce:	2241                	jal	2040724e <metal_clock_register_pre_rate_change_callback>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
204070d0:	fec42783          	lw	a5,-20(s0)
204070d4:	20407737          	lui	a4,0x20407
204070d8:	04470713          	addi	a4,a4,68 # 20407044 <post_rate_change_callback_func>
204070dc:	cbd8                	sw	a4,20(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
204070de:	fec42783          	lw	a5,-20(s0)
204070e2:	fcc42703          	lw	a4,-52(s0)
204070e6:	cf98                	sw	a4,24(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
204070e8:	fec42783          	lw	a5,-20(s0)
204070ec:	07d1                	addi	a5,a5,20
204070ee:	85be                	mv	a1,a5
204070f0:	fe842503          	lw	a0,-24(s0)
204070f4:	2271                	jal	20407280 <metal_clock_register_post_rate_change_callback>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
204070f6:	fec42783          	lw	a5,-20(s0)
204070fa:	fc842583          	lw	a1,-56(s0)
204070fe:	853e                	mv	a0,a5
20407100:	d23fb0ef          	jal	ra,20402e22 <metal_uart_set_baud_rate>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20407104:	fe442783          	lw	a5,-28(s0)
20407108:	cb95                	beqz	a5,2040713c <__metal_driver_sifive_uart0_init+0xc8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2040710a:	fcc42503          	lw	a0,-52(s0)
2040710e:	a6bff0ef          	jal	ra,20406b78 <__metal_driver_sifive_uart0_pinmux_output_selector>
20407112:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20407114:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20407118:	fcc42503          	lw	a0,-52(s0)
2040711c:	a85ff0ef          	jal	ra,20406ba0 <__metal_driver_sifive_uart0_pinmux_source_selector>
20407120:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20407122:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20407126:	fe442783          	lw	a5,-28(s0)
2040712a:	439c                	lw	a5,0(a5)
2040712c:	53dc                	lw	a5,36(a5)
2040712e:	fdc42603          	lw	a2,-36(s0)
20407132:	fe042583          	lw	a1,-32(s0)
20407136:	fe442503          	lw	a0,-28(s0)
2040713a:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2040713c:	0001                	nop
2040713e:	50f2                	lw	ra,60(sp)
20407140:	5462                	lw	s0,56(sp)
20407142:	6121                	addi	sp,sp,64
20407144:	8082                	ret

20407146 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20407146:	7179                	addi	sp,sp,-48
20407148:	d606                	sw	ra,44(sp)
2040714a:	d422                	sw	s0,40(sp)
2040714c:	1800                	addi	s0,sp,48
2040714e:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20407152:	fdc42783          	lw	a5,-36(s0)
20407156:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:52
    while (current) {
2040715a:	a831                	j	20407176 <_metal_clock_call_all_callbacks+0x30>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2040715c:	fec42783          	lw	a5,-20(s0)
20407160:	4398                	lw	a4,0(a5)
20407162:	fec42783          	lw	a5,-20(s0)
20407166:	43dc                	lw	a5,4(a5)
20407168:	853e                	mv	a0,a5
2040716a:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:54
        current = current->_next;
2040716c:	fec42783          	lw	a5,-20(s0)
20407170:	479c                	lw	a5,8(a5)
20407172:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:52
    while (current) {
20407176:	fec42783          	lw	a5,-20(s0)
2040717a:	f3ed                	bnez	a5,2040715c <_metal_clock_call_all_callbacks+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:56
    }
}
2040717c:	0001                	nop
2040717e:	0001                	nop
20407180:	50b2                	lw	ra,44(sp)
20407182:	5422                	lw	s0,40(sp)
20407184:	6145                	addi	sp,sp,48
20407186:	8082                	ret

20407188 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407188:	7179                	addi	sp,sp,-48
2040718a:	d622                	sw	s0,44(sp)
2040718c:	1800                	addi	s0,sp,48
2040718e:	fca42e23          	sw	a0,-36(s0)
20407192:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20407196:	fd842783          	lw	a5,-40(s0)
2040719a:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:66

    if (!list) {
2040719e:	fdc42783          	lw	a5,-36(s0)
204071a2:	e781                	bnez	a5,204071aa <_metal_clock_append_to_callbacks+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:67
        return cb;
204071a4:	fd842783          	lw	a5,-40(s0)
204071a8:	a035                	j	204071d4 <_metal_clock_append_to_callbacks+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
204071aa:	fdc42783          	lw	a5,-36(s0)
204071ae:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
204071b2:	a031                	j	204071be <_metal_clock_append_to_callbacks+0x36>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:73
        current = current->_next;
204071b4:	fec42783          	lw	a5,-20(s0)
204071b8:	479c                	lw	a5,8(a5)
204071ba:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
204071be:	fec42783          	lw	a5,-20(s0)
204071c2:	479c                	lw	a5,8(a5)
204071c4:	fbe5                	bnez	a5,204071b4 <_metal_clock_append_to_callbacks+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
204071c6:	fec42783          	lw	a5,-20(s0)
204071ca:	fd842703          	lw	a4,-40(s0)
204071ce:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:78

    return list;
204071d0:	fdc42783          	lw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:79
}
204071d4:	853e                	mv	a0,a5
204071d6:	5432                	lw	s0,44(sp)
204071d8:	6145                	addi	sp,sp,48
204071da:	8082                	ret

204071dc <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
204071dc:	1101                	addi	sp,sp,-32
204071de:	ce06                	sw	ra,28(sp)
204071e0:	cc22                	sw	s0,24(sp)
204071e2:	1000                	addi	s0,sp,32
204071e4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
204071e8:	fec42783          	lw	a5,-20(s0)
204071ec:	439c                	lw	a5,0(a5)
204071ee:	439c                	lw	a5,0(a5)
204071f0:	fec42503          	lw	a0,-20(s0)
204071f4:	9782                	jalr	a5
204071f6:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:112
}
204071f8:	853e                	mv	a0,a5
204071fa:	40f2                	lw	ra,28(sp)
204071fc:	4462                	lw	s0,24(sp)
204071fe:	6105                	addi	sp,sp,32
20407200:	8082                	ret

20407202 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20407202:	7179                	addi	sp,sp,-48
20407204:	d606                	sw	ra,44(sp)
20407206:	d422                	sw	s0,40(sp)
20407208:	1800                	addi	s0,sp,48
2040720a:	fca42e23          	sw	a0,-36(s0)
2040720e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20407212:	fdc42783          	lw	a5,-36(s0)
20407216:	43dc                	lw	a5,4(a5)
20407218:	853e                	mv	a0,a5
2040721a:	f2dff0ef          	jal	ra,20407146 <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2040721e:	fdc42783          	lw	a5,-36(s0)
20407222:	439c                	lw	a5,0(a5)
20407224:	43dc                	lw	a5,4(a5)
20407226:	fd842583          	lw	a1,-40(s0)
2040722a:	fdc42503          	lw	a0,-36(s0)
2040722e:	9782                	jalr	a5
20407230:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20407234:	fdc42783          	lw	a5,-36(s0)
20407238:	479c                	lw	a5,8(a5)
2040723a:	853e                	mv	a0,a5
2040723c:	f0bff0ef          	jal	ra,20407146 <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:135

    return out;
20407240:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:136
}
20407244:	853e                	mv	a0,a5
20407246:	50b2                	lw	ra,44(sp)
20407248:	5422                	lw	s0,40(sp)
2040724a:	6145                	addi	sp,sp,48
2040724c:	8082                	ret

2040724e <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
2040724e:	1101                	addi	sp,sp,-32
20407250:	ce06                	sw	ra,28(sp)
20407252:	cc22                	sw	s0,24(sp)
20407254:	1000                	addi	s0,sp,32
20407256:	fea42623          	sw	a0,-20(s0)
2040725a:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2040725e:	fec42783          	lw	a5,-20(s0)
20407262:	43dc                	lw	a5,4(a5)
20407264:	fe842583          	lw	a1,-24(s0)
20407268:	853e                	mv	a0,a5
2040726a:	f1fff0ef          	jal	ra,20407188 <_metal_clock_append_to_callbacks>
2040726e:	872a                	mv	a4,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407270:	fec42783          	lw	a5,-20(s0)
20407274:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:149
}
20407276:	0001                	nop
20407278:	40f2                	lw	ra,28(sp)
2040727a:	4462                	lw	s0,24(sp)
2040727c:	6105                	addi	sp,sp,32
2040727e:	8082                	ret

20407280 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407280:	1101                	addi	sp,sp,-32
20407282:	ce06                	sw	ra,28(sp)
20407284:	cc22                	sw	s0,24(sp)
20407286:	1000                	addi	s0,sp,32
20407288:	fea42623          	sw	a0,-20(s0)
2040728c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407290:	fec42783          	lw	a5,-20(s0)
20407294:	479c                	lw	a5,8(a5)
20407296:	fe842583          	lw	a1,-24(s0)
2040729a:	853e                	mv	a0,a5
2040729c:	eedff0ef          	jal	ra,20407188 <_metal_clock_append_to_callbacks>
204072a0:	872a                	mv	a4,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
204072a2:	fec42783          	lw	a5,-20(s0)
204072a6:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:162
}
204072a8:	0001                	nop
204072aa:	40f2                	lw	ra,28(sp)
204072ac:	4462                	lw	s0,24(sp)
204072ae:	6105                	addi	sp,sp,32
204072b0:	8082                	ret

204072b2 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
204072b2:	1101                	addi	sp,sp,-32
204072b4:	ce06                	sw	ra,28(sp)
204072b6:	cc22                	sw	s0,24(sp)
204072b8:	1000                	addi	s0,sp,32
204072ba:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
204072be:	fec42783          	lw	a5,-20(s0)
204072c2:	439c                	lw	a5,0(a5)
204072c4:	57dc                	lw	a5,44(a5)
204072c6:	fec42503          	lw	a0,-20(s0)
204072ca:	9782                	jalr	a5
204072cc:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:226
}
204072ce:	853e                	mv	a0,a5
204072d0:	40f2                	lw	ra,28(sp)
204072d2:	4462                	lw	s0,24(sp)
204072d4:	6105                	addi	sp,sp,32
204072d6:	8082                	ret

204072d8 <metal_cpu_get>:
metal_cpu_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
204072d8:	1101                	addi	sp,sp,-32
204072da:	ce22                	sw	s0,28(sp)
204072dc:	1000                	addi	s0,sp,32
204072de:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
204072e2:	fec42783          	lw	a5,-20(s0)
204072e6:	eb99                	bnez	a5,204072fc <metal_cpu_get+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
204072e8:	800007b7          	lui	a5,0x80000
204072ec:	fec42703          	lw	a4,-20(s0)
204072f0:	070a                	slli	a4,a4,0x2
204072f2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff2d8>
204072f6:	97ba                	add	a5,a5,a4
204072f8:	439c                	lw	a5,0(a5)
204072fa:	a011                	j	204072fe <metal_cpu_get+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:11
    }
    return NULL;
204072fc:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:12
}
204072fe:	853e                	mv	a0,a5
20407300:	4472                	lw	s0,28(sp)
20407302:	6105                	addi	sp,sp,32
20407304:	8082                	ret

20407306 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20407306:	1101                	addi	sp,sp,-32
20407308:	ce22                	sw	s0,28(sp)
2040730a:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2040730c:	f14027f3          	csrr	a5,mhartid
20407310:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:18
    return mhartid;
20407314:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:20
#endif
}
20407318:	853e                	mv	a0,a5
2040731a:	4472                	lw	s0,28(sp)
2040731c:	6105                	addi	sp,sp,32
2040731e:	8082                	ret
	...

20407380 <__metal_vector_table>:
IRQ_0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407380:	c3cfc06f          	j	204037bc <metal_interrupt_vector_handler>

20407384 <IRQ_1>:
IRQ_1():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407384:	c38fc06f          	j	204037bc <metal_interrupt_vector_handler>

20407388 <IRQ_2>:
IRQ_2():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407388:	c34fc06f          	j	204037bc <metal_interrupt_vector_handler>

2040738c <IRQ_3>:
IRQ_3():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040738c:	c5efc06f          	j	204037ea <metal_software_interrupt_vector_handler>

20407390 <IRQ_4>:
IRQ_4():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407390:	c2cfc06f          	j	204037bc <metal_interrupt_vector_handler>

20407394 <IRQ_5>:
IRQ_5():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407394:	c28fc06f          	j	204037bc <metal_interrupt_vector_handler>

20407398 <IRQ_6>:
IRQ_6():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407398:	c24fc06f          	j	204037bc <metal_interrupt_vector_handler>

2040739c <IRQ_7>:
IRQ_7():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040739c:	d48fc06f          	j	204038e4 <metal_timer_interrupt_vector_handler>

204073a0 <IRQ_8>:
IRQ_8():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204073a0:	c1cfc06f          	j	204037bc <metal_interrupt_vector_handler>

204073a4 <IRQ_9>:
IRQ_9():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204073a4:	c18fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073a8 <IRQ_10>:
IRQ_10():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204073a8:	c14fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073ac <IRQ_11>:
IRQ_11():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204073ac:	c10fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073b0 <IRQ_12>:
IRQ_12():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204073b0:	c0cfc06f          	j	204037bc <metal_interrupt_vector_handler>

204073b4 <IRQ_13>:
IRQ_13():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204073b4:	c08fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073b8 <IRQ_14>:
IRQ_14():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204073b8:	c04fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073bc <IRQ_15>:
IRQ_15():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204073bc:	c00fc06f          	j	204037bc <metal_interrupt_vector_handler>

204073c0 <IRQ_LC0>:
IRQ_LC0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204073c0:	83bfc06f          	j	20403bfa <metal_lc0_interrupt_vector_handler>

204073c4 <IRQ_LC1>:
IRQ_LC1():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204073c4:	8cdfc06f          	j	20403c90 <metal_lc1_interrupt_vector_handler>

204073c8 <IRQ_LC2>:
IRQ_LC2():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204073c8:	95ffc06f          	j	20403d26 <metal_lc2_interrupt_vector_handler>

204073cc <IRQ_LC3>:
IRQ_LC3():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204073cc:	9f1fc06f          	j	20403dbc <metal_lc3_interrupt_vector_handler>

204073d0 <IRQ_LC4>:
IRQ_LC4():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204073d0:	a83fc06f          	j	20403e52 <metal_lc4_interrupt_vector_handler>

204073d4 <IRQ_LC5>:
IRQ_LC5():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204073d4:	b15fc06f          	j	20403ee8 <metal_lc5_interrupt_vector_handler>

204073d8 <IRQ_LC6>:
IRQ_LC6():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204073d8:	ba7fc06f          	j	20403f7e <metal_lc6_interrupt_vector_handler>

204073dc <IRQ_LC7>:
IRQ_LC7():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204073dc:	c39fc06f          	j	20404014 <metal_lc7_interrupt_vector_handler>

204073e0 <IRQ_LC8>:
IRQ_LC8():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204073e0:	ccbfc06f          	j	204040aa <metal_lc8_interrupt_vector_handler>

204073e4 <IRQ_LC9>:
IRQ_LC9():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204073e4:	d5dfc06f          	j	20404140 <metal_lc9_interrupt_vector_handler>

204073e8 <IRQ_LC10>:
IRQ_LC10():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204073e8:	deffc06f          	j	204041d6 <metal_lc10_interrupt_vector_handler>

204073ec <IRQ_LC11>:
IRQ_LC11():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204073ec:	e81fc06f          	j	2040426c <metal_lc11_interrupt_vector_handler>

204073f0 <IRQ_LC12>:
IRQ_LC12():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204073f0:	f13fc06f          	j	20404302 <metal_lc12_interrupt_vector_handler>

204073f4 <IRQ_LC13>:
IRQ_LC13():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204073f4:	fa5fc06f          	j	20404398 <metal_lc13_interrupt_vector_handler>

204073f8 <IRQ_LC14>:
IRQ_LC14():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204073f8:	836fd06f          	j	2040442e <metal_lc14_interrupt_vector_handler>

204073fc <IRQ_LC15>:
IRQ_LC15():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204073fc:	8c8fd06f          	j	204044c4 <metal_lc15_interrupt_vector_handler>

20407400 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:180
{
20407400:	1101                	addi	sp,sp,-32
20407402:	ce22                	sw	s0,28(sp)
20407404:	1000                	addi	s0,sp,32
20407406:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040740a:	fec42703          	lw	a4,-20(s0)
2040740e:	800007b7          	lui	a5,0x80000
20407412:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffeb90>
20407416:	00f71763          	bne	a4,a5,20407424 <__metal_driver_fixed_clock_rate+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040741a:	00f427b7          	lui	a5,0xf42
2040741e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407422:	a825                	j	2040745a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407424:	fec42703          	lw	a4,-20(s0)
20407428:	800007b7          	lui	a5,0x80000
2040742c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffeb9c>
20407430:	00f71763          	bne	a4,a5,2040743e <__metal_driver_fixed_clock_rate+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407434:	044aa7b7          	lui	a5,0x44aa
20407438:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2040743c:	a839                	j	2040745a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040743e:	fec42703          	lw	a4,-20(s0)
20407442:	800007b7          	lui	a5,0x80000
20407446:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffeba8>
2040744a:	00f71763          	bne	a4,a5,20407458 <__metal_driver_fixed_clock_rate+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040744e:	01e857b7          	lui	a5,0x1e85
20407452:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407456:	a011                	j	2040745a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:191
		return 0;
20407458:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:193
}
2040745a:	853e                	mv	a0,a5
2040745c:	4472                	lw	s0,28(sp)
2040745e:	6105                	addi	sp,sp,32
20407460:	8082                	ret

20407462 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407462:	1101                	addi	sp,sp,-32
20407464:	ce06                	sw	ra,28(sp)
20407466:	cc22                	sw	s0,24(sp)
20407468:	1000                	addi	s0,sp,32
2040746a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040746e:	fec42503          	lw	a0,-20(s0)
20407472:	3779                	jal	20407400 <__metal_driver_fixed_clock_rate>
20407474:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:14
}
20407476:	853e                	mv	a0,a5
20407478:	40f2                	lw	ra,28(sp)
2040747a:	4462                	lw	s0,24(sp)
2040747c:	6105                	addi	sp,sp,32
2040747e:	8082                	ret

20407480 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407480:	1101                	addi	sp,sp,-32
20407482:	ce06                	sw	ra,28(sp)
20407484:	cc22                	sw	s0,24(sp)
20407486:	1000                	addi	s0,sp,32
20407488:	fea42623          	sw	a0,-20(s0)
2040748c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407490:	fec42503          	lw	a0,-20(s0)
20407494:	37f9                	jal	20407462 <__metal_driver_fixed_clock_get_rate_hz>
20407496:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:19
}
20407498:	853e                	mv	a0,a5
2040749a:	40f2                	lw	ra,28(sp)
2040749c:	4462                	lw	s0,24(sp)
2040749e:	6105                	addi	sp,sp,32
204074a0:	8082                	ret

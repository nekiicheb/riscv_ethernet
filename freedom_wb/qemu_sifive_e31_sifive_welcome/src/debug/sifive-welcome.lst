
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/debug/sifive-welcome.elf:     file format elf32-littleriscv
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/debug/sifive-welcome.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x000015c8 memsz 0x000015c8 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x204077a8 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00000ca8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002600 vaddr 0x20401600 paddr 0x20401600 align 2**12
         filesz 0x000061a2 memsz 0x000061a2 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00001260  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000061a2  20401600  20401600  00002600  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  204077a8  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80000870  80000870  000097c8  2**4  ALLOC
  8 .heap             00000800  80000c70  80000c70  000097c8  2**3  ALLOC
  9 .debug_info       0001fa8d  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002db0  00000000  00000000  00029255  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000c40  00000000  00000000  0002c008  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000a00  00000000  00000000  0002cc48  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000ba34  00000000  00000000  0002d648  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004e58  00000000  00000000  0003907c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003ded4  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003df04  2**0  CONTENTS, READONLY
 17 .debug_frame      00002fb0  00000000  00000000  0003df34  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401600 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80000870 l    d  .stack	00000000 .stack
80000c70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
20400a50 l       .rodata	00000000 argv
20400a54 l       .rodata	00000000 envp
20400a58 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20405d1e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405d38 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405d52 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405d68 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405d7c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405d8e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405d9e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405db4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405dc6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20400c54 l     O .rodata	00000880 pll_configs
20405ddc l     F .text	0000004e get_pll_config_freq
2040603e l     F .text	000000ac find_closest_config
204060ea l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 sifive-welcome.c
00000000 l    df *ABS*	00000000 proprietary_pkt_util.c
2040050c l     O .rodata	0000000e __func__.0
00000000 l    df *ABS*	00000000 crc32.c
2040051c l     O .rodata	00000400 crc32_table
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
204018b6 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 findfp.c
20401f7a l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20403106 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20403130 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20403158 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20403194 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
204032f4 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403838 l     F .text	00000024 __metal_driver_cpu_hartid
2040385c l     F .text	0000002a __metal_driver_cpu_timebase
20403886 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
204038b0 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20405270 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040529a l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204052c2 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204052ea l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405312 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20405334 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20406478 l     F .text	00000026 __metal_driver_sifive_gpio0_base
2040649e l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
204064c8 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406d9c l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406dc6 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406df4 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406e1c l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406e4a l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406e74 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406e9c l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20407262 l     F .text	000000da pre_rate_change_callback_func
2040733c l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20405b2e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405b48 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20405b5e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405b72 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405c2e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405c48 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405c5e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405c72 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20406400 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20406d2c l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407700 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 netinet_in.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_getpid.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_kill.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007d8 l     O .bss	00000004 init_done.1
800007dc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 vector.o
20407680 l       .text	00000000 IRQ_0
20407684 l       .text	00000000 IRQ_1
20407688 l       .text	00000000 IRQ_2
2040768c l       .text	00000000 IRQ_3
20407690 l       .text	00000000 IRQ_4
20407694 l       .text	00000000 IRQ_5
20407698 l       .text	00000000 IRQ_6
2040769c l       .text	00000000 IRQ_7
204076a0 l       .text	00000000 IRQ_8
204076a4 l       .text	00000000 IRQ_9
204076a8 l       .text	00000000 IRQ_10
204076ac l       .text	00000000 IRQ_11
204076b0 l       .text	00000000 IRQ_12
204076b4 l       .text	00000000 IRQ_13
204076b8 l       .text	00000000 IRQ_14
204076bc l       .text	00000000 IRQ_15
204076c0 l       .text	00000000 IRQ_LC0
204076c4 l       .text	00000000 IRQ_LC1
204076c8 l       .text	00000000 IRQ_LC2
204076cc l       .text	00000000 IRQ_LC3
204076d0 l       .text	00000000 IRQ_LC4
204076d4 l       .text	00000000 IRQ_LC5
204076d8 l       .text	00000000 IRQ_LC6
204076dc l       .text	00000000 IRQ_LC7
204076e0 l       .text	00000000 IRQ_LC8
204076e4 l       .text	00000000 IRQ_LC9
204076e8 l       .text	00000000 IRQ_LC10
204076ec l       .text	00000000 IRQ_LC11
204076f0 l       .text	00000000 IRQ_LC12
204076f4 l       .text	00000000 IRQ_LC13
204076f8 l       .text	00000000 IRQ_LC14
204076fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
2040155c g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402a6e g     F .text	0000002e _isatty_r
20404152  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20402b5e g     F .text	00000010 _getpid
20402a9c g     F .text	00000032 _lseek_r
204074d4 g     F .text	00000026 metal_clock_get_rate_hz
204071c2 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
204034d0 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20407016 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204040bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20404964 g     F .text	00000058 __metal_valid_interrupt_id
204017e4 g     F .text	00000070 xcrc32
204028f2 g     F .text	00000030 _kill_r
20401bba g     F .text	0000003c printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404de0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20407480 g     F .text	00000054 _metal_clock_append_to_callbacks
2040538e g     F .text	00000046 __metal_plic0_complete_interrupt
20404ba8 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
204029a2 g     F .text	00000036 __sseek
20402030 g     F .text	0000006a __sinit
20401bf6 g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401fec g     F .text	00000044 __sfmoreglue
204016ca g     F .text	00000082 test_checksum
20402ad0 g     F .text	00000002 __malloc_unlock
204075ce g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
20406906 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20400a64 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
8000086c g       .bss	00000000 metal_segment_bss_target_end
204031c4 g     F .text	0000009a __metal_clint0_mtime_get
204051e4 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
204070da g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204066bc g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20406d52 g     F .text	0000004a __metal_driver_sifive_test0_exit
20402cfe g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406fe6 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406f74 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
2040325e g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402a3e g     F .text	00000030 _fstat_r
20406b56 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d0 g     O .bss	00000004 errno
20405ece g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20407544 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20404440  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
20402ff8  w    F .text	00000014 metal_init_run
20400bf0 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400bac g     O .rodata	00000044 __metal_driver_vtable_cpu
204030d8 g     F .text	0000002e metal_uart_set_baud_rate
2040736c g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20400370 g     O .rodata	00000066 correct_ping_packet
20404e6c g     F .text	00000070 __metal_driver_cpu_mcycle_get
204014d4 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000c70 g       .heap	00000000 metal_segment_heap_target_start
20401fe2 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
204043aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
2040629a g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405a92 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20404698  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20403a42 g     F .text	00000018 __metal_default_exception_handler
20402884 g     F .text	00000062 _raise_r
20402b38 g     F .text	00000026 _fstat
20401854 g     F .text	0000003a __assert_func
20403804 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404dfc g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
204038d4 g     F .text	00000030 __metal_driver_cpu_get
20400b48 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20402922 g     F .text	00000002 _getpid_r
20403936 g     F .text	00000018 __metal_interrupt_global_disable
20405b06 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404314  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204044d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20402856 g     F .text	0000002e _sbrk_r
204058b2 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404a78 g     F .text	0000004e __metal_exception_register
20402f08 g     F .text	00000078 metal_init
20402ad2 g     F .text	00000032 _read_r
20404ffe g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2040679e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20403b32 g     F .text	00000068 __metal_default_sw_handler
20407576 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406ec6 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
20402b6e g     F .text	00000020 _isatty
20406864 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406f02 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
204015c0 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
204015a0 g     O .rodata	00000004 _global_impure_ptr
20403b9a  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402d66 g     F .text	0000005e __libc_init_array
204067de g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040456c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20405cfc g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20401dc0 g     F .text	00000010 abort
20404d88 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402c08 g     F .text	0000007e _sbrk
20406758 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2040743e g     F .text	00000042 _metal_clock_call_all_callbacks
204002ba g     F .init	00000002 _init
20403998 g     F .text	0000001a __metal_interrupt_timer_disable
20406950 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204050bc g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20401520 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406f3c g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204068a4 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402d30 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20406cde g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20402f80 g     F .text	00000078 metal_fini
20405046 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20405250 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
204039ea g     F .text	0000002c __metal_interrupt_local_enable
204037d0 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20403058 g     F .text	00000026 metal_tty_putc
204003d8 g     O .rodata	00000066 incorrect_ping_packet
2040558c g     F .text	00000018 __metal_plic0_default_handler
20402c86  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
2040188e g     F .text	00000028 fprintf
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405902 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403c2c g     F .text	00000016 __metal_default_beu_handler
20400970 g     O .rodata	00000020 __sf_fake_stderr
204039ce g     F .text	0000001c __metal_interrupt_external_disable
20406ee4 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
20404e50 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20404ac6 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
204018de g     F .text	00000042 __sfputs_r
2040519e g     F .text	00000046 __metal_driver_cpu_exception_register
2040394e g     F .text	00000018 __metal_interrupt_software_enable
20403f90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
2040229a g     F .text	0000001a memchr
2040235c g     F .text	000000a6 _free_r
800007d4 g     O .bss	00000004 _global_atexit
20405454 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
2040485a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402e40 g     F .text	000000c8 __call_exitprocs
80000c70 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
20405b88 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20402bb4 g     F .text	0000002a _lseek
2040517e g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405212 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
204039b2 g     F .text	0000001c __metal_interrupt_external_enable
20402dc4 g     F .text	0000007c __register_exitproc
2040710a g     F .text	00000042 __metal_driver_sifive_uart0_putc
20405648 g     F .text	00000158 __metal_driver_riscv_plic0_init
20405862 g     F .text	00000050 __metal_driver_riscv_plic0_enable
2040672c g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040427e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20403904 g     F .text	0000001a __metal_myhart_id
20401784 g     F .text	0000003e htonl
20406cfe g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20403aa0  w    F .text	00000092 metal_software_interrupt_vector_handler
20404db4 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20402a10 g     F .text	0000002e _close_r
204071a2 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204033b2 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401cb6 g     F .text	0000010a __swsetup_r
2040209a g     F .text	0000009c __sfp
204074fa g     F .text	0000004a metal_clock_set_rate_hz
20402924 g     F .text	00000030 __sread
2040667c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
20403a72  w    F .text	0000002e metal_interrupt_vector_handler
20402ace g     F .text	00000002 __malloc_lock
20406fae g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401f16 g     F .text	00000064 _fflush_r
2040541a g     F .text	0000003a __metal_plic0_get_threshold
20406412 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20400990 g     O .rodata	00000020 __sf_fake_stdin
204049bc g     F .text	000000bc __metal_local_interrupt_enable
20403690 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
204022b4 g     F .text	000000a8 memset
204041e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401600 g     F .text	00000020 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20407090 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
204015a4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2040505a g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
2040511e g     F .text	00000060 __metal_driver_cpu_get_msip
20403042 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20405230 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20405352 g     F .text	0000003c __metal_plic0_claim_interrupt
20407060 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
204029d8 g     F .text	00000006 __sclose
20404602  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
204017c2 g     F .text	00000022 ntohs
20402402 g     F .text	000000d8 _malloc_r
204034b4 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404edc g     F .text	00000046 __metal_driver_cpu_timebase_get
204059f6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
204075fc g     F .text	0000001a metal_cpu_get_current_hartid
20405c88 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407680 g       .text	00000000 __metal_vector_table
204015c8 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002ba g     F .init	00000002 _fini
20401bba g     F .text	0000003c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
204054b6 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
2040391e g     F .text	00000018 __metal_interrupt_global_enable
20402cf4 g     F .text	0000000a atexit
204029de g     F .text	00000032 _write_r
2040397e g     F .text	0000001a __metal_interrupt_timer_enable
2040714c g     F .text	00000056 __metal_driver_sifive_uart0_getc
204035da g     F .text	000000b6 __metal_driver_riscv_clint0_disable
204024da g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404f88 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401dd0 g     F .text	00000146 __sflush_r
20401620 g     F .text	000000aa check_proprietary_crc
20403020 g     F .text	00000022 __metal_shutdown_exit
20405932 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405e2a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20406440 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20407762 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20403528 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
204015bc g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
204077a8 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
80001470 g       .heap	00000000 metal_segment_heap_target_end
204048b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
204021a0 g     F .text	0000005c __swhatbuf_r
2040681e g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403c42 g     F .text	00000066 __metal_default_timer_handler
20402c86 g     F .text	0000006e _write
204055a4 g     F .text	000000a4 __metal_plic0_handler
20404026  w    F .text	00000096 metal_lc2_interrupt_vector_handler
2040174c g     F .text	00000038 htons
204047c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204075a8 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
20402954 g     F .text	0000004e __swrite
20402d08 g     F .text	00000028 exit
2040188e g     F .text	00000028 fiprintf
20401920 g     F .text	0000029a _vfiprintf_r
20402136 g     F .text	0000006a _fwalk_reent
20402b8e g     F .text	00000026 _kill
20407780 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
204015c8 g       *ABS*	00000000 metal_segment_lim_source_start
204009b0 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20403a5a g     F .text	00000018 __metal_default_interrupt_handler
204030aa g     F .text	0000002e metal_uart_putc
20402bde g     F .text	0000002a _read
2040300c  w    F .text	00000014 metal_fini_run
20406702 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403d00 g     F .text	00000180 __metal_exception_handler
20403efa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20402b26 g     F .text	00000012 _exit
20404f22 g     F .text	00000066 __metal_driver_cpu_mtime_get
204021fc g     F .text	0000009e __smakebuf_r
2040348c g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
204025e6 g     F .text	00000270 _printf_i
800007cc g     O .bss	00000004 __malloc_sbrk_start
2040472e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
204015ac g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
2040332a g     F .text	00000088 __metal_driver_riscv_clint0_init
800007c8 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20401920 g     F .text	0000029a _vfprintf_r
20405018 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204054ea g     F .text	000000a2 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
20405c0c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
2040502c g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20403a16 g     F .text	0000002c __metal_interrupt_local_disable
20403966 g     F .text	00000018 __metal_interrupt_software_disable
2040307e g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
204053d4 g     F .text	00000046 __metal_plic0_set_threshold
2040595a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20402b04 g     F .text	00000022 _close
204028e6 g     F .text	0000000c raise
204015b4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
204057a0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	cd018113          	addi	sp,gp,-816 # 80000c70 <_sp>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00007297          	auipc	t0,0x7
20400166:	64628293          	addi	t0,t0,1606 # 204077a8 <metal_segment_data_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	43628293          	addi	t0,t0,1078 # 204015c8 <metal_segment_itim_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	40228293          	addi	t0,t0,1026 # 204015c8 <metal_segment_itim_source_start>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	8cc18393          	addi	t2,gp,-1844 # 8000086c <metal_segment_bss_target_end>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <__malloc_free_list>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00003517          	auipc	a0,0x3
20400224:	b1050513          	addi	a0,a0,-1264 # 20402d30 <__libc_fini_array>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	2cd020ef          	jal	ra,20402cf4 <atexit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	33b020ef          	jal	ra,20402d66 <__libc_init_array>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00003517          	auipc	a0,0x3
20400234:	ddc50513          	addi	a0,a0,-548 # 2040300c <metal_fini_run>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	2bd020ef          	jal	ra,20402cf4 <atexit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	5bd020ef          	jal	ra,20402ff8 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	7b058593          	addi	a1,a1,1968 # 20400a50 <argv>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	7ac60613          	addi	a2,a2,1964 # 20400a54 <envp>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	257020ef          	jal	ra,20402d08 <exit>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	32e010ef          	jal	ra,20401600 <main>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20400302:	57d020ef          	jal	ra,2040307e <metal_uart_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	287050ef          	jal	ra,20405d9e <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
2040032e:	2fd050ef          	jal	ra,20405e2a <__metal_driver_sifive_fe310_g000_pll_init>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	25b050ef          	jal	ra,20405d9e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20400358:	1a2070ef          	jal	ra,204074fa <metal_clock_set_rate_hz>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401600 <main>:
main():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:24
struct metal_cpu *cpu;
struct metal_interrupt *cpu_intr, *tmr_intr;
int tmr_id;
volatile uint32_t timer_isr_flag;

int main(void) {
20401600:	1141                	addi	sp,sp,-16
20401602:	c606                	sw	ra,12(sp)
20401604:	c422                	sw	s0,8(sp)
20401606:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:26
  #ifdef CHECKSUM_TEST
  test_checksum();
20401608:	20c9                	jal	204016ca <test_checksum>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:28
  #endif
  printf("test");
2040160a:	204007b7          	lui	a5,0x20400
2040160e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20401612:	2365                	jal	20401bba <iprintf>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:29
  return 0;
20401614:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/sifive-welcome.c:30
}
20401616:	853e                	mv	a0,a5
20401618:	40b2                	lw	ra,12(sp)
2040161a:	4422                	lw	s0,8(sp)
2040161c:	0141                	addi	sp,sp,16
2040161e:	8082                	ret

20401620 <check_proprietary_crc>:
check_proprietary_crc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:39
#define L2_SIZE 14
#define IP_HEADER_SIZE 20
#define CRC32_SIZE 4

bool check_proprietary_crc(const uint8_t* buf, size_t len)
{
20401620:	7179                	addi	sp,sp,-48
20401622:	d606                	sw	ra,44(sp)
20401624:	d422                	sw	s0,40(sp)
20401626:	1800                	addi	s0,sp,48
20401628:	fca42e23          	sw	a0,-36(s0)
2040162c:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:40
  const uint8_t* ptr = buf;
20401630:	fdc42783          	lw	a5,-36(s0)
20401634:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:42
  #ifdef L2_ENABLE
  if(len < MIN_PACKET_SIZE)
20401638:	fd842703          	lw	a4,-40(s0)
2040163c:	03b00793          	li	a5,59
20401640:	00e7e463          	bltu	a5,a4,20401648 <check_proprietary_crc+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:45
  {
    //ethernet Ð¿Ð°ÐºÐµÑ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ 60 Ð±Ð°Ð¹Ñ
    return false;
20401644:	4781                	li	a5,0
20401646:	a8ad                	j	204016c0 <check_proprietary_crc+0xa0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:47
  }
  ptr = ptr + 12;
20401648:	fec42783          	lw	a5,-20(s0)
2040164c:	07b1                	addi	a5,a5,12
2040164e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:48
  uint16_t eth_type = ntohs(*((uint16_t*)ptr));
20401652:	fec42783          	lw	a5,-20(s0)
20401656:	0007d783          	lhu	a5,0(a5)
2040165a:	853e                	mv	a0,a5
2040165c:	229d                	jal	204017c2 <ntohs>
2040165e:	87aa                	mv	a5,a0
20401660:	fef41523          	sh	a5,-22(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:49
  if(eth_type != IP4TYPE)
20401664:	fea45783          	lhu	a5,-22(s0)
20401668:	80078793          	addi	a5,a5,-2048
2040166c:	c399                	beqz	a5,20401672 <check_proprietary_crc+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:52
  {
    // Ð² ÑÐ· Ð½Ðµ ÑÐ°ÑÐ¿Ð¸ÑÐ°Ð½ ÑÑÐ¾Ñ Ð²Ð°ÑÐ¸Ð°Ð½Ñ, Ð¾ÑÐ±ÑÐ¾ÑÐ¸Ð¼ Ð¿Ð°ÐºÐµÑ
    return false;
2040166e:	4781                	li	a5,0
20401670:	a881                	j	204016c0 <check_proprietary_crc+0xa0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:54
  }
  ptr = ptr + 2;
20401672:	fec42783          	lw	a5,-20(s0)
20401676:	0789                	addi	a5,a5,2
20401678:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:57
  #endif

  uint32_t calc_crc = htonl(xcrc32 (ptr, len - L2_SIZE - CRC32_SIZE, 0xffffffff));
2040167c:	fd842783          	lw	a5,-40(s0)
20401680:	17b9                	addi	a5,a5,-18
20401682:	567d                	li	a2,-1
20401684:	85be                	mv	a1,a5
20401686:	fec42503          	lw	a0,-20(s0)
2040168a:	2aa9                	jal	204017e4 <xcrc32>
2040168c:	87aa                	mv	a5,a0
2040168e:	853e                	mv	a0,a5
20401690:	28d5                	jal	20401784 <htonl>
20401692:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:58
  uint32_t crc_from_packet = htonl(*((uint32_t*)(ptr + len - L2_SIZE - CRC32_SIZE)));
20401696:	fd842783          	lw	a5,-40(s0)
2040169a:	17b9                	addi	a5,a5,-18
2040169c:	fec42703          	lw	a4,-20(s0)
204016a0:	97ba                	add	a5,a5,a4
204016a2:	439c                	lw	a5,0(a5)
204016a4:	853e                	mv	a0,a5
204016a6:	28f9                	jal	20401784 <htonl>
204016a8:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:60

  return (calc_crc == crc_from_packet);
204016ac:	fe442703          	lw	a4,-28(s0)
204016b0:	fe042783          	lw	a5,-32(s0)
204016b4:	40f707b3          	sub	a5,a4,a5
204016b8:	0017b793          	seqz	a5,a5
204016bc:	0ff7f793          	zext.b	a5,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:61
}
204016c0:	853e                	mv	a0,a5
204016c2:	50b2                	lw	ra,44(sp)
204016c4:	5422                	lw	s0,40(sp)
204016c6:	6145                	addi	sp,sp,48
204016c8:	8082                	ret

204016ca <test_checksum>:
test_checksum():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:70
  return htonl(xcrc32 (data, len, 0xffffffff));
}

#ifdef CHECKSUM_TEST
void test_checksum()
{
204016ca:	1141                	addi	sp,sp,-16
204016cc:	c606                	sw	ra,12(sp)
204016ce:	c422                	sw	s0,8(sp)
204016d0:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:72
  // test with correct pkt
  assert(check_proprietary_crc(&correct_ping_packet[0], sizeof(correct_ping_packet)) == false);
204016d2:	06600593          	li	a1,102
204016d6:	204007b7          	lui	a5,0x20400
204016da:	37078513          	addi	a0,a5,880 # 20400370 <correct_ping_packet>
204016de:	3789                	jal	20401620 <check_proprietary_crc>
204016e0:	87aa                	mv	a5,a0
204016e2:	0017c793          	xori	a5,a5,1
204016e6:	0ff7f793          	zext.b	a5,a5
204016ea:	e385                	bnez	a5,2040170a <test_checksum+0x40>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:72 (discriminator 1)
204016ec:	204007b7          	lui	a5,0x20400
204016f0:	44078693          	addi	a3,a5,1088 # 20400440 <incorrect_ping_packet+0x68>
204016f4:	204007b7          	lui	a5,0x20400
204016f8:	50c78613          	addi	a2,a5,1292 # 2040050c <__func__.0>
204016fc:	04800593          	li	a1,72
20401700:	204007b7          	lui	a5,0x20400
20401704:	49878513          	addi	a0,a5,1176 # 20400498 <incorrect_ping_packet+0xc0>
20401708:	22b1                	jal	20401854 <__assert_func>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:74
  // test with incorrect pkt
  assert(check_proprietary_crc(&incorrect_ping_packet[0], sizeof(incorrect_ping_packet)) == false);
2040170a:	06600593          	li	a1,102
2040170e:	204007b7          	lui	a5,0x20400
20401712:	3d878513          	addi	a0,a5,984 # 204003d8 <incorrect_ping_packet>
20401716:	3729                	jal	20401620 <check_proprietary_crc>
20401718:	87aa                	mv	a5,a0
2040171a:	0017c793          	xori	a5,a5,1
2040171e:	0ff7f793          	zext.b	a5,a5
20401722:	e385                	bnez	a5,20401742 <test_checksum+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:74 (discriminator 1)
20401724:	204007b7          	lui	a5,0x20400
20401728:	4b078693          	addi	a3,a5,1200 # 204004b0 <incorrect_ping_packet+0xd8>
2040172c:	204007b7          	lui	a5,0x20400
20401730:	50c78613          	addi	a2,a5,1292 # 2040050c <__func__.0>
20401734:	04a00593          	li	a1,74
20401738:	204007b7          	lui	a5,0x20400
2040173c:	49878513          	addi	a0,a5,1176 # 20400498 <incorrect_ping_packet+0xc0>
20401740:	2a11                	jal	20401854 <__assert_func>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/proprietary_pkt_util.c:75
}
20401742:	0001                	nop
20401744:	40b2                	lw	ra,12(sp)
20401746:	4422                	lw	s0,8(sp)
20401748:	0141                	addi	sp,sp,16
2040174a:	8082                	ret

2040174c <htons>:
htons():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:5
#include "./project_cfg.h"
#include "netinet_in.h"

#if IS_LITTLE_ENDIAN
uint16_t htons(uint16_t v) {
2040174c:	1101                	addi	sp,sp,-32
2040174e:	ce22                	sw	s0,28(sp)
20401750:	1000                	addi	s0,sp,32
20401752:	87aa                	mv	a5,a0
20401754:	fef41723          	sh	a5,-18(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:6
  return (v >> 8) | (v << 8);
20401758:	fee45783          	lhu	a5,-18(s0)
2040175c:	83a1                	srli	a5,a5,0x8
2040175e:	07c2                	slli	a5,a5,0x10
20401760:	83c1                	srli	a5,a5,0x10
20401762:	01079713          	slli	a4,a5,0x10
20401766:	8741                	srai	a4,a4,0x10
20401768:	fee45783          	lhu	a5,-18(s0)
2040176c:	07a2                	slli	a5,a5,0x8
2040176e:	07c2                	slli	a5,a5,0x10
20401770:	87c1                	srai	a5,a5,0x10
20401772:	8fd9                	or	a5,a5,a4
20401774:	07c2                	slli	a5,a5,0x10
20401776:	87c1                	srai	a5,a5,0x10
20401778:	07c2                	slli	a5,a5,0x10
2040177a:	83c1                	srli	a5,a5,0x10
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:7
}
2040177c:	853e                	mv	a0,a5
2040177e:	4472                	lw	s0,28(sp)
20401780:	6105                	addi	sp,sp,32
20401782:	8082                	ret

20401784 <htonl>:
htonl():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:8
uint32_t htonl(uint32_t v) {
20401784:	1101                	addi	sp,sp,-32
20401786:	ce06                	sw	ra,28(sp)
20401788:	cc22                	sw	s0,24(sp)
2040178a:	ca26                	sw	s1,20(sp)
2040178c:	1000                	addi	s0,sp,32
2040178e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:9
  return htons(v >> 16) | (htons((uint16_t) v) << 16);
20401792:	fec42783          	lw	a5,-20(s0)
20401796:	83c1                	srli	a5,a5,0x10
20401798:	07c2                	slli	a5,a5,0x10
2040179a:	83c1                	srli	a5,a5,0x10
2040179c:	853e                	mv	a0,a5
2040179e:	377d                	jal	2040174c <htons>
204017a0:	87aa                	mv	a5,a0
204017a2:	84be                	mv	s1,a5
204017a4:	fec42783          	lw	a5,-20(s0)
204017a8:	07c2                	slli	a5,a5,0x10
204017aa:	83c1                	srli	a5,a5,0x10
204017ac:	853e                	mv	a0,a5
204017ae:	3f79                	jal	2040174c <htons>
204017b0:	87aa                	mv	a5,a0
204017b2:	07c2                	slli	a5,a5,0x10
204017b4:	8fc5                	or	a5,a5,s1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:10
}
204017b6:	853e                	mv	a0,a5
204017b8:	40f2                	lw	ra,28(sp)
204017ba:	4462                	lw	s0,24(sp)
204017bc:	44d2                	lw	s1,20(sp)
204017be:	6105                	addi	sp,sp,32
204017c0:	8082                	ret

204017c2 <ntohs>:
ntohs():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:20
uint32_t htonl(uint32_t v) {
  return v;
}
#endif

uint16_t ntohs(uint16_t v) {
204017c2:	1101                	addi	sp,sp,-32
204017c4:	ce06                	sw	ra,28(sp)
204017c6:	cc22                	sw	s0,24(sp)
204017c8:	1000                	addi	s0,sp,32
204017ca:	87aa                	mv	a5,a0
204017cc:	fef41723          	sh	a5,-18(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:21
  return htons(v);
204017d0:	fee45783          	lhu	a5,-18(s0)
204017d4:	853e                	mv	a0,a5
204017d6:	3f9d                	jal	2040174c <htons>
204017d8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/netinet_in.c:22
}
204017da:	853e                	mv	a0,a5
204017dc:	40f2                	lw	ra,28(sp)
204017de:	4462                	lw	s0,24(sp)
204017e0:	6105                	addi	sp,sp,32
204017e2:	8082                	ret

204017e4 <xcrc32>:
xcrc32():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:125
@end deftypefn
*/

uint32_t
xcrc32 (const uint8_t *buf, size_t len, uint32_t init)
{
204017e4:	7179                	addi	sp,sp,-48
204017e6:	d622                	sw	s0,44(sp)
204017e8:	1800                	addi	s0,sp,48
204017ea:	fca42e23          	sw	a0,-36(s0)
204017ee:	fcb42c23          	sw	a1,-40(s0)
204017f2:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:126
  uint32_t crc = init;
204017f6:	fd442783          	lw	a5,-44(s0)
204017fa:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:127
  while (len--)
204017fe:	a835                	j	2040183a <xcrc32+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:129
    {
      crc = (crc << 8) ^ crc32_table[((crc >> 24) ^ *buf) & 255];
20401800:	fec42783          	lw	a5,-20(s0)
20401804:	00879713          	slli	a4,a5,0x8
20401808:	fec42783          	lw	a5,-20(s0)
2040180c:	83e1                	srli	a5,a5,0x18
2040180e:	fdc42683          	lw	a3,-36(s0)
20401812:	0006c683          	lbu	a3,0(a3)
20401816:	8fb5                	xor	a5,a5,a3
20401818:	0ff7f793          	zext.b	a5,a5
2040181c:	204006b7          	lui	a3,0x20400
20401820:	51c68693          	addi	a3,a3,1308 # 2040051c <crc32_table>
20401824:	078a                	slli	a5,a5,0x2
20401826:	97b6                	add	a5,a5,a3
20401828:	439c                	lw	a5,0(a5)
2040182a:	8fb9                	xor	a5,a5,a4
2040182c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:130
      buf++;
20401830:	fdc42783          	lw	a5,-36(s0)
20401834:	0785                	addi	a5,a5,1
20401836:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:127
  while (len--)
2040183a:	fd842783          	lw	a5,-40(s0)
2040183e:	fff78713          	addi	a4,a5,-1
20401842:	fce42c23          	sw	a4,-40(s0)
20401846:	ffcd                	bnez	a5,20401800 <xcrc32+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:132
    }
  return crc;
20401848:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/src/crc32.c:133
}
2040184c:	853e                	mv	a0,a5
2040184e:	5432                	lw	s0,44(sp)
20401850:	6145                	addi	sp,sp,48
20401852:	8082                	ret

20401854 <__assert_func>:
__assert_func():
20401854:	1141                	addi	sp,sp,-16
20401856:	5fbff797          	auipc	a5,0x5fbff
2040185a:	f4a7a783          	lw	a5,-182(a5) # 800007a0 <_impure_ptr>
2040185e:	8832                	mv	a6,a2
20401860:	c606                	sw	ra,12(sp)
20401862:	88aa                	mv	a7,a0
20401864:	872e                	mv	a4,a1
20401866:	47c8                	lw	a0,12(a5)
20401868:	8636                	mv	a2,a3
2040186a:	fffff797          	auipc	a5,0xfffff
2040186e:	0b278793          	addi	a5,a5,178 # 2040091c <crc32_table+0x400>
20401872:	00081763          	bnez	a6,20401880 <__assert_func+0x2c>
20401876:	fffff797          	auipc	a5,0xfffff
2040187a:	0b278793          	addi	a5,a5,178 # 20400928 <crc32_table+0x40c>
2040187e:	883e                	mv	a6,a5
20401880:	86c6                	mv	a3,a7
20401882:	fffff597          	auipc	a1,0xfffff
20401886:	0aa58593          	addi	a1,a1,170 # 2040092c <crc32_table+0x410>
2040188a:	2011                	jal	2040188e <fiprintf>
2040188c:	2b15                	jal	20401dc0 <abort>

2040188e <fiprintf>:
fprintf():
2040188e:	7139                	addi	sp,sp,-64
20401890:	d432                	sw	a2,40(sp)
20401892:	d636                	sw	a3,44(sp)
20401894:	862e                	mv	a2,a1
20401896:	1034                	addi	a3,sp,40
20401898:	85aa                	mv	a1,a0
2040189a:	5fbff517          	auipc	a0,0x5fbff
2040189e:	f0652503          	lw	a0,-250(a0) # 800007a0 <_impure_ptr>
204018a2:	ce06                	sw	ra,28(sp)
204018a4:	d83a                	sw	a4,48(sp)
204018a6:	da3e                	sw	a5,52(sp)
204018a8:	dc42                	sw	a6,56(sp)
204018aa:	de46                	sw	a7,60(sp)
204018ac:	c636                	sw	a3,12(sp)
204018ae:	288d                	jal	20401920 <_vfiprintf_r>
204018b0:	40f2                	lw	ra,28(sp)
204018b2:	6121                	addi	sp,sp,64
204018b4:	8082                	ret

204018b6 <__sfputc_r>:
__sfputc_r():
204018b6:	461c                	lw	a5,8(a2)
204018b8:	17fd                	addi	a5,a5,-1
204018ba:	c61c                	sw	a5,8(a2)
204018bc:	0007d963          	bgez	a5,204018ce <__sfputc_r+0x18>
204018c0:	4e18                	lw	a4,24(a2)
204018c2:	00e7c563          	blt	a5,a4,204018cc <__sfputc_r+0x16>
204018c6:	47a9                	li	a5,10
204018c8:	00f59363          	bne	a1,a5,204018ce <__sfputc_r+0x18>
204018cc:	a62d                	j	20401bf6 <__swbuf_r>
204018ce:	421c                	lw	a5,0(a2)
204018d0:	852e                	mv	a0,a1
204018d2:	00178713          	addi	a4,a5,1
204018d6:	c218                	sw	a4,0(a2)
204018d8:	00b78023          	sb	a1,0(a5)
204018dc:	8082                	ret

204018de <__sfputs_r>:
__sfputs_r():
204018de:	1101                	addi	sp,sp,-32
204018e0:	cc22                	sw	s0,24(sp)
204018e2:	ca26                	sw	s1,20(sp)
204018e4:	c84a                	sw	s2,16(sp)
204018e6:	c64e                	sw	s3,12(sp)
204018e8:	c452                	sw	s4,8(sp)
204018ea:	ce06                	sw	ra,28(sp)
204018ec:	892a                	mv	s2,a0
204018ee:	89ae                	mv	s3,a1
204018f0:	8432                	mv	s0,a2
204018f2:	00d604b3          	add	s1,a2,a3
204018f6:	5a7d                	li	s4,-1
204018f8:	00941463          	bne	s0,s1,20401900 <__sfputs_r+0x22>
204018fc:	4501                	li	a0,0
204018fe:	a809                	j	20401910 <__sfputs_r+0x32>
20401900:	00044583          	lbu	a1,0(s0)
20401904:	864e                	mv	a2,s3
20401906:	854a                	mv	a0,s2
20401908:	377d                	jal	204018b6 <__sfputc_r>
2040190a:	0405                	addi	s0,s0,1
2040190c:	ff4516e3          	bne	a0,s4,204018f8 <__sfputs_r+0x1a>
20401910:	40f2                	lw	ra,28(sp)
20401912:	4462                	lw	s0,24(sp)
20401914:	44d2                	lw	s1,20(sp)
20401916:	4942                	lw	s2,16(sp)
20401918:	49b2                	lw	s3,12(sp)
2040191a:	4a22                	lw	s4,8(sp)
2040191c:	6105                	addi	sp,sp,32
2040191e:	8082                	ret

20401920 <_vfiprintf_r>:
_vfiprintf_r():
20401920:	7135                	addi	sp,sp,-160
20401922:	cd22                	sw	s0,152(sp)
20401924:	cb26                	sw	s1,148(sp)
20401926:	c94a                	sw	s2,144(sp)
20401928:	c74e                	sw	s3,140(sp)
2040192a:	cf06                	sw	ra,156(sp)
2040192c:	c552                	sw	s4,136(sp)
2040192e:	c356                	sw	s5,132(sp)
20401930:	c15a                	sw	s6,128(sp)
20401932:	dede                	sw	s7,124(sp)
20401934:	dce2                	sw	s8,120(sp)
20401936:	dae6                	sw	s9,116(sp)
20401938:	89aa                	mv	s3,a0
2040193a:	84ae                	mv	s1,a1
2040193c:	8932                	mv	s2,a2
2040193e:	8436                	mv	s0,a3
20401940:	c501                	beqz	a0,20401948 <_vfiprintf_r+0x28>
20401942:	4d1c                	lw	a5,24(a0)
20401944:	e391                	bnez	a5,20401948 <_vfiprintf_r+0x28>
20401946:	25ed                	jal	20402030 <__sinit>
20401948:	fffff797          	auipc	a5,0xfffff
2040194c:	04878793          	addi	a5,a5,72 # 20400990 <__sf_fake_stdin>
20401950:	0cf49c63          	bne	s1,a5,20401a28 <_vfiprintf_r+0x108>
20401954:	0049a483          	lw	s1,4(s3)
20401958:	00c4d783          	lhu	a5,12(s1)
2040195c:	8ba1                	andi	a5,a5,8
2040195e:	c7fd                	beqz	a5,20401a4c <_vfiprintf_r+0x12c>
20401960:	489c                	lw	a5,16(s1)
20401962:	c7ed                	beqz	a5,20401a4c <_vfiprintf_r+0x12c>
20401964:	02000793          	li	a5,32
20401968:	02f104a3          	sb	a5,41(sp)
2040196c:	03000793          	li	a5,48
20401970:	d202                	sw	zero,36(sp)
20401972:	02f10523          	sb	a5,42(sp)
20401976:	c622                	sw	s0,12(sp)
20401978:	02500b93          	li	s7,37
2040197c:	fffffa97          	auipc	s5,0xfffff
20401980:	fe0a8a93          	addi	s5,s5,-32 # 2040095c <crc32_table+0x440>
20401984:	4c05                	li	s8,1
20401986:	4b29                	li	s6,10
20401988:	844a                	mv	s0,s2
2040198a:	00044783          	lbu	a5,0(s0)
2040198e:	c399                	beqz	a5,20401994 <_vfiprintf_r+0x74>
20401990:	0f779063          	bne	a5,s7,20401a70 <_vfiprintf_r+0x150>
20401994:	41240cb3          	sub	s9,s0,s2
20401998:	01240d63          	beq	s0,s2,204019b2 <_vfiprintf_r+0x92>
2040199c:	86e6                	mv	a3,s9
2040199e:	864a                	mv	a2,s2
204019a0:	85a6                	mv	a1,s1
204019a2:	854e                	mv	a0,s3
204019a4:	3f2d                	jal	204018de <__sfputs_r>
204019a6:	57fd                	li	a5,-1
204019a8:	1ef50663          	beq	a0,a5,20401b94 <_vfiprintf_r+0x274>
204019ac:	5792                	lw	a5,36(sp)
204019ae:	97e6                	add	a5,a5,s9
204019b0:	d23e                	sw	a5,36(sp)
204019b2:	00044783          	lbu	a5,0(s0)
204019b6:	1c078f63          	beqz	a5,20401b94 <_vfiprintf_r+0x274>
204019ba:	57fd                	li	a5,-1
204019bc:	00140913          	addi	s2,s0,1
204019c0:	c802                	sw	zero,16(sp)
204019c2:	ce02                	sw	zero,28(sp)
204019c4:	ca3e                	sw	a5,20(sp)
204019c6:	cc02                	sw	zero,24(sp)
204019c8:	040109a3          	sb	zero,83(sp)
204019cc:	d482                	sw	zero,104(sp)
204019ce:	00094583          	lbu	a1,0(s2)
204019d2:	4615                	li	a2,5
204019d4:	8556                	mv	a0,s5
204019d6:	0c5000ef          	jal	ra,2040229a <memchr>
204019da:	47c2                	lw	a5,16(sp)
204019dc:	00190413          	addi	s0,s2,1
204019e0:	e951                	bnez	a0,20401a74 <_vfiprintf_r+0x154>
204019e2:	0107f713          	andi	a4,a5,16
204019e6:	c709                	beqz	a4,204019f0 <_vfiprintf_r+0xd0>
204019e8:	02000713          	li	a4,32
204019ec:	04e109a3          	sb	a4,83(sp)
204019f0:	0087f713          	andi	a4,a5,8
204019f4:	c709                	beqz	a4,204019fe <_vfiprintf_r+0xde>
204019f6:	02b00713          	li	a4,43
204019fa:	04e109a3          	sb	a4,83(sp)
204019fe:	00094683          	lbu	a3,0(s2)
20401a02:	02a00713          	li	a4,42
20401a06:	06e68f63          	beq	a3,a4,20401a84 <_vfiprintf_r+0x164>
20401a0a:	47f2                	lw	a5,28(sp)
20401a0c:	844a                	mv	s0,s2
20401a0e:	4681                	li	a3,0
20401a10:	4625                	li	a2,9
20401a12:	00044703          	lbu	a4,0(s0)
20401a16:	00140593          	addi	a1,s0,1
20401a1a:	fd070713          	addi	a4,a4,-48 # 1fffd0 <__heap_size+0x1ff7d0>
20401a1e:	0ae67863          	bgeu	a2,a4,20401ace <_vfiprintf_r+0x1ae>
20401a22:	caad                	beqz	a3,20401a94 <_vfiprintf_r+0x174>
20401a24:	ce3e                	sw	a5,28(sp)
20401a26:	a0bd                	j	20401a94 <_vfiprintf_r+0x174>
20401a28:	fffff797          	auipc	a5,0xfffff
20401a2c:	f8878793          	addi	a5,a5,-120 # 204009b0 <__sf_fake_stdout>
20401a30:	00f49563          	bne	s1,a5,20401a3a <_vfiprintf_r+0x11a>
20401a34:	0089a483          	lw	s1,8(s3)
20401a38:	b705                	j	20401958 <_vfiprintf_r+0x38>
20401a3a:	fffff797          	auipc	a5,0xfffff
20401a3e:	f3678793          	addi	a5,a5,-202 # 20400970 <__sf_fake_stderr>
20401a42:	f0f49be3          	bne	s1,a5,20401958 <_vfiprintf_r+0x38>
20401a46:	00c9a483          	lw	s1,12(s3)
20401a4a:	b739                	j	20401958 <_vfiprintf_r+0x38>
20401a4c:	85a6                	mv	a1,s1
20401a4e:	854e                	mv	a0,s3
20401a50:	249d                	jal	20401cb6 <__swsetup_r>
20401a52:	d909                	beqz	a0,20401964 <_vfiprintf_r+0x44>
20401a54:	557d                	li	a0,-1
20401a56:	40fa                	lw	ra,156(sp)
20401a58:	446a                	lw	s0,152(sp)
20401a5a:	44da                	lw	s1,148(sp)
20401a5c:	494a                	lw	s2,144(sp)
20401a5e:	49ba                	lw	s3,140(sp)
20401a60:	4a2a                	lw	s4,136(sp)
20401a62:	4a9a                	lw	s5,132(sp)
20401a64:	4b0a                	lw	s6,128(sp)
20401a66:	5bf6                	lw	s7,124(sp)
20401a68:	5c66                	lw	s8,120(sp)
20401a6a:	5cd6                	lw	s9,116(sp)
20401a6c:	610d                	addi	sp,sp,160
20401a6e:	8082                	ret
20401a70:	0405                	addi	s0,s0,1
20401a72:	bf21                	j	2040198a <_vfiprintf_r+0x6a>
20401a74:	41550533          	sub	a0,a0,s5
20401a78:	00ac1533          	sll	a0,s8,a0
20401a7c:	8fc9                	or	a5,a5,a0
20401a7e:	c83e                	sw	a5,16(sp)
20401a80:	8922                	mv	s2,s0
20401a82:	b7b1                	j	204019ce <_vfiprintf_r+0xae>
20401a84:	4732                	lw	a4,12(sp)
20401a86:	00470693          	addi	a3,a4,4
20401a8a:	4318                	lw	a4,0(a4)
20401a8c:	c636                	sw	a3,12(sp)
20401a8e:	02074963          	bltz	a4,20401ac0 <_vfiprintf_r+0x1a0>
20401a92:	ce3a                	sw	a4,28(sp)
20401a94:	00044703          	lbu	a4,0(s0)
20401a98:	02e00793          	li	a5,46
20401a9c:	04f71f63          	bne	a4,a5,20401afa <_vfiprintf_r+0x1da>
20401aa0:	00144703          	lbu	a4,1(s0)
20401aa4:	02a00793          	li	a5,42
20401aa8:	02f71b63          	bne	a4,a5,20401ade <_vfiprintf_r+0x1be>
20401aac:	47b2                	lw	a5,12(sp)
20401aae:	0409                	addi	s0,s0,2
20401ab0:	00478713          	addi	a4,a5,4
20401ab4:	439c                	lw	a5,0(a5)
20401ab6:	c63a                	sw	a4,12(sp)
20401ab8:	0207c163          	bltz	a5,20401ada <_vfiprintf_r+0x1ba>
20401abc:	ca3e                	sw	a5,20(sp)
20401abe:	a835                	j	20401afa <_vfiprintf_r+0x1da>
20401ac0:	40e00733          	neg	a4,a4
20401ac4:	0027e793          	ori	a5,a5,2
20401ac8:	ce3a                	sw	a4,28(sp)
20401aca:	c83e                	sw	a5,16(sp)
20401acc:	b7e1                	j	20401a94 <_vfiprintf_r+0x174>
20401ace:	036787b3          	mul	a5,a5,s6
20401ad2:	842e                	mv	s0,a1
20401ad4:	4685                	li	a3,1
20401ad6:	97ba                	add	a5,a5,a4
20401ad8:	bf2d                	j	20401a12 <_vfiprintf_r+0xf2>
20401ada:	57fd                	li	a5,-1
20401adc:	b7c5                	j	20401abc <_vfiprintf_r+0x19c>
20401ade:	0405                	addi	s0,s0,1
20401ae0:	ca02                	sw	zero,20(sp)
20401ae2:	4681                	li	a3,0
20401ae4:	4781                	li	a5,0
20401ae6:	4625                	li	a2,9
20401ae8:	00044703          	lbu	a4,0(s0)
20401aec:	00140593          	addi	a1,s0,1
20401af0:	fd070713          	addi	a4,a4,-48
20401af4:	06e67663          	bgeu	a2,a4,20401b60 <_vfiprintf_r+0x240>
20401af8:	f2f1                	bnez	a3,20401abc <_vfiprintf_r+0x19c>
20401afa:	00044583          	lbu	a1,0(s0)
20401afe:	460d                	li	a2,3
20401b00:	fffff517          	auipc	a0,0xfffff
20401b04:	e6450513          	addi	a0,a0,-412 # 20400964 <crc32_table+0x448>
20401b08:	792000ef          	jal	ra,2040229a <memchr>
20401b0c:	cd11                	beqz	a0,20401b28 <_vfiprintf_r+0x208>
20401b0e:	fffff797          	auipc	a5,0xfffff
20401b12:	e5678793          	addi	a5,a5,-426 # 20400964 <crc32_table+0x448>
20401b16:	8d1d                	sub	a0,a0,a5
20401b18:	04000793          	li	a5,64
20401b1c:	00a797b3          	sll	a5,a5,a0
20401b20:	4542                	lw	a0,16(sp)
20401b22:	0405                	addi	s0,s0,1
20401b24:	8d5d                	or	a0,a0,a5
20401b26:	c82a                	sw	a0,16(sp)
20401b28:	00044583          	lbu	a1,0(s0)
20401b2c:	4619                	li	a2,6
20401b2e:	fffff517          	auipc	a0,0xfffff
20401b32:	e3a50513          	addi	a0,a0,-454 # 20400968 <crc32_table+0x44c>
20401b36:	00140913          	addi	s2,s0,1
20401b3a:	02b10423          	sb	a1,40(sp)
20401b3e:	75c000ef          	jal	ra,2040229a <memchr>
20401b42:	c12d                	beqz	a0,20401ba4 <_vfiprintf_r+0x284>
20401b44:	00000793          	li	a5,0
20401b48:	e795                	bnez	a5,20401b74 <_vfiprintf_r+0x254>
20401b4a:	4742                	lw	a4,16(sp)
20401b4c:	47b2                	lw	a5,12(sp)
20401b4e:	10077713          	andi	a4,a4,256
20401b52:	cf09                	beqz	a4,20401b6c <_vfiprintf_r+0x24c>
20401b54:	0791                	addi	a5,a5,4
20401b56:	c63e                	sw	a5,12(sp)
20401b58:	5792                	lw	a5,36(sp)
20401b5a:	97d2                	add	a5,a5,s4
20401b5c:	d23e                	sw	a5,36(sp)
20401b5e:	b52d                	j	20401988 <_vfiprintf_r+0x68>
20401b60:	036787b3          	mul	a5,a5,s6
20401b64:	842e                	mv	s0,a1
20401b66:	4685                	li	a3,1
20401b68:	97ba                	add	a5,a5,a4
20401b6a:	bfbd                	j	20401ae8 <_vfiprintf_r+0x1c8>
20401b6c:	079d                	addi	a5,a5,7
20401b6e:	9be1                	andi	a5,a5,-8
20401b70:	07a1                	addi	a5,a5,8
20401b72:	b7d5                	j	20401b56 <_vfiprintf_r+0x236>
20401b74:	0078                	addi	a4,sp,12
20401b76:	00000697          	auipc	a3,0x0
20401b7a:	d6868693          	addi	a3,a3,-664 # 204018de <__sfputs_r>
20401b7e:	8626                	mv	a2,s1
20401b80:	080c                	addi	a1,sp,16
20401b82:	854e                	mv	a0,s3
20401b84:	00000097          	auipc	ra,0x0
20401b88:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20401b8c:	57fd                	li	a5,-1
20401b8e:	8a2a                	mv	s4,a0
20401b90:	fcf514e3          	bne	a0,a5,20401b58 <_vfiprintf_r+0x238>
20401b94:	00c4d783          	lhu	a5,12(s1)
20401b98:	0407f793          	andi	a5,a5,64
20401b9c:	ea079ce3          	bnez	a5,20401a54 <_vfiprintf_r+0x134>
20401ba0:	5512                	lw	a0,36(sp)
20401ba2:	bd55                	j	20401a56 <_vfiprintf_r+0x136>
20401ba4:	0078                	addi	a4,sp,12
20401ba6:	00000697          	auipc	a3,0x0
20401baa:	d3868693          	addi	a3,a3,-712 # 204018de <__sfputs_r>
20401bae:	8626                	mv	a2,s1
20401bb0:	080c                	addi	a1,sp,16
20401bb2:	854e                	mv	a0,s3
20401bb4:	233000ef          	jal	ra,204025e6 <_printf_i>
20401bb8:	bfd1                	j	20401b8c <_vfiprintf_r+0x26c>

20401bba <iprintf>:
printf():
20401bba:	715d                	addi	sp,sp,-80
20401bbc:	d422                	sw	s0,40(sp)
20401bbe:	d606                	sw	ra,44(sp)
20401bc0:	842a                	mv	s0,a0
20401bc2:	da2e                	sw	a1,52(sp)
20401bc4:	dc32                	sw	a2,56(sp)
20401bc6:	de36                	sw	a3,60(sp)
20401bc8:	c0ba                	sw	a4,64(sp)
20401bca:	c2be                	sw	a5,68(sp)
20401bcc:	c4c2                	sw	a6,72(sp)
20401bce:	c6c6                	sw	a7,76(sp)
20401bd0:	5fbff517          	auipc	a0,0x5fbff
20401bd4:	bd052503          	lw	a0,-1072(a0) # 800007a0 <_impure_ptr>
20401bd8:	c511                	beqz	a0,20401be4 <iprintf+0x2a>
20401bda:	4d1c                	lw	a5,24(a0)
20401bdc:	e781                	bnez	a5,20401be4 <iprintf+0x2a>
20401bde:	c62a                	sw	a0,12(sp)
20401be0:	2981                	jal	20402030 <__sinit>
20401be2:	4532                	lw	a0,12(sp)
20401be4:	450c                	lw	a1,8(a0)
20401be6:	1854                	addi	a3,sp,52
20401be8:	8622                	mv	a2,s0
20401bea:	ce36                	sw	a3,28(sp)
20401bec:	3b15                	jal	20401920 <_vfiprintf_r>
20401bee:	50b2                	lw	ra,44(sp)
20401bf0:	5422                	lw	s0,40(sp)
20401bf2:	6161                	addi	sp,sp,80
20401bf4:	8082                	ret

20401bf6 <__swbuf_r>:
__swbuf_r():
20401bf6:	1101                	addi	sp,sp,-32
20401bf8:	cc22                	sw	s0,24(sp)
20401bfa:	ca26                	sw	s1,20(sp)
20401bfc:	c84a                	sw	s2,16(sp)
20401bfe:	ce06                	sw	ra,28(sp)
20401c00:	c64e                	sw	s3,12(sp)
20401c02:	84aa                	mv	s1,a0
20401c04:	892e                	mv	s2,a1
20401c06:	8432                	mv	s0,a2
20401c08:	c501                	beqz	a0,20401c10 <__swbuf_r+0x1a>
20401c0a:	4d1c                	lw	a5,24(a0)
20401c0c:	e391                	bnez	a5,20401c10 <__swbuf_r+0x1a>
20401c0e:	210d                	jal	20402030 <__sinit>
20401c10:	fffff797          	auipc	a5,0xfffff
20401c14:	d8078793          	addi	a5,a5,-640 # 20400990 <__sf_fake_stdin>
20401c18:	06f41963          	bne	s0,a5,20401c8a <__swbuf_r+0x94>
20401c1c:	40c0                	lw	s0,4(s1)
20401c1e:	4c1c                	lw	a5,24(s0)
20401c20:	c41c                	sw	a5,8(s0)
20401c22:	00c45783          	lhu	a5,12(s0)
20401c26:	8ba1                	andi	a5,a5,8
20401c28:	c3c9                	beqz	a5,20401caa <__swbuf_r+0xb4>
20401c2a:	481c                	lw	a5,16(s0)
20401c2c:	cfbd                	beqz	a5,20401caa <__swbuf_r+0xb4>
20401c2e:	481c                	lw	a5,16(s0)
20401c30:	4008                	lw	a0,0(s0)
20401c32:	0ff97993          	zext.b	s3,s2
20401c36:	0ff97913          	zext.b	s2,s2
20401c3a:	8d1d                	sub	a0,a0,a5
20401c3c:	485c                	lw	a5,20(s0)
20401c3e:	00f54663          	blt	a0,a5,20401c4a <__swbuf_r+0x54>
20401c42:	85a2                	mv	a1,s0
20401c44:	8526                	mv	a0,s1
20401c46:	2cc1                	jal	20401f16 <_fflush_r>
20401c48:	e52d                	bnez	a0,20401cb2 <__swbuf_r+0xbc>
20401c4a:	441c                	lw	a5,8(s0)
20401c4c:	0505                	addi	a0,a0,1
20401c4e:	17fd                	addi	a5,a5,-1
20401c50:	c41c                	sw	a5,8(s0)
20401c52:	401c                	lw	a5,0(s0)
20401c54:	00178713          	addi	a4,a5,1
20401c58:	c018                	sw	a4,0(s0)
20401c5a:	01378023          	sb	s3,0(a5)
20401c5e:	485c                	lw	a5,20(s0)
20401c60:	00a78963          	beq	a5,a0,20401c72 <__swbuf_r+0x7c>
20401c64:	00c45783          	lhu	a5,12(s0)
20401c68:	8b85                	andi	a5,a5,1
20401c6a:	cb81                	beqz	a5,20401c7a <__swbuf_r+0x84>
20401c6c:	47a9                	li	a5,10
20401c6e:	00f91663          	bne	s2,a5,20401c7a <__swbuf_r+0x84>
20401c72:	85a2                	mv	a1,s0
20401c74:	8526                	mv	a0,s1
20401c76:	2445                	jal	20401f16 <_fflush_r>
20401c78:	ed0d                	bnez	a0,20401cb2 <__swbuf_r+0xbc>
20401c7a:	40f2                	lw	ra,28(sp)
20401c7c:	4462                	lw	s0,24(sp)
20401c7e:	44d2                	lw	s1,20(sp)
20401c80:	49b2                	lw	s3,12(sp)
20401c82:	854a                	mv	a0,s2
20401c84:	4942                	lw	s2,16(sp)
20401c86:	6105                	addi	sp,sp,32
20401c88:	8082                	ret
20401c8a:	fffff797          	auipc	a5,0xfffff
20401c8e:	d2678793          	addi	a5,a5,-730 # 204009b0 <__sf_fake_stdout>
20401c92:	00f41463          	bne	s0,a5,20401c9a <__swbuf_r+0xa4>
20401c96:	4480                	lw	s0,8(s1)
20401c98:	b759                	j	20401c1e <__swbuf_r+0x28>
20401c9a:	fffff797          	auipc	a5,0xfffff
20401c9e:	cd678793          	addi	a5,a5,-810 # 20400970 <__sf_fake_stderr>
20401ca2:	f6f41ee3          	bne	s0,a5,20401c1e <__swbuf_r+0x28>
20401ca6:	44c0                	lw	s0,12(s1)
20401ca8:	bf9d                	j	20401c1e <__swbuf_r+0x28>
20401caa:	85a2                	mv	a1,s0
20401cac:	8526                	mv	a0,s1
20401cae:	2021                	jal	20401cb6 <__swsetup_r>
20401cb0:	dd3d                	beqz	a0,20401c2e <__swbuf_r+0x38>
20401cb2:	597d                	li	s2,-1
20401cb4:	b7d9                	j	20401c7a <__swbuf_r+0x84>

20401cb6 <__swsetup_r>:
__swsetup_r():
20401cb6:	1141                	addi	sp,sp,-16
20401cb8:	c422                	sw	s0,8(sp)
20401cba:	c226                	sw	s1,4(sp)
20401cbc:	c04a                	sw	s2,0(sp)
20401cbe:	c606                	sw	ra,12(sp)
20401cc0:	5fbff497          	auipc	s1,0x5fbff
20401cc4:	ae04a483          	lw	s1,-1312(s1) # 800007a0 <_impure_ptr>
20401cc8:	892a                	mv	s2,a0
20401cca:	842e                	mv	s0,a1
20401ccc:	c489                	beqz	s1,20401cd6 <__swsetup_r+0x20>
20401cce:	4c9c                	lw	a5,24(s1)
20401cd0:	e399                	bnez	a5,20401cd6 <__swsetup_r+0x20>
20401cd2:	8526                	mv	a0,s1
20401cd4:	2eb1                	jal	20402030 <__sinit>
20401cd6:	fffff797          	auipc	a5,0xfffff
20401cda:	cba78793          	addi	a5,a5,-838 # 20400990 <__sf_fake_stdin>
20401cde:	02f41763          	bne	s0,a5,20401d0c <__swsetup_r+0x56>
20401ce2:	40c0                	lw	s0,4(s1)
20401ce4:	00c41783          	lh	a5,12(s0)
20401ce8:	01079713          	slli	a4,a5,0x10
20401cec:	0087f693          	andi	a3,a5,8
20401cf0:	8341                	srli	a4,a4,0x10
20401cf2:	eaad                	bnez	a3,20401d64 <__swsetup_r+0xae>
20401cf4:	01077693          	andi	a3,a4,16
20401cf8:	ea95                	bnez	a3,20401d2c <__swsetup_r+0x76>
20401cfa:	4725                	li	a4,9
20401cfc:	00e92023          	sw	a4,0(s2)
20401d00:	0407e793          	ori	a5,a5,64
20401d04:	00f41623          	sh	a5,12(s0)
20401d08:	557d                	li	a0,-1
20401d0a:	a871                	j	20401da6 <__swsetup_r+0xf0>
20401d0c:	fffff797          	auipc	a5,0xfffff
20401d10:	ca478793          	addi	a5,a5,-860 # 204009b0 <__sf_fake_stdout>
20401d14:	00f41463          	bne	s0,a5,20401d1c <__swsetup_r+0x66>
20401d18:	4480                	lw	s0,8(s1)
20401d1a:	b7e9                	j	20401ce4 <__swsetup_r+0x2e>
20401d1c:	fffff797          	auipc	a5,0xfffff
20401d20:	c5478793          	addi	a5,a5,-940 # 20400970 <__sf_fake_stderr>
20401d24:	fcf410e3          	bne	s0,a5,20401ce4 <__swsetup_r+0x2e>
20401d28:	44c0                	lw	s0,12(s1)
20401d2a:	bf6d                	j	20401ce4 <__swsetup_r+0x2e>
20401d2c:	8b11                	andi	a4,a4,4
20401d2e:	c70d                	beqz	a4,20401d58 <__swsetup_r+0xa2>
20401d30:	584c                	lw	a1,52(s0)
20401d32:	c989                	beqz	a1,20401d44 <__swsetup_r+0x8e>
20401d34:	04440793          	addi	a5,s0,68
20401d38:	00f58463          	beq	a1,a5,20401d40 <__swsetup_r+0x8a>
20401d3c:	854a                	mv	a0,s2
20401d3e:	2d39                	jal	2040235c <_free_r>
20401d40:	02042a23          	sw	zero,52(s0)
20401d44:	00c45783          	lhu	a5,12(s0)
20401d48:	00042223          	sw	zero,4(s0)
20401d4c:	fdb7f793          	andi	a5,a5,-37
20401d50:	00f41623          	sh	a5,12(s0)
20401d54:	481c                	lw	a5,16(s0)
20401d56:	c01c                	sw	a5,0(s0)
20401d58:	00c45783          	lhu	a5,12(s0)
20401d5c:	0087e793          	ori	a5,a5,8
20401d60:	00f41623          	sh	a5,12(s0)
20401d64:	481c                	lw	a5,16(s0)
20401d66:	ef81                	bnez	a5,20401d7e <__swsetup_r+0xc8>
20401d68:	00c45783          	lhu	a5,12(s0)
20401d6c:	20000713          	li	a4,512
20401d70:	2807f793          	andi	a5,a5,640
20401d74:	00e78563          	beq	a5,a4,20401d7e <__swsetup_r+0xc8>
20401d78:	85a2                	mv	a1,s0
20401d7a:	854a                	mv	a0,s2
20401d7c:	2141                	jal	204021fc <__smakebuf_r>
20401d7e:	00c41783          	lh	a5,12(s0)
20401d82:	01079713          	slli	a4,a5,0x10
20401d86:	0017f693          	andi	a3,a5,1
20401d8a:	8341                	srli	a4,a4,0x10
20401d8c:	c29d                	beqz	a3,20401db2 <__swsetup_r+0xfc>
20401d8e:	4854                	lw	a3,20(s0)
20401d90:	00042423          	sw	zero,8(s0)
20401d94:	40d006b3          	neg	a3,a3
20401d98:	cc14                	sw	a3,24(s0)
20401d9a:	4814                	lw	a3,16(s0)
20401d9c:	4501                	li	a0,0
20401d9e:	e681                	bnez	a3,20401da6 <__swsetup_r+0xf0>
20401da0:	08077713          	andi	a4,a4,128
20401da4:	ff31                	bnez	a4,20401d00 <__swsetup_r+0x4a>
20401da6:	40b2                	lw	ra,12(sp)
20401da8:	4422                	lw	s0,8(sp)
20401daa:	4492                	lw	s1,4(sp)
20401dac:	4902                	lw	s2,0(sp)
20401dae:	0141                	addi	sp,sp,16
20401db0:	8082                	ret
20401db2:	00277693          	andi	a3,a4,2
20401db6:	4601                	li	a2,0
20401db8:	e291                	bnez	a3,20401dbc <__swsetup_r+0x106>
20401dba:	4850                	lw	a2,20(s0)
20401dbc:	c410                	sw	a2,8(s0)
20401dbe:	bff1                	j	20401d9a <__swsetup_r+0xe4>

20401dc0 <abort>:
abort():
20401dc0:	1141                	addi	sp,sp,-16
20401dc2:	4519                	li	a0,6
20401dc4:	c606                	sw	ra,12(sp)
20401dc6:	321000ef          	jal	ra,204028e6 <raise>
20401dca:	4505                	li	a0,1
20401dcc:	55b000ef          	jal	ra,20402b26 <_exit>

20401dd0 <__sflush_r>:
__sflush_r():
20401dd0:	00c5d783          	lhu	a5,12(a1)
20401dd4:	1101                	addi	sp,sp,-32
20401dd6:	cc22                	sw	s0,24(sp)
20401dd8:	ca26                	sw	s1,20(sp)
20401dda:	ce06                	sw	ra,28(sp)
20401ddc:	c84a                	sw	s2,16(sp)
20401dde:	c64e                	sw	s3,12(sp)
20401de0:	0087f713          	andi	a4,a5,8
20401de4:	84aa                	mv	s1,a0
20401de6:	842e                	mv	s0,a1
20401de8:	e375                	bnez	a4,20401ecc <__sflush_r+0xfc>
20401dea:	41d8                	lw	a4,4(a1)
20401dec:	00e04763          	bgtz	a4,20401dfa <__sflush_r+0x2a>
20401df0:	41b8                	lw	a4,64(a1)
20401df2:	00e04463          	bgtz	a4,20401dfa <__sflush_r+0x2a>
20401df6:	4501                	li	a0,0
20401df8:	a875                	j	20401eb4 <__sflush_r+0xe4>
20401dfa:	5458                	lw	a4,44(s0)
20401dfc:	df6d                	beqz	a4,20401df6 <__sflush_r+0x26>
20401dfe:	6685                	lui	a3,0x1
20401e00:	0004a903          	lw	s2,0(s1)
20401e04:	8ff5                	and	a5,a5,a3
20401e06:	0004a023          	sw	zero,0(s1)
20401e0a:	cfa5                	beqz	a5,20401e82 <__sflush_r+0xb2>
20401e0c:	4868                	lw	a0,84(s0)
20401e0e:	00c45783          	lhu	a5,12(s0)
20401e12:	8b91                	andi	a5,a5,4
20401e14:	c799                	beqz	a5,20401e22 <__sflush_r+0x52>
20401e16:	405c                	lw	a5,4(s0)
20401e18:	8d1d                	sub	a0,a0,a5
20401e1a:	585c                	lw	a5,52(s0)
20401e1c:	c399                	beqz	a5,20401e22 <__sflush_r+0x52>
20401e1e:	403c                	lw	a5,64(s0)
20401e20:	8d1d                	sub	a0,a0,a5
20401e22:	545c                	lw	a5,44(s0)
20401e24:	500c                	lw	a1,32(s0)
20401e26:	862a                	mv	a2,a0
20401e28:	4681                	li	a3,0
20401e2a:	8526                	mv	a0,s1
20401e2c:	9782                	jalr	a5
20401e2e:	57fd                	li	a5,-1
20401e30:	00c45703          	lhu	a4,12(s0)
20401e34:	00f51d63          	bne	a0,a5,20401e4e <__sflush_r+0x7e>
20401e38:	4094                	lw	a3,0(s1)
20401e3a:	47f5                	li	a5,29
20401e3c:	08d7e363          	bltu	a5,a3,20401ec2 <__sflush_r+0xf2>
20401e40:	204007b7          	lui	a5,0x20400
20401e44:	0785                	addi	a5,a5,1
20401e46:	00d7d7b3          	srl	a5,a5,a3
20401e4a:	8b85                	andi	a5,a5,1
20401e4c:	cbbd                	beqz	a5,20401ec2 <__sflush_r+0xf2>
20401e4e:	481c                	lw	a5,16(s0)
20401e50:	00042223          	sw	zero,4(s0)
20401e54:	c01c                	sw	a5,0(s0)
20401e56:	6785                	lui	a5,0x1
20401e58:	8f7d                	and	a4,a4,a5
20401e5a:	c719                	beqz	a4,20401e68 <__sflush_r+0x98>
20401e5c:	57fd                	li	a5,-1
20401e5e:	00f51463          	bne	a0,a5,20401e66 <__sflush_r+0x96>
20401e62:	409c                	lw	a5,0(s1)
20401e64:	e391                	bnez	a5,20401e68 <__sflush_r+0x98>
20401e66:	c868                	sw	a0,84(s0)
20401e68:	584c                	lw	a1,52(s0)
20401e6a:	0124a023          	sw	s2,0(s1)
20401e6e:	d5c1                	beqz	a1,20401df6 <__sflush_r+0x26>
20401e70:	04440793          	addi	a5,s0,68
20401e74:	00f58463          	beq	a1,a5,20401e7c <__sflush_r+0xac>
20401e78:	8526                	mv	a0,s1
20401e7a:	21cd                	jal	2040235c <_free_r>
20401e7c:	02042a23          	sw	zero,52(s0)
20401e80:	bf9d                	j	20401df6 <__sflush_r+0x26>
20401e82:	500c                	lw	a1,32(s0)
20401e84:	4685                	li	a3,1
20401e86:	4601                	li	a2,0
20401e88:	8526                	mv	a0,s1
20401e8a:	9702                	jalr	a4
20401e8c:	57fd                	li	a5,-1
20401e8e:	f8f510e3          	bne	a0,a5,20401e0e <__sflush_r+0x3e>
20401e92:	409c                	lw	a5,0(s1)
20401e94:	dfad                	beqz	a5,20401e0e <__sflush_r+0x3e>
20401e96:	4775                	li	a4,29
20401e98:	00e78563          	beq	a5,a4,20401ea2 <__sflush_r+0xd2>
20401e9c:	4759                	li	a4,22
20401e9e:	00e79563          	bne	a5,a4,20401ea8 <__sflush_r+0xd8>
20401ea2:	0124a023          	sw	s2,0(s1)
20401ea6:	bf81                	j	20401df6 <__sflush_r+0x26>
20401ea8:	00c45783          	lhu	a5,12(s0)
20401eac:	0407e793          	ori	a5,a5,64
20401eb0:	00f41623          	sh	a5,12(s0)
20401eb4:	40f2                	lw	ra,28(sp)
20401eb6:	4462                	lw	s0,24(sp)
20401eb8:	44d2                	lw	s1,20(sp)
20401eba:	4942                	lw	s2,16(sp)
20401ebc:	49b2                	lw	s3,12(sp)
20401ebe:	6105                	addi	sp,sp,32
20401ec0:	8082                	ret
20401ec2:	04076713          	ori	a4,a4,64
20401ec6:	00e41623          	sh	a4,12(s0)
20401eca:	b7ed                	j	20401eb4 <__sflush_r+0xe4>
20401ecc:	0105a983          	lw	s3,16(a1)
20401ed0:	f20983e3          	beqz	s3,20401df6 <__sflush_r+0x26>
20401ed4:	0005a903          	lw	s2,0(a1)
20401ed8:	8b8d                	andi	a5,a5,3
20401eda:	0135a023          	sw	s3,0(a1)
20401ede:	41390933          	sub	s2,s2,s3
20401ee2:	4701                	li	a4,0
20401ee4:	e391                	bnez	a5,20401ee8 <__sflush_r+0x118>
20401ee6:	49d8                	lw	a4,20(a1)
20401ee8:	c418                	sw	a4,8(s0)
20401eea:	f12056e3          	blez	s2,20401df6 <__sflush_r+0x26>
20401eee:	541c                	lw	a5,40(s0)
20401ef0:	500c                	lw	a1,32(s0)
20401ef2:	86ca                	mv	a3,s2
20401ef4:	864e                	mv	a2,s3
20401ef6:	8526                	mv	a0,s1
20401ef8:	9782                	jalr	a5
20401efa:	00a04a63          	bgtz	a0,20401f0e <__sflush_r+0x13e>
20401efe:	00c45783          	lhu	a5,12(s0)
20401f02:	557d                	li	a0,-1
20401f04:	0407e793          	ori	a5,a5,64
20401f08:	00f41623          	sh	a5,12(s0)
20401f0c:	b765                	j	20401eb4 <__sflush_r+0xe4>
20401f0e:	99aa                	add	s3,s3,a0
20401f10:	40a90933          	sub	s2,s2,a0
20401f14:	bfd9                	j	20401eea <__sflush_r+0x11a>

20401f16 <_fflush_r>:
_fflush_r():
20401f16:	499c                	lw	a5,16(a1)
20401f18:	cfb9                	beqz	a5,20401f76 <_fflush_r+0x60>
20401f1a:	1101                	addi	sp,sp,-32
20401f1c:	cc22                	sw	s0,24(sp)
20401f1e:	ce06                	sw	ra,28(sp)
20401f20:	842a                	mv	s0,a0
20401f22:	c511                	beqz	a0,20401f2e <_fflush_r+0x18>
20401f24:	4d1c                	lw	a5,24(a0)
20401f26:	e781                	bnez	a5,20401f2e <_fflush_r+0x18>
20401f28:	c62e                	sw	a1,12(sp)
20401f2a:	2219                	jal	20402030 <__sinit>
20401f2c:	45b2                	lw	a1,12(sp)
20401f2e:	fffff797          	auipc	a5,0xfffff
20401f32:	a6278793          	addi	a5,a5,-1438 # 20400990 <__sf_fake_stdin>
20401f36:	00f59b63          	bne	a1,a5,20401f4c <_fflush_r+0x36>
20401f3a:	404c                	lw	a1,4(s0)
20401f3c:	00c59783          	lh	a5,12(a1)
20401f40:	c795                	beqz	a5,20401f6c <_fflush_r+0x56>
20401f42:	8522                	mv	a0,s0
20401f44:	4462                	lw	s0,24(sp)
20401f46:	40f2                	lw	ra,28(sp)
20401f48:	6105                	addi	sp,sp,32
20401f4a:	b559                	j	20401dd0 <__sflush_r>
20401f4c:	fffff797          	auipc	a5,0xfffff
20401f50:	a6478793          	addi	a5,a5,-1436 # 204009b0 <__sf_fake_stdout>
20401f54:	00f59463          	bne	a1,a5,20401f5c <_fflush_r+0x46>
20401f58:	440c                	lw	a1,8(s0)
20401f5a:	b7cd                	j	20401f3c <_fflush_r+0x26>
20401f5c:	fffff797          	auipc	a5,0xfffff
20401f60:	a1478793          	addi	a5,a5,-1516 # 20400970 <__sf_fake_stderr>
20401f64:	fcf59ce3          	bne	a1,a5,20401f3c <_fflush_r+0x26>
20401f68:	444c                	lw	a1,12(s0)
20401f6a:	bfc9                	j	20401f3c <_fflush_r+0x26>
20401f6c:	40f2                	lw	ra,28(sp)
20401f6e:	4462                	lw	s0,24(sp)
20401f70:	4501                	li	a0,0
20401f72:	6105                	addi	sp,sp,32
20401f74:	8082                	ret
20401f76:	4501                	li	a0,0
20401f78:	8082                	ret

20401f7a <std>:
std():
20401f7a:	1141                	addi	sp,sp,-16
20401f7c:	c422                	sw	s0,8(sp)
20401f7e:	c606                	sw	ra,12(sp)
20401f80:	842a                	mv	s0,a0
20401f82:	00b51623          	sh	a1,12(a0)
20401f86:	00c51723          	sh	a2,14(a0)
20401f8a:	00052023          	sw	zero,0(a0)
20401f8e:	00052223          	sw	zero,4(a0)
20401f92:	00052423          	sw	zero,8(a0)
20401f96:	06052223          	sw	zero,100(a0)
20401f9a:	00052823          	sw	zero,16(a0)
20401f9e:	00052a23          	sw	zero,20(a0)
20401fa2:	00052c23          	sw	zero,24(a0)
20401fa6:	4621                	li	a2,8
20401fa8:	4581                	li	a1,0
20401faa:	05c50513          	addi	a0,a0,92
20401fae:	2619                	jal	204022b4 <memset>
20401fb0:	00001797          	auipc	a5,0x1
20401fb4:	97478793          	addi	a5,a5,-1676 # 20402924 <__sread>
20401fb8:	d05c                	sw	a5,36(s0)
20401fba:	00001797          	auipc	a5,0x1
20401fbe:	99a78793          	addi	a5,a5,-1638 # 20402954 <__swrite>
20401fc2:	d41c                	sw	a5,40(s0)
20401fc4:	00001797          	auipc	a5,0x1
20401fc8:	9de78793          	addi	a5,a5,-1570 # 204029a2 <__sseek>
20401fcc:	d45c                	sw	a5,44(s0)
20401fce:	00001797          	auipc	a5,0x1
20401fd2:	a0a78793          	addi	a5,a5,-1526 # 204029d8 <__sclose>
20401fd6:	40b2                	lw	ra,12(sp)
20401fd8:	d000                	sw	s0,32(s0)
20401fda:	d81c                	sw	a5,48(s0)
20401fdc:	4422                	lw	s0,8(sp)
20401fde:	0141                	addi	sp,sp,16
20401fe0:	8082                	ret

20401fe2 <_cleanup_r>:
_cleanup_r():
20401fe2:	00000597          	auipc	a1,0x0
20401fe6:	f3458593          	addi	a1,a1,-204 # 20401f16 <_fflush_r>
20401fea:	a2b1                	j	20402136 <_fwalk_reent>

20401fec <__sfmoreglue>:
__sfmoreglue():
20401fec:	1141                	addi	sp,sp,-16
20401fee:	c226                	sw	s1,4(sp)
20401ff0:	06800613          	li	a2,104
20401ff4:	fff58493          	addi	s1,a1,-1
20401ff8:	02c484b3          	mul	s1,s1,a2
20401ffc:	c04a                	sw	s2,0(sp)
20401ffe:	892e                	mv	s2,a1
20402000:	c422                	sw	s0,8(sp)
20402002:	c606                	sw	ra,12(sp)
20402004:	07448593          	addi	a1,s1,116
20402008:	2eed                	jal	20402402 <_malloc_r>
2040200a:	842a                	mv	s0,a0
2040200c:	c919                	beqz	a0,20402022 <__sfmoreglue+0x36>
2040200e:	00052023          	sw	zero,0(a0)
20402012:	01252223          	sw	s2,4(a0)
20402016:	0531                	addi	a0,a0,12
20402018:	c408                	sw	a0,8(s0)
2040201a:	06848613          	addi	a2,s1,104
2040201e:	4581                	li	a1,0
20402020:	2c51                	jal	204022b4 <memset>
20402022:	40b2                	lw	ra,12(sp)
20402024:	8522                	mv	a0,s0
20402026:	4422                	lw	s0,8(sp)
20402028:	4492                	lw	s1,4(sp)
2040202a:	4902                	lw	s2,0(sp)
2040202c:	0141                	addi	sp,sp,16
2040202e:	8082                	ret

20402030 <__sinit>:
__sinit():
20402030:	4d1c                	lw	a5,24(a0)
20402032:	e3bd                	bnez	a5,20402098 <__sinit+0x68>
20402034:	1141                	addi	sp,sp,-16
20402036:	c422                	sw	s0,8(sp)
20402038:	c606                	sw	ra,12(sp)
2040203a:	00000797          	auipc	a5,0x0
2040203e:	fa878793          	addi	a5,a5,-88 # 20401fe2 <_cleanup_r>
20402042:	d51c                	sw	a5,40(a0)
20402044:	04052423          	sw	zero,72(a0)
20402048:	04052623          	sw	zero,76(a0)
2040204c:	04052823          	sw	zero,80(a0)
20402050:	fffff797          	auipc	a5,0xfffff
20402054:	5507a783          	lw	a5,1360(a5) # 204015a0 <_global_impure_ptr>
20402058:	842a                	mv	s0,a0
2040205a:	00f51463          	bne	a0,a5,20402062 <__sinit+0x32>
2040205e:	4785                	li	a5,1
20402060:	cd1c                	sw	a5,24(a0)
20402062:	8522                	mv	a0,s0
20402064:	281d                	jal	2040209a <__sfp>
20402066:	c048                	sw	a0,4(s0)
20402068:	8522                	mv	a0,s0
2040206a:	2805                	jal	2040209a <__sfp>
2040206c:	c408                	sw	a0,8(s0)
2040206e:	8522                	mv	a0,s0
20402070:	202d                	jal	2040209a <__sfp>
20402072:	c448                	sw	a0,12(s0)
20402074:	4048                	lw	a0,4(s0)
20402076:	4601                	li	a2,0
20402078:	4591                	li	a1,4
2040207a:	3701                	jal	20401f7a <std>
2040207c:	4408                	lw	a0,8(s0)
2040207e:	4605                	li	a2,1
20402080:	45a5                	li	a1,9
20402082:	3de5                	jal	20401f7a <std>
20402084:	4448                	lw	a0,12(s0)
20402086:	4609                	li	a2,2
20402088:	45c9                	li	a1,18
2040208a:	3dc5                	jal	20401f7a <std>
2040208c:	4785                	li	a5,1
2040208e:	40b2                	lw	ra,12(sp)
20402090:	cc1c                	sw	a5,24(s0)
20402092:	4422                	lw	s0,8(sp)
20402094:	0141                	addi	sp,sp,16
20402096:	8082                	ret
20402098:	8082                	ret

2040209a <__sfp>:
__sfp():
2040209a:	1141                	addi	sp,sp,-16
2040209c:	c226                	sw	s1,4(sp)
2040209e:	fffff497          	auipc	s1,0xfffff
204020a2:	5024a483          	lw	s1,1282(s1) # 204015a0 <_global_impure_ptr>
204020a6:	4c9c                	lw	a5,24(s1)
204020a8:	c04a                	sw	s2,0(sp)
204020aa:	c606                	sw	ra,12(sp)
204020ac:	c422                	sw	s0,8(sp)
204020ae:	892a                	mv	s2,a0
204020b0:	e399                	bnez	a5,204020b6 <__sfp+0x1c>
204020b2:	8526                	mv	a0,s1
204020b4:	3fb5                	jal	20402030 <__sinit>
204020b6:	04848493          	addi	s1,s1,72
204020ba:	4480                	lw	s0,8(s1)
204020bc:	40dc                	lw	a5,4(s1)
204020be:	17fd                	addi	a5,a5,-1
204020c0:	0007d663          	bgez	a5,204020cc <__sfp+0x32>
204020c4:	409c                	lw	a5,0(s1)
204020c6:	cfb1                	beqz	a5,20402122 <__sfp+0x88>
204020c8:	4084                	lw	s1,0(s1)
204020ca:	bfc5                	j	204020ba <__sfp+0x20>
204020cc:	00c41703          	lh	a4,12(s0)
204020d0:	e731                	bnez	a4,2040211c <__sfp+0x82>
204020d2:	77c1                	lui	a5,0xffff0
204020d4:	0785                	addi	a5,a5,1
204020d6:	06042223          	sw	zero,100(s0)
204020da:	00042023          	sw	zero,0(s0)
204020de:	00042223          	sw	zero,4(s0)
204020e2:	00042423          	sw	zero,8(s0)
204020e6:	c45c                	sw	a5,12(s0)
204020e8:	00042823          	sw	zero,16(s0)
204020ec:	00042a23          	sw	zero,20(s0)
204020f0:	00042c23          	sw	zero,24(s0)
204020f4:	4621                	li	a2,8
204020f6:	4581                	li	a1,0
204020f8:	05c40513          	addi	a0,s0,92
204020fc:	2a65                	jal	204022b4 <memset>
204020fe:	02042a23          	sw	zero,52(s0)
20402102:	02042c23          	sw	zero,56(s0)
20402106:	04042423          	sw	zero,72(s0)
2040210a:	04042623          	sw	zero,76(s0)
2040210e:	40b2                	lw	ra,12(sp)
20402110:	8522                	mv	a0,s0
20402112:	4422                	lw	s0,8(sp)
20402114:	4492                	lw	s1,4(sp)
20402116:	4902                	lw	s2,0(sp)
20402118:	0141                	addi	sp,sp,16
2040211a:	8082                	ret
2040211c:	06840413          	addi	s0,s0,104
20402120:	bf79                	j	204020be <__sfp+0x24>
20402122:	4591                	li	a1,4
20402124:	854a                	mv	a0,s2
20402126:	35d9                	jal	20401fec <__sfmoreglue>
20402128:	c088                	sw	a0,0(s1)
2040212a:	842a                	mv	s0,a0
2040212c:	fd51                	bnez	a0,204020c8 <__sfp+0x2e>
2040212e:	47b1                	li	a5,12
20402130:	00f92023          	sw	a5,0(s2)
20402134:	bfe9                	j	2040210e <__sfp+0x74>

20402136 <_fwalk_reent>:
_fwalk_reent():
20402136:	7179                	addi	sp,sp,-48
20402138:	d422                	sw	s0,40(sp)
2040213a:	d04a                	sw	s2,32(sp)
2040213c:	ce4e                	sw	s3,28(sp)
2040213e:	cc52                	sw	s4,24(sp)
20402140:	c85a                	sw	s6,16(sp)
20402142:	c65e                	sw	s7,12(sp)
20402144:	d606                	sw	ra,44(sp)
20402146:	d226                	sw	s1,36(sp)
20402148:	ca56                	sw	s5,20(sp)
2040214a:	892a                	mv	s2,a0
2040214c:	8a2e                	mv	s4,a1
2040214e:	04850413          	addi	s0,a0,72
20402152:	4981                	li	s3,0
20402154:	4b05                	li	s6,1
20402156:	5bfd                	li	s7,-1
20402158:	4404                	lw	s1,8(s0)
2040215a:	00442a83          	lw	s5,4(s0)
2040215e:	1afd                	addi	s5,s5,-1
20402160:	020ad063          	bgez	s5,20402180 <_fwalk_reent+0x4a>
20402164:	4000                	lw	s0,0(s0)
20402166:	f86d                	bnez	s0,20402158 <_fwalk_reent+0x22>
20402168:	50b2                	lw	ra,44(sp)
2040216a:	5422                	lw	s0,40(sp)
2040216c:	5492                	lw	s1,36(sp)
2040216e:	5902                	lw	s2,32(sp)
20402170:	4a62                	lw	s4,24(sp)
20402172:	4ad2                	lw	s5,20(sp)
20402174:	4b42                	lw	s6,16(sp)
20402176:	4bb2                	lw	s7,12(sp)
20402178:	854e                	mv	a0,s3
2040217a:	49f2                	lw	s3,28(sp)
2040217c:	6145                	addi	sp,sp,48
2040217e:	8082                	ret
20402180:	00c4d783          	lhu	a5,12(s1)
20402184:	00fb7b63          	bgeu	s6,a5,2040219a <_fwalk_reent+0x64>
20402188:	00e49783          	lh	a5,14(s1)
2040218c:	01778763          	beq	a5,s7,2040219a <_fwalk_reent+0x64>
20402190:	85a6                	mv	a1,s1
20402192:	854a                	mv	a0,s2
20402194:	9a02                	jalr	s4
20402196:	00a9e9b3          	or	s3,s3,a0
2040219a:	06848493          	addi	s1,s1,104
2040219e:	b7c1                	j	2040215e <_fwalk_reent+0x28>

204021a0 <__swhatbuf_r>:
__swhatbuf_r():
204021a0:	7159                	addi	sp,sp,-112
204021a2:	d0ca                	sw	s2,96(sp)
204021a4:	892e                	mv	s2,a1
204021a6:	00e59583          	lh	a1,14(a1)
204021aa:	d4a2                	sw	s0,104(sp)
204021ac:	d2a6                	sw	s1,100(sp)
204021ae:	d686                	sw	ra,108(sp)
204021b0:	8432                	mv	s0,a2
204021b2:	84b6                	mv	s1,a3
204021b4:	0005dc63          	bgez	a1,204021cc <__swhatbuf_r+0x2c>
204021b8:	00c91783          	lh	a5,12(s2)
204021bc:	0004a023          	sw	zero,0(s1)
204021c0:	0807f793          	andi	a5,a5,128
204021c4:	e395                	bnez	a5,204021e8 <__swhatbuf_r+0x48>
204021c6:	40000793          	li	a5,1024
204021ca:	a00d                	j	204021ec <__swhatbuf_r+0x4c>
204021cc:	0030                	addi	a2,sp,8
204021ce:	071000ef          	jal	ra,20402a3e <_fstat_r>
204021d2:	fe0543e3          	bltz	a0,204021b8 <__swhatbuf_r+0x18>
204021d6:	4732                	lw	a4,12(sp)
204021d8:	67bd                	lui	a5,0xf
204021da:	8ff9                	and	a5,a5,a4
204021dc:	7779                	lui	a4,0xffffe
204021de:	97ba                	add	a5,a5,a4
204021e0:	0017b793          	seqz	a5,a5
204021e4:	c09c                	sw	a5,0(s1)
204021e6:	b7c5                	j	204021c6 <__swhatbuf_r+0x26>
204021e8:	04000793          	li	a5,64
204021ec:	50b6                	lw	ra,108(sp)
204021ee:	c01c                	sw	a5,0(s0)
204021f0:	5426                	lw	s0,104(sp)
204021f2:	5496                	lw	s1,100(sp)
204021f4:	5906                	lw	s2,96(sp)
204021f6:	4501                	li	a0,0
204021f8:	6165                	addi	sp,sp,112
204021fa:	8082                	ret

204021fc <__smakebuf_r>:
__smakebuf_r():
204021fc:	00c5d783          	lhu	a5,12(a1)
20402200:	1101                	addi	sp,sp,-32
20402202:	cc22                	sw	s0,24(sp)
20402204:	ce06                	sw	ra,28(sp)
20402206:	ca26                	sw	s1,20(sp)
20402208:	c84a                	sw	s2,16(sp)
2040220a:	8b89                	andi	a5,a5,2
2040220c:	842e                	mv	s0,a1
2040220e:	cf89                	beqz	a5,20402228 <__smakebuf_r+0x2c>
20402210:	04740793          	addi	a5,s0,71
20402214:	c01c                	sw	a5,0(s0)
20402216:	c81c                	sw	a5,16(s0)
20402218:	4785                	li	a5,1
2040221a:	c85c                	sw	a5,20(s0)
2040221c:	40f2                	lw	ra,28(sp)
2040221e:	4462                	lw	s0,24(sp)
20402220:	44d2                	lw	s1,20(sp)
20402222:	4942                	lw	s2,16(sp)
20402224:	6105                	addi	sp,sp,32
20402226:	8082                	ret
20402228:	0074                	addi	a3,sp,12
2040222a:	0030                	addi	a2,sp,8
2040222c:	892a                	mv	s2,a0
2040222e:	3f8d                	jal	204021a0 <__swhatbuf_r>
20402230:	45a2                	lw	a1,8(sp)
20402232:	84aa                	mv	s1,a0
20402234:	854a                	mv	a0,s2
20402236:	22f1                	jal	20402402 <_malloc_r>
20402238:	ed01                	bnez	a0,20402250 <__smakebuf_r+0x54>
2040223a:	00c41783          	lh	a5,12(s0)
2040223e:	2007f713          	andi	a4,a5,512
20402242:	ff69                	bnez	a4,2040221c <__smakebuf_r+0x20>
20402244:	9bf1                	andi	a5,a5,-4
20402246:	0027e793          	ori	a5,a5,2
2040224a:	00f41623          	sh	a5,12(s0)
2040224e:	b7c9                	j	20402210 <__smakebuf_r+0x14>
20402250:	00000797          	auipc	a5,0x0
20402254:	d9278793          	addi	a5,a5,-622 # 20401fe2 <_cleanup_r>
20402258:	02f92423          	sw	a5,40(s2)
2040225c:	00c45783          	lhu	a5,12(s0)
20402260:	c008                	sw	a0,0(s0)
20402262:	c808                	sw	a0,16(s0)
20402264:	0807e793          	ori	a5,a5,128
20402268:	00f41623          	sh	a5,12(s0)
2040226c:	47a2                	lw	a5,8(sp)
2040226e:	c85c                	sw	a5,20(s0)
20402270:	47b2                	lw	a5,12(sp)
20402272:	cf91                	beqz	a5,2040228e <__smakebuf_r+0x92>
20402274:	00e41583          	lh	a1,14(s0)
20402278:	854a                	mv	a0,s2
2040227a:	7f4000ef          	jal	ra,20402a6e <_isatty_r>
2040227e:	c901                	beqz	a0,2040228e <__smakebuf_r+0x92>
20402280:	00c45783          	lhu	a5,12(s0)
20402284:	9bf1                	andi	a5,a5,-4
20402286:	0017e793          	ori	a5,a5,1
2040228a:	00f41623          	sh	a5,12(s0)
2040228e:	00c45503          	lhu	a0,12(s0)
20402292:	8cc9                	or	s1,s1,a0
20402294:	00941623          	sh	s1,12(s0)
20402298:	b751                	j	2040221c <__smakebuf_r+0x20>

2040229a <memchr>:
memchr():
2040229a:	0ff5f593          	zext.b	a1,a1
2040229e:	962a                	add	a2,a2,a0
204022a0:	00c51463          	bne	a0,a2,204022a8 <memchr+0xe>
204022a4:	4501                	li	a0,0
204022a6:	8082                	ret
204022a8:	00054783          	lbu	a5,0(a0)
204022ac:	feb78de3          	beq	a5,a1,204022a6 <memchr+0xc>
204022b0:	0505                	addi	a0,a0,1
204022b2:	b7fd                	j	204022a0 <memchr+0x6>

204022b4 <memset>:
memset():
204022b4:	433d                	li	t1,15
204022b6:	872a                	mv	a4,a0
204022b8:	02c37363          	bgeu	t1,a2,204022de <memset+0x2a>
204022bc:	00f77793          	andi	a5,a4,15
204022c0:	efbd                	bnez	a5,2040233e <memset+0x8a>
204022c2:	e5ad                	bnez	a1,2040232c <memset+0x78>
204022c4:	ff067693          	andi	a3,a2,-16
204022c8:	8a3d                	andi	a2,a2,15
204022ca:	96ba                	add	a3,a3,a4
204022cc:	c30c                	sw	a1,0(a4)
204022ce:	c34c                	sw	a1,4(a4)
204022d0:	c70c                	sw	a1,8(a4)
204022d2:	c74c                	sw	a1,12(a4)
204022d4:	0741                	addi	a4,a4,16
204022d6:	fed76be3          	bltu	a4,a3,204022cc <memset+0x18>
204022da:	e211                	bnez	a2,204022de <memset+0x2a>
204022dc:	8082                	ret
204022de:	40c306b3          	sub	a3,t1,a2
204022e2:	068a                	slli	a3,a3,0x2
204022e4:	00000297          	auipc	t0,0x0
204022e8:	9696                	add	a3,a3,t0
204022ea:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
204022ee:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffcb9e>
204022f2:	00b706a3          	sb	a1,13(a4)
204022f6:	00b70623          	sb	a1,12(a4)
204022fa:	00b705a3          	sb	a1,11(a4)
204022fe:	00b70523          	sb	a1,10(a4)
20402302:	00b704a3          	sb	a1,9(a4)
20402306:	00b70423          	sb	a1,8(a4)
2040230a:	00b703a3          	sb	a1,7(a4)
2040230e:	00b70323          	sb	a1,6(a4)
20402312:	00b702a3          	sb	a1,5(a4)
20402316:	00b70223          	sb	a1,4(a4)
2040231a:	00b701a3          	sb	a1,3(a4)
2040231e:	00b70123          	sb	a1,2(a4)
20402322:	00b700a3          	sb	a1,1(a4)
20402326:	00b70023          	sb	a1,0(a4)
2040232a:	8082                	ret
2040232c:	0ff5f593          	zext.b	a1,a1
20402330:	00859693          	slli	a3,a1,0x8
20402334:	8dd5                	or	a1,a1,a3
20402336:	01059693          	slli	a3,a1,0x10
2040233a:	8dd5                	or	a1,a1,a3
2040233c:	b761                	j	204022c4 <memset+0x10>
2040233e:	00279693          	slli	a3,a5,0x2
20402342:	00000297          	auipc	t0,0x0
20402346:	9696                	add	a3,a3,t0
20402348:	8286                	mv	t0,ra
2040234a:	fa8680e7          	jalr	-88(a3)
2040234e:	8096                	mv	ra,t0
20402350:	17c1                	addi	a5,a5,-16
20402352:	8f1d                	sub	a4,a4,a5
20402354:	963e                	add	a2,a2,a5
20402356:	f8c374e3          	bgeu	t1,a2,204022de <memset+0x2a>
2040235a:	b7a5                	j	204022c2 <memset+0xe>

2040235c <_free_r>:
_free_r():
2040235c:	c1d5                	beqz	a1,20402400 <_free_r+0xa4>
2040235e:	ffc5a783          	lw	a5,-4(a1)
20402362:	1101                	addi	sp,sp,-32
20402364:	cc22                	sw	s0,24(sp)
20402366:	ce06                	sw	ra,28(sp)
20402368:	ffc58413          	addi	s0,a1,-4
2040236c:	0007d363          	bgez	a5,20402372 <_free_r+0x16>
20402370:	943e                	add	s0,s0,a5
20402372:	c62a                	sw	a0,12(sp)
20402374:	75a000ef          	jal	ra,20402ace <__malloc_lock>
20402378:	5fbfe717          	auipc	a4,0x5fbfe
2040237c:	45070713          	addi	a4,a4,1104 # 800007c8 <__malloc_free_list>
20402380:	431c                	lw	a5,0(a4)
20402382:	4532                	lw	a0,12(sp)
20402384:	eb89                	bnez	a5,20402396 <_free_r+0x3a>
20402386:	00042223          	sw	zero,4(s0)
2040238a:	c300                	sw	s0,0(a4)
2040238c:	4462                	lw	s0,24(sp)
2040238e:	40f2                	lw	ra,28(sp)
20402390:	6105                	addi	sp,sp,32
20402392:	73e0006f          	j	20402ad0 <__malloc_unlock>
20402396:	00f47d63          	bgeu	s0,a5,204023b0 <_free_r+0x54>
2040239a:	4010                	lw	a2,0(s0)
2040239c:	00c406b3          	add	a3,s0,a2
204023a0:	00d79663          	bne	a5,a3,204023ac <_free_r+0x50>
204023a4:	4394                	lw	a3,0(a5)
204023a6:	43dc                	lw	a5,4(a5)
204023a8:	96b2                	add	a3,a3,a2
204023aa:	c014                	sw	a3,0(s0)
204023ac:	c05c                	sw	a5,4(s0)
204023ae:	bff1                	j	2040238a <_free_r+0x2e>
204023b0:	873e                	mv	a4,a5
204023b2:	43dc                	lw	a5,4(a5)
204023b4:	c399                	beqz	a5,204023ba <_free_r+0x5e>
204023b6:	fef47de3          	bgeu	s0,a5,204023b0 <_free_r+0x54>
204023ba:	4314                	lw	a3,0(a4)
204023bc:	00d70633          	add	a2,a4,a3
204023c0:	00861f63          	bne	a2,s0,204023de <_free_r+0x82>
204023c4:	4010                	lw	a2,0(s0)
204023c6:	96b2                	add	a3,a3,a2
204023c8:	c314                	sw	a3,0(a4)
204023ca:	00d70633          	add	a2,a4,a3
204023ce:	fac79fe3          	bne	a5,a2,2040238c <_free_r+0x30>
204023d2:	4390                	lw	a2,0(a5)
204023d4:	43dc                	lw	a5,4(a5)
204023d6:	96b2                	add	a3,a3,a2
204023d8:	c314                	sw	a3,0(a4)
204023da:	c35c                	sw	a5,4(a4)
204023dc:	bf45                	j	2040238c <_free_r+0x30>
204023de:	00c47563          	bgeu	s0,a2,204023e8 <_free_r+0x8c>
204023e2:	47b1                	li	a5,12
204023e4:	c11c                	sw	a5,0(a0)
204023e6:	b75d                	j	2040238c <_free_r+0x30>
204023e8:	4010                	lw	a2,0(s0)
204023ea:	00c406b3          	add	a3,s0,a2
204023ee:	00d79663          	bne	a5,a3,204023fa <_free_r+0x9e>
204023f2:	4394                	lw	a3,0(a5)
204023f4:	43dc                	lw	a5,4(a5)
204023f6:	96b2                	add	a3,a3,a2
204023f8:	c014                	sw	a3,0(s0)
204023fa:	c05c                	sw	a5,4(s0)
204023fc:	c340                	sw	s0,4(a4)
204023fe:	b779                	j	2040238c <_free_r+0x30>
20402400:	8082                	ret

20402402 <_malloc_r>:
_malloc_r():
20402402:	1101                	addi	sp,sp,-32
20402404:	ca26                	sw	s1,20(sp)
20402406:	00358493          	addi	s1,a1,3
2040240a:	98f1                	andi	s1,s1,-4
2040240c:	c84a                	sw	s2,16(sp)
2040240e:	ce06                	sw	ra,28(sp)
20402410:	cc22                	sw	s0,24(sp)
20402412:	c64e                	sw	s3,12(sp)
20402414:	04a1                	addi	s1,s1,8
20402416:	47b1                	li	a5,12
20402418:	892a                	mv	s2,a0
2040241a:	04f4f463          	bgeu	s1,a5,20402462 <_malloc_r+0x60>
2040241e:	44b1                	li	s1,12
20402420:	04b4e363          	bltu	s1,a1,20402466 <_malloc_r+0x64>
20402424:	854a                	mv	a0,s2
20402426:	2565                	jal	20402ace <__malloc_lock>
20402428:	5fbfe697          	auipc	a3,0x5fbfe
2040242c:	3a068693          	addi	a3,a3,928 # 800007c8 <__malloc_free_list>
20402430:	4298                	lw	a4,0(a3)
20402432:	843a                	mv	s0,a4
20402434:	e421                	bnez	s0,2040247c <_malloc_r+0x7a>
20402436:	5fbfe417          	auipc	s0,0x5fbfe
2040243a:	39640413          	addi	s0,s0,918 # 800007cc <__malloc_sbrk_start>
2040243e:	401c                	lw	a5,0(s0)
20402440:	e789                	bnez	a5,2040244a <_malloc_r+0x48>
20402442:	4581                	li	a1,0
20402444:	854a                	mv	a0,s2
20402446:	2901                	jal	20402856 <_sbrk_r>
20402448:	c008                	sw	a0,0(s0)
2040244a:	85a6                	mv	a1,s1
2040244c:	854a                	mv	a0,s2
2040244e:	2121                	jal	20402856 <_sbrk_r>
20402450:	59fd                	li	s3,-1
20402452:	07351863          	bne	a0,s3,204024c2 <_malloc_r+0xc0>
20402456:	47b1                	li	a5,12
20402458:	00f92023          	sw	a5,0(s2)
2040245c:	854a                	mv	a0,s2
2040245e:	2d8d                	jal	20402ad0 <__malloc_unlock>
20402460:	a031                	j	2040246c <_malloc_r+0x6a>
20402462:	fa04dfe3          	bgez	s1,20402420 <_malloc_r+0x1e>
20402466:	47b1                	li	a5,12
20402468:	00f92023          	sw	a5,0(s2)
2040246c:	4501                	li	a0,0
2040246e:	40f2                	lw	ra,28(sp)
20402470:	4462                	lw	s0,24(sp)
20402472:	44d2                	lw	s1,20(sp)
20402474:	4942                	lw	s2,16(sp)
20402476:	49b2                	lw	s3,12(sp)
20402478:	6105                	addi	sp,sp,32
2040247a:	8082                	ret
2040247c:	401c                	lw	a5,0(s0)
2040247e:	8f85                	sub	a5,a5,s1
20402480:	0207ce63          	bltz	a5,204024bc <_malloc_r+0xba>
20402484:	462d                	li	a2,11
20402486:	00f67663          	bgeu	a2,a5,20402492 <_malloc_r+0x90>
2040248a:	c01c                	sw	a5,0(s0)
2040248c:	943e                	add	s0,s0,a5
2040248e:	c004                	sw	s1,0(s0)
20402490:	a029                	j	2040249a <_malloc_r+0x98>
20402492:	405c                	lw	a5,4(s0)
20402494:	02871263          	bne	a4,s0,204024b8 <_malloc_r+0xb6>
20402498:	c29c                	sw	a5,0(a3)
2040249a:	854a                	mv	a0,s2
2040249c:	2d15                	jal	20402ad0 <__malloc_unlock>
2040249e:	00b40513          	addi	a0,s0,11
204024a2:	00440793          	addi	a5,s0,4
204024a6:	9961                	andi	a0,a0,-8
204024a8:	40f50733          	sub	a4,a0,a5
204024ac:	fcf501e3          	beq	a0,a5,2040246e <_malloc_r+0x6c>
204024b0:	943a                	add	s0,s0,a4
204024b2:	8f89                	sub	a5,a5,a0
204024b4:	c01c                	sw	a5,0(s0)
204024b6:	bf65                	j	2040246e <_malloc_r+0x6c>
204024b8:	c35c                	sw	a5,4(a4)
204024ba:	b7c5                	j	2040249a <_malloc_r+0x98>
204024bc:	8722                	mv	a4,s0
204024be:	4040                	lw	s0,4(s0)
204024c0:	bf95                	j	20402434 <_malloc_r+0x32>
204024c2:	00350413          	addi	s0,a0,3
204024c6:	9871                	andi	s0,s0,-4
204024c8:	fc8503e3          	beq	a0,s0,2040248e <_malloc_r+0x8c>
204024cc:	40a405b3          	sub	a1,s0,a0
204024d0:	854a                	mv	a0,s2
204024d2:	2651                	jal	20402856 <_sbrk_r>
204024d4:	fb351de3          	bne	a0,s3,2040248e <_malloc_r+0x8c>
204024d8:	bfbd                	j	20402456 <_malloc_r+0x54>

204024da <_printf_common>:
_printf_common():
204024da:	7179                	addi	sp,sp,-48
204024dc:	cc52                	sw	s4,24(sp)
204024de:	499c                	lw	a5,16(a1)
204024e0:	8a3a                	mv	s4,a4
204024e2:	4598                	lw	a4,8(a1)
204024e4:	d422                	sw	s0,40(sp)
204024e6:	d226                	sw	s1,36(sp)
204024e8:	ce4e                	sw	s3,28(sp)
204024ea:	ca56                	sw	s5,20(sp)
204024ec:	d606                	sw	ra,44(sp)
204024ee:	d04a                	sw	s2,32(sp)
204024f0:	c85a                	sw	s6,16(sp)
204024f2:	c65e                	sw	s7,12(sp)
204024f4:	89aa                	mv	s3,a0
204024f6:	842e                	mv	s0,a1
204024f8:	84b2                	mv	s1,a2
204024fa:	8ab6                	mv	s5,a3
204024fc:	00e7d363          	bge	a5,a4,20402502 <_printf_common+0x28>
20402500:	87ba                	mv	a5,a4
20402502:	c09c                	sw	a5,0(s1)
20402504:	04344703          	lbu	a4,67(s0)
20402508:	c319                	beqz	a4,2040250e <_printf_common+0x34>
2040250a:	0785                	addi	a5,a5,1
2040250c:	c09c                	sw	a5,0(s1)
2040250e:	401c                	lw	a5,0(s0)
20402510:	0207f793          	andi	a5,a5,32
20402514:	c781                	beqz	a5,2040251c <_printf_common+0x42>
20402516:	409c                	lw	a5,0(s1)
20402518:	0789                	addi	a5,a5,2
2040251a:	c09c                	sw	a5,0(s1)
2040251c:	00042903          	lw	s2,0(s0)
20402520:	00697913          	andi	s2,s2,6
20402524:	00091a63          	bnez	s2,20402538 <_printf_common+0x5e>
20402528:	01940b13          	addi	s6,s0,25
2040252c:	5bfd                	li	s7,-1
2040252e:	445c                	lw	a5,12(s0)
20402530:	4098                	lw	a4,0(s1)
20402532:	8f99                	sub	a5,a5,a4
20402534:	04f94c63          	blt	s2,a5,2040258c <_printf_common+0xb2>
20402538:	04344783          	lbu	a5,67(s0)
2040253c:	00f036b3          	snez	a3,a5
20402540:	401c                	lw	a5,0(s0)
20402542:	0207f793          	andi	a5,a5,32
20402546:	eba5                	bnez	a5,204025b6 <_printf_common+0xdc>
20402548:	04340613          	addi	a2,s0,67
2040254c:	85d6                	mv	a1,s5
2040254e:	854e                	mv	a0,s3
20402550:	9a02                	jalr	s4
20402552:	57fd                	li	a5,-1
20402554:	04f50363          	beq	a0,a5,2040259a <_printf_common+0xc0>
20402558:	401c                	lw	a5,0(s0)
2040255a:	4611                	li	a2,4
2040255c:	4098                	lw	a4,0(s1)
2040255e:	8b99                	andi	a5,a5,6
20402560:	4454                	lw	a3,12(s0)
20402562:	4481                	li	s1,0
20402564:	00c79763          	bne	a5,a2,20402572 <_printf_common+0x98>
20402568:	40e684b3          	sub	s1,a3,a4
2040256c:	0004d363          	bgez	s1,20402572 <_printf_common+0x98>
20402570:	4481                	li	s1,0
20402572:	441c                	lw	a5,8(s0)
20402574:	4818                	lw	a4,16(s0)
20402576:	00f75463          	bge	a4,a5,2040257e <_printf_common+0xa4>
2040257a:	8f99                	sub	a5,a5,a4
2040257c:	94be                	add	s1,s1,a5
2040257e:	4901                	li	s2,0
20402580:	0469                	addi	s0,s0,26
20402582:	5b7d                	li	s6,-1
20402584:	05249863          	bne	s1,s2,204025d4 <_printf_common+0xfa>
20402588:	4501                	li	a0,0
2040258a:	a809                	j	2040259c <_printf_common+0xc2>
2040258c:	4685                	li	a3,1
2040258e:	865a                	mv	a2,s6
20402590:	85d6                	mv	a1,s5
20402592:	854e                	mv	a0,s3
20402594:	9a02                	jalr	s4
20402596:	01751e63          	bne	a0,s7,204025b2 <_printf_common+0xd8>
2040259a:	557d                	li	a0,-1
2040259c:	50b2                	lw	ra,44(sp)
2040259e:	5422                	lw	s0,40(sp)
204025a0:	5492                	lw	s1,36(sp)
204025a2:	5902                	lw	s2,32(sp)
204025a4:	49f2                	lw	s3,28(sp)
204025a6:	4a62                	lw	s4,24(sp)
204025a8:	4ad2                	lw	s5,20(sp)
204025aa:	4b42                	lw	s6,16(sp)
204025ac:	4bb2                	lw	s7,12(sp)
204025ae:	6145                	addi	sp,sp,48
204025b0:	8082                	ret
204025b2:	0905                	addi	s2,s2,1
204025b4:	bfad                	j	2040252e <_printf_common+0x54>
204025b6:	00d40733          	add	a4,s0,a3
204025ba:	03000613          	li	a2,48
204025be:	04c701a3          	sb	a2,67(a4)
204025c2:	04544703          	lbu	a4,69(s0)
204025c6:	00168793          	addi	a5,a3,1
204025ca:	97a2                	add	a5,a5,s0
204025cc:	0689                	addi	a3,a3,2
204025ce:	04e781a3          	sb	a4,67(a5)
204025d2:	bf9d                	j	20402548 <_printf_common+0x6e>
204025d4:	4685                	li	a3,1
204025d6:	8622                	mv	a2,s0
204025d8:	85d6                	mv	a1,s5
204025da:	854e                	mv	a0,s3
204025dc:	9a02                	jalr	s4
204025de:	fb650ee3          	beq	a0,s6,2040259a <_printf_common+0xc0>
204025e2:	0905                	addi	s2,s2,1
204025e4:	b745                	j	20402584 <_printf_common+0xaa>

204025e6 <_printf_i>:
_printf_i():
204025e6:	7179                	addi	sp,sp,-48
204025e8:	d422                	sw	s0,40(sp)
204025ea:	d226                	sw	s1,36(sp)
204025ec:	d04a                	sw	s2,32(sp)
204025ee:	ce4e                	sw	s3,28(sp)
204025f0:	d606                	sw	ra,44(sp)
204025f2:	cc52                	sw	s4,24(sp)
204025f4:	ca56                	sw	s5,20(sp)
204025f6:	c85a                	sw	s6,16(sp)
204025f8:	0185c803          	lbu	a6,24(a1)
204025fc:	07800793          	li	a5,120
20402600:	84aa                	mv	s1,a0
20402602:	842e                	mv	s0,a1
20402604:	8932                	mv	s2,a2
20402606:	89b6                	mv	s3,a3
20402608:	0107ee63          	bltu	a5,a6,20402624 <_printf_i+0x3e>
2040260c:	06200793          	li	a5,98
20402610:	04358693          	addi	a3,a1,67
20402614:	0107ed63          	bltu	a5,a6,2040262e <_printf_i+0x48>
20402618:	1c080563          	beqz	a6,204027e2 <_printf_i+0x1fc>
2040261c:	05800793          	li	a5,88
20402620:	12f80a63          	beq	a6,a5,20402754 <_printf_i+0x16e>
20402624:	04240a93          	addi	s5,s0,66
20402628:	05040123          	sb	a6,66(s0)
2040262c:	a815                	j	20402660 <_printf_i+0x7a>
2040262e:	f9d80793          	addi	a5,a6,-99
20402632:	0ff7f793          	zext.b	a5,a5
20402636:	4655                	li	a2,21
20402638:	fef666e3          	bltu	a2,a5,20402624 <_printf_i+0x3e>
2040263c:	ffffe617          	auipc	a2,0xffffe
20402640:	3bc60613          	addi	a2,a2,956 # 204009f8 <__sf_fake_stdout+0x48>
20402644:	078a                	slli	a5,a5,0x2
20402646:	97b2                	add	a5,a5,a2
20402648:	439c                	lw	a5,0(a5)
2040264a:	97b2                	add	a5,a5,a2
2040264c:	8782                	jr	a5
2040264e:	431c                	lw	a5,0(a4)
20402650:	04258a93          	addi	s5,a1,66
20402654:	00478693          	addi	a3,a5,4
20402658:	439c                	lw	a5,0(a5)
2040265a:	c314                	sw	a3,0(a4)
2040265c:	04f58123          	sb	a5,66(a1)
20402660:	4785                	li	a5,1
20402662:	a25d                	j	20402808 <_printf_i+0x222>
20402664:	419c                	lw	a5,0(a1)
20402666:	4308                	lw	a0,0(a4)
20402668:	0807f613          	andi	a2,a5,128
2040266c:	00450593          	addi	a1,a0,4
20402670:	c20d                	beqz	a2,20402692 <_printf_i+0xac>
20402672:	411c                	lw	a5,0(a0)
20402674:	c30c                	sw	a1,0(a4)
20402676:	0007d863          	bgez	a5,20402686 <_printf_i+0xa0>
2040267a:	02d00713          	li	a4,45
2040267e:	40f007b3          	neg	a5,a5
20402682:	04e401a3          	sb	a4,67(s0)
20402686:	ffffe617          	auipc	a2,0xffffe
2040268a:	34a60613          	addi	a2,a2,842 # 204009d0 <__sf_fake_stdout+0x20>
2040268e:	4829                	li	a6,10
20402690:	a0a1                	j	204026d8 <_printf_i+0xf2>
20402692:	0407f613          	andi	a2,a5,64
20402696:	411c                	lw	a5,0(a0)
20402698:	c30c                	sw	a1,0(a4)
2040269a:	de71                	beqz	a2,20402676 <_printf_i+0x90>
2040269c:	07c2                	slli	a5,a5,0x10
2040269e:	87c1                	srai	a5,a5,0x10
204026a0:	bfd9                	j	20402676 <_printf_i+0x90>
204026a2:	4190                	lw	a2,0(a1)
204026a4:	431c                	lw	a5,0(a4)
204026a6:	08067513          	andi	a0,a2,128
204026aa:	00478593          	addi	a1,a5,4
204026ae:	c501                	beqz	a0,204026b6 <_printf_i+0xd0>
204026b0:	c30c                	sw	a1,0(a4)
204026b2:	439c                	lw	a5,0(a5)
204026b4:	a039                	j	204026c2 <_printf_i+0xdc>
204026b6:	04067613          	andi	a2,a2,64
204026ba:	c30c                	sw	a1,0(a4)
204026bc:	da7d                	beqz	a2,204026b2 <_printf_i+0xcc>
204026be:	0007d783          	lhu	a5,0(a5)
204026c2:	06f00713          	li	a4,111
204026c6:	ffffe617          	auipc	a2,0xffffe
204026ca:	30a60613          	addi	a2,a2,778 # 204009d0 <__sf_fake_stdout+0x20>
204026ce:	0ee80463          	beq	a6,a4,204027b6 <_printf_i+0x1d0>
204026d2:	4829                	li	a6,10
204026d4:	040401a3          	sb	zero,67(s0)
204026d8:	4058                	lw	a4,4(s0)
204026da:	c418                	sw	a4,8(s0)
204026dc:	00074563          	bltz	a4,204026e6 <_printf_i+0x100>
204026e0:	400c                	lw	a1,0(s0)
204026e2:	99ed                	andi	a1,a1,-5
204026e4:	c00c                	sw	a1,0(s0)
204026e6:	e399                	bnez	a5,204026ec <_printf_i+0x106>
204026e8:	8ab6                	mv	s5,a3
204026ea:	cf19                	beqz	a4,20402708 <_printf_i+0x122>
204026ec:	8ab6                	mv	s5,a3
204026ee:	0307f733          	remu	a4,a5,a6
204026f2:	1afd                	addi	s5,s5,-1
204026f4:	9732                	add	a4,a4,a2
204026f6:	00074703          	lbu	a4,0(a4)
204026fa:	00ea8023          	sb	a4,0(s5)
204026fe:	873e                	mv	a4,a5
20402700:	0307d7b3          	divu	a5,a5,a6
20402704:	ff0775e3          	bgeu	a4,a6,204026ee <_printf_i+0x108>
20402708:	47a1                	li	a5,8
2040270a:	00f81e63          	bne	a6,a5,20402726 <_printf_i+0x140>
2040270e:	401c                	lw	a5,0(s0)
20402710:	8b85                	andi	a5,a5,1
20402712:	cb91                	beqz	a5,20402726 <_printf_i+0x140>
20402714:	4058                	lw	a4,4(s0)
20402716:	481c                	lw	a5,16(s0)
20402718:	00e7c763          	blt	a5,a4,20402726 <_printf_i+0x140>
2040271c:	03000793          	li	a5,48
20402720:	fefa8fa3          	sb	a5,-1(s5)
20402724:	1afd                	addi	s5,s5,-1
20402726:	415686b3          	sub	a3,a3,s5
2040272a:	c814                	sw	a3,16(s0)
2040272c:	874e                	mv	a4,s3
2040272e:	86ca                	mv	a3,s2
20402730:	0070                	addi	a2,sp,12
20402732:	85a2                	mv	a1,s0
20402734:	8526                	mv	a0,s1
20402736:	3355                	jal	204024da <_printf_common>
20402738:	5a7d                	li	s4,-1
2040273a:	0d451b63          	bne	a0,s4,20402810 <_printf_i+0x22a>
2040273e:	557d                	li	a0,-1
20402740:	50b2                	lw	ra,44(sp)
20402742:	5422                	lw	s0,40(sp)
20402744:	5492                	lw	s1,36(sp)
20402746:	5902                	lw	s2,32(sp)
20402748:	49f2                	lw	s3,28(sp)
2040274a:	4a62                	lw	s4,24(sp)
2040274c:	4ad2                	lw	s5,20(sp)
2040274e:	4b42                	lw	s6,16(sp)
20402750:	6145                	addi	sp,sp,48
20402752:	8082                	ret
20402754:	050582a3          	sb	a6,69(a1)
20402758:	ffffe617          	auipc	a2,0xffffe
2040275c:	27860613          	addi	a2,a2,632 # 204009d0 <__sf_fake_stdout+0x20>
20402760:	400c                	lw	a1,0(s0)
20402762:	4308                	lw	a0,0(a4)
20402764:	0805f813          	andi	a6,a1,128
20402768:	411c                	lw	a5,0(a0)
2040276a:	0511                	addi	a0,a0,4
2040276c:	02080d63          	beqz	a6,204027a6 <_printf_i+0x1c0>
20402770:	c308                	sw	a0,0(a4)
20402772:	0015f713          	andi	a4,a1,1
20402776:	c701                	beqz	a4,2040277e <_printf_i+0x198>
20402778:	0205e593          	ori	a1,a1,32
2040277c:	c00c                	sw	a1,0(s0)
2040277e:	4841                	li	a6,16
20402780:	fbb1                	bnez	a5,204026d4 <_printf_i+0xee>
20402782:	4018                	lw	a4,0(s0)
20402784:	fdf77713          	andi	a4,a4,-33
20402788:	c018                	sw	a4,0(s0)
2040278a:	b7a9                	j	204026d4 <_printf_i+0xee>
2040278c:	419c                	lw	a5,0(a1)
2040278e:	0207e793          	ori	a5,a5,32
20402792:	c19c                	sw	a5,0(a1)
20402794:	07800793          	li	a5,120
20402798:	04f402a3          	sb	a5,69(s0)
2040279c:	ffffe617          	auipc	a2,0xffffe
204027a0:	24860613          	addi	a2,a2,584 # 204009e4 <__sf_fake_stdout+0x34>
204027a4:	bf75                	j	20402760 <_printf_i+0x17a>
204027a6:	0405f813          	andi	a6,a1,64
204027aa:	c308                	sw	a0,0(a4)
204027ac:	fc0803e3          	beqz	a6,20402772 <_printf_i+0x18c>
204027b0:	07c2                	slli	a5,a5,0x10
204027b2:	83c1                	srli	a5,a5,0x10
204027b4:	bf7d                	j	20402772 <_printf_i+0x18c>
204027b6:	4821                	li	a6,8
204027b8:	bf31                	j	204026d4 <_printf_i+0xee>
204027ba:	4190                	lw	a2,0(a1)
204027bc:	431c                	lw	a5,0(a4)
204027be:	49cc                	lw	a1,20(a1)
204027c0:	08067813          	andi	a6,a2,128
204027c4:	00478513          	addi	a0,a5,4
204027c8:	00080663          	beqz	a6,204027d4 <_printf_i+0x1ee>
204027cc:	c308                	sw	a0,0(a4)
204027ce:	439c                	lw	a5,0(a5)
204027d0:	c38c                	sw	a1,0(a5)
204027d2:	a801                	j	204027e2 <_printf_i+0x1fc>
204027d4:	c308                	sw	a0,0(a4)
204027d6:	04067613          	andi	a2,a2,64
204027da:	439c                	lw	a5,0(a5)
204027dc:	da75                	beqz	a2,204027d0 <_printf_i+0x1ea>
204027de:	00b79023          	sh	a1,0(a5)
204027e2:	00042823          	sw	zero,16(s0)
204027e6:	8ab6                	mv	s5,a3
204027e8:	b791                	j	2040272c <_printf_i+0x146>
204027ea:	431c                	lw	a5,0(a4)
204027ec:	41d0                	lw	a2,4(a1)
204027ee:	4581                	li	a1,0
204027f0:	00478693          	addi	a3,a5,4
204027f4:	c314                	sw	a3,0(a4)
204027f6:	0007aa83          	lw	s5,0(a5)
204027fa:	8556                	mv	a0,s5
204027fc:	3c79                	jal	2040229a <memchr>
204027fe:	c501                	beqz	a0,20402806 <_printf_i+0x220>
20402800:	41550533          	sub	a0,a0,s5
20402804:	c048                	sw	a0,4(s0)
20402806:	405c                	lw	a5,4(s0)
20402808:	c81c                	sw	a5,16(s0)
2040280a:	040401a3          	sb	zero,67(s0)
2040280e:	bf39                	j	2040272c <_printf_i+0x146>
20402810:	4814                	lw	a3,16(s0)
20402812:	8656                	mv	a2,s5
20402814:	85ca                	mv	a1,s2
20402816:	8526                	mv	a0,s1
20402818:	9982                	jalr	s3
2040281a:	f34502e3          	beq	a0,s4,2040273e <_printf_i+0x158>
2040281e:	401c                	lw	a5,0(s0)
20402820:	8b89                	andi	a5,a5,2
20402822:	e78d                	bnez	a5,2040284c <_printf_i+0x266>
20402824:	47b2                	lw	a5,12(sp)
20402826:	4448                	lw	a0,12(s0)
20402828:	f0f55ce3          	bge	a0,a5,20402740 <_printf_i+0x15a>
2040282c:	853e                	mv	a0,a5
2040282e:	bf09                	j	20402740 <_printf_i+0x15a>
20402830:	4685                	li	a3,1
20402832:	8656                	mv	a2,s5
20402834:	85ca                	mv	a1,s2
20402836:	8526                	mv	a0,s1
20402838:	9982                	jalr	s3
2040283a:	f16502e3          	beq	a0,s6,2040273e <_printf_i+0x158>
2040283e:	0a05                	addi	s4,s4,1
20402840:	445c                	lw	a5,12(s0)
20402842:	4732                	lw	a4,12(sp)
20402844:	8f99                	sub	a5,a5,a4
20402846:	fefa45e3          	blt	s4,a5,20402830 <_printf_i+0x24a>
2040284a:	bfe9                	j	20402824 <_printf_i+0x23e>
2040284c:	4a01                	li	s4,0
2040284e:	01940a93          	addi	s5,s0,25
20402852:	5b7d                	li	s6,-1
20402854:	b7f5                	j	20402840 <_printf_i+0x25a>

20402856 <_sbrk_r>:
_sbrk_r():
20402856:	1141                	addi	sp,sp,-16
20402858:	c422                	sw	s0,8(sp)
2040285a:	842a                	mv	s0,a0
2040285c:	852e                	mv	a0,a1
2040285e:	5fbfe797          	auipc	a5,0x5fbfe
20402862:	f607a923          	sw	zero,-142(a5) # 800007d0 <errno>
20402866:	c606                	sw	ra,12(sp)
20402868:	2645                	jal	20402c08 <_sbrk>
2040286a:	57fd                	li	a5,-1
2040286c:	00f51863          	bne	a0,a5,2040287c <_sbrk_r+0x26>
20402870:	5fbfe797          	auipc	a5,0x5fbfe
20402874:	f607a783          	lw	a5,-160(a5) # 800007d0 <errno>
20402878:	c391                	beqz	a5,2040287c <_sbrk_r+0x26>
2040287a:	c01c                	sw	a5,0(s0)
2040287c:	40b2                	lw	ra,12(sp)
2040287e:	4422                	lw	s0,8(sp)
20402880:	0141                	addi	sp,sp,16
20402882:	8082                	ret

20402884 <_raise_r>:
_raise_r():
20402884:	1101                	addi	sp,sp,-32
20402886:	cc22                	sw	s0,24(sp)
20402888:	ce06                	sw	ra,28(sp)
2040288a:	47fd                	li	a5,31
2040288c:	842a                	mv	s0,a0
2040288e:	00b7f963          	bgeu	a5,a1,204028a0 <_raise_r+0x1c>
20402892:	47d9                	li	a5,22
20402894:	c11c                	sw	a5,0(a0)
20402896:	557d                	li	a0,-1
20402898:	40f2                	lw	ra,28(sp)
2040289a:	4462                	lw	s0,24(sp)
2040289c:	6105                	addi	sp,sp,32
2040289e:	8082                	ret
204028a0:	417c                	lw	a5,68(a0)
204028a2:	862e                	mv	a2,a1
204028a4:	c791                	beqz	a5,204028b0 <_raise_r+0x2c>
204028a6:	00259713          	slli	a4,a1,0x2
204028aa:	97ba                	add	a5,a5,a4
204028ac:	4398                	lw	a4,0(a5)
204028ae:	eb19                	bnez	a4,204028c4 <_raise_r+0x40>
204028b0:	8522                	mv	a0,s0
204028b2:	c632                	sw	a2,12(sp)
204028b4:	20bd                	jal	20402922 <_getpid_r>
204028b6:	85aa                	mv	a1,a0
204028b8:	8522                	mv	a0,s0
204028ba:	4462                	lw	s0,24(sp)
204028bc:	4632                	lw	a2,12(sp)
204028be:	40f2                	lw	ra,28(sp)
204028c0:	6105                	addi	sp,sp,32
204028c2:	a805                	j	204028f2 <_kill_r>
204028c4:	4685                	li	a3,1
204028c6:	4501                	li	a0,0
204028c8:	fcd708e3          	beq	a4,a3,20402898 <_raise_r+0x14>
204028cc:	56fd                	li	a3,-1
204028ce:	00d71663          	bne	a4,a3,204028da <_raise_r+0x56>
204028d2:	47d9                	li	a5,22
204028d4:	c01c                	sw	a5,0(s0)
204028d6:	4505                	li	a0,1
204028d8:	b7c1                	j	20402898 <_raise_r+0x14>
204028da:	852e                	mv	a0,a1
204028dc:	0007a023          	sw	zero,0(a5)
204028e0:	9702                	jalr	a4
204028e2:	4501                	li	a0,0
204028e4:	bf55                	j	20402898 <_raise_r+0x14>

204028e6 <raise>:
raise():
204028e6:	85aa                	mv	a1,a0
204028e8:	5fbfe517          	auipc	a0,0x5fbfe
204028ec:	eb852503          	lw	a0,-328(a0) # 800007a0 <_impure_ptr>
204028f0:	bf51                	j	20402884 <_raise_r>

204028f2 <_kill_r>:
_kill_r():
204028f2:	1141                	addi	sp,sp,-16
204028f4:	c422                	sw	s0,8(sp)
204028f6:	842a                	mv	s0,a0
204028f8:	852e                	mv	a0,a1
204028fa:	85b2                	mv	a1,a2
204028fc:	5fbfe797          	auipc	a5,0x5fbfe
20402900:	ec07aa23          	sw	zero,-300(a5) # 800007d0 <errno>
20402904:	c606                	sw	ra,12(sp)
20402906:	2461                	jal	20402b8e <_kill>
20402908:	57fd                	li	a5,-1
2040290a:	00f51863          	bne	a0,a5,2040291a <_kill_r+0x28>
2040290e:	5fbfe797          	auipc	a5,0x5fbfe
20402912:	ec27a783          	lw	a5,-318(a5) # 800007d0 <errno>
20402916:	c391                	beqz	a5,2040291a <_kill_r+0x28>
20402918:	c01c                	sw	a5,0(s0)
2040291a:	40b2                	lw	ra,12(sp)
2040291c:	4422                	lw	s0,8(sp)
2040291e:	0141                	addi	sp,sp,16
20402920:	8082                	ret

20402922 <_getpid_r>:
_getpid_r():
20402922:	ac35                	j	20402b5e <_getpid>

20402924 <__sread>:
__sread():
20402924:	1141                	addi	sp,sp,-16
20402926:	c422                	sw	s0,8(sp)
20402928:	842e                	mv	s0,a1
2040292a:	00e59583          	lh	a1,14(a1)
2040292e:	c606                	sw	ra,12(sp)
20402930:	224d                	jal	20402ad2 <_read_r>
20402932:	00054963          	bltz	a0,20402944 <__sread+0x20>
20402936:	487c                	lw	a5,84(s0)
20402938:	97aa                	add	a5,a5,a0
2040293a:	c87c                	sw	a5,84(s0)
2040293c:	40b2                	lw	ra,12(sp)
2040293e:	4422                	lw	s0,8(sp)
20402940:	0141                	addi	sp,sp,16
20402942:	8082                	ret
20402944:	00c45783          	lhu	a5,12(s0)
20402948:	777d                	lui	a4,0xfffff
2040294a:	177d                	addi	a4,a4,-1
2040294c:	8ff9                	and	a5,a5,a4
2040294e:	00f41623          	sh	a5,12(s0)
20402952:	b7ed                	j	2040293c <__sread+0x18>

20402954 <__swrite>:
__swrite():
20402954:	00c5d783          	lhu	a5,12(a1)
20402958:	1101                	addi	sp,sp,-32
2040295a:	cc22                	sw	s0,24(sp)
2040295c:	ca26                	sw	s1,20(sp)
2040295e:	c84a                	sw	s2,16(sp)
20402960:	c64e                	sw	s3,12(sp)
20402962:	ce06                	sw	ra,28(sp)
20402964:	1007f793          	andi	a5,a5,256
20402968:	84aa                	mv	s1,a0
2040296a:	842e                	mv	s0,a1
2040296c:	8932                	mv	s2,a2
2040296e:	89b6                	mv	s3,a3
20402970:	c791                	beqz	a5,2040297c <__swrite+0x28>
20402972:	00e59583          	lh	a1,14(a1)
20402976:	4689                	li	a3,2
20402978:	4601                	li	a2,0
2040297a:	220d                	jal	20402a9c <_lseek_r>
2040297c:	00c45783          	lhu	a5,12(s0)
20402980:	777d                	lui	a4,0xfffff
20402982:	177d                	addi	a4,a4,-1
20402984:	8ff9                	and	a5,a5,a4
20402986:	00e41583          	lh	a1,14(s0)
2040298a:	00f41623          	sh	a5,12(s0)
2040298e:	4462                	lw	s0,24(sp)
20402990:	40f2                	lw	ra,28(sp)
20402992:	86ce                	mv	a3,s3
20402994:	864a                	mv	a2,s2
20402996:	49b2                	lw	s3,12(sp)
20402998:	4942                	lw	s2,16(sp)
2040299a:	8526                	mv	a0,s1
2040299c:	44d2                	lw	s1,20(sp)
2040299e:	6105                	addi	sp,sp,32
204029a0:	a83d                	j	204029de <_write_r>

204029a2 <__sseek>:
__sseek():
204029a2:	1141                	addi	sp,sp,-16
204029a4:	c422                	sw	s0,8(sp)
204029a6:	842e                	mv	s0,a1
204029a8:	00e59583          	lh	a1,14(a1)
204029ac:	c606                	sw	ra,12(sp)
204029ae:	20fd                	jal	20402a9c <_lseek_r>
204029b0:	57fd                	li	a5,-1
204029b2:	00c45703          	lhu	a4,12(s0)
204029b6:	00f51b63          	bne	a0,a5,204029cc <__sseek+0x2a>
204029ba:	77fd                	lui	a5,0xfffff
204029bc:	17fd                	addi	a5,a5,-1
204029be:	8ff9                	and	a5,a5,a4
204029c0:	00f41623          	sh	a5,12(s0)
204029c4:	40b2                	lw	ra,12(sp)
204029c6:	4422                	lw	s0,8(sp)
204029c8:	0141                	addi	sp,sp,16
204029ca:	8082                	ret
204029cc:	6785                	lui	a5,0x1
204029ce:	8fd9                	or	a5,a5,a4
204029d0:	00f41623          	sh	a5,12(s0)
204029d4:	c868                	sw	a0,84(s0)
204029d6:	b7fd                	j	204029c4 <__sseek+0x22>

204029d8 <__sclose>:
__sclose():
204029d8:	00e59583          	lh	a1,14(a1)
204029dc:	a815                	j	20402a10 <_close_r>

204029de <_write_r>:
_write_r():
204029de:	1141                	addi	sp,sp,-16
204029e0:	c422                	sw	s0,8(sp)
204029e2:	842a                	mv	s0,a0
204029e4:	852e                	mv	a0,a1
204029e6:	85b2                	mv	a1,a2
204029e8:	8636                	mv	a2,a3
204029ea:	5fbfe797          	auipc	a5,0x5fbfe
204029ee:	de07a323          	sw	zero,-538(a5) # 800007d0 <errno>
204029f2:	c606                	sw	ra,12(sp)
204029f4:	2c49                	jal	20402c86 <_write>
204029f6:	57fd                	li	a5,-1
204029f8:	00f51863          	bne	a0,a5,20402a08 <_write_r+0x2a>
204029fc:	5fbfe797          	auipc	a5,0x5fbfe
20402a00:	dd47a783          	lw	a5,-556(a5) # 800007d0 <errno>
20402a04:	c391                	beqz	a5,20402a08 <_write_r+0x2a>
20402a06:	c01c                	sw	a5,0(s0)
20402a08:	40b2                	lw	ra,12(sp)
20402a0a:	4422                	lw	s0,8(sp)
20402a0c:	0141                	addi	sp,sp,16
20402a0e:	8082                	ret

20402a10 <_close_r>:
_close_r():
20402a10:	1141                	addi	sp,sp,-16
20402a12:	c422                	sw	s0,8(sp)
20402a14:	842a                	mv	s0,a0
20402a16:	852e                	mv	a0,a1
20402a18:	5fbfe797          	auipc	a5,0x5fbfe
20402a1c:	da07ac23          	sw	zero,-584(a5) # 800007d0 <errno>
20402a20:	c606                	sw	ra,12(sp)
20402a22:	20cd                	jal	20402b04 <_close>
20402a24:	57fd                	li	a5,-1
20402a26:	00f51863          	bne	a0,a5,20402a36 <_close_r+0x26>
20402a2a:	5fbfe797          	auipc	a5,0x5fbfe
20402a2e:	da67a783          	lw	a5,-602(a5) # 800007d0 <errno>
20402a32:	c391                	beqz	a5,20402a36 <_close_r+0x26>
20402a34:	c01c                	sw	a5,0(s0)
20402a36:	40b2                	lw	ra,12(sp)
20402a38:	4422                	lw	s0,8(sp)
20402a3a:	0141                	addi	sp,sp,16
20402a3c:	8082                	ret

20402a3e <_fstat_r>:
_fstat_r():
20402a3e:	1141                	addi	sp,sp,-16
20402a40:	c422                	sw	s0,8(sp)
20402a42:	842a                	mv	s0,a0
20402a44:	852e                	mv	a0,a1
20402a46:	85b2                	mv	a1,a2
20402a48:	5fbfe797          	auipc	a5,0x5fbfe
20402a4c:	d807a423          	sw	zero,-632(a5) # 800007d0 <errno>
20402a50:	c606                	sw	ra,12(sp)
20402a52:	20dd                	jal	20402b38 <_fstat>
20402a54:	57fd                	li	a5,-1
20402a56:	00f51863          	bne	a0,a5,20402a66 <_fstat_r+0x28>
20402a5a:	5fbfe797          	auipc	a5,0x5fbfe
20402a5e:	d767a783          	lw	a5,-650(a5) # 800007d0 <errno>
20402a62:	c391                	beqz	a5,20402a66 <_fstat_r+0x28>
20402a64:	c01c                	sw	a5,0(s0)
20402a66:	40b2                	lw	ra,12(sp)
20402a68:	4422                	lw	s0,8(sp)
20402a6a:	0141                	addi	sp,sp,16
20402a6c:	8082                	ret

20402a6e <_isatty_r>:
_isatty_r():
20402a6e:	1141                	addi	sp,sp,-16
20402a70:	c422                	sw	s0,8(sp)
20402a72:	842a                	mv	s0,a0
20402a74:	852e                	mv	a0,a1
20402a76:	5fbfe797          	auipc	a5,0x5fbfe
20402a7a:	d407ad23          	sw	zero,-678(a5) # 800007d0 <errno>
20402a7e:	c606                	sw	ra,12(sp)
20402a80:	20fd                	jal	20402b6e <_isatty>
20402a82:	57fd                	li	a5,-1
20402a84:	00f51863          	bne	a0,a5,20402a94 <_isatty_r+0x26>
20402a88:	5fbfe797          	auipc	a5,0x5fbfe
20402a8c:	d487a783          	lw	a5,-696(a5) # 800007d0 <errno>
20402a90:	c391                	beqz	a5,20402a94 <_isatty_r+0x26>
20402a92:	c01c                	sw	a5,0(s0)
20402a94:	40b2                	lw	ra,12(sp)
20402a96:	4422                	lw	s0,8(sp)
20402a98:	0141                	addi	sp,sp,16
20402a9a:	8082                	ret

20402a9c <_lseek_r>:
_lseek_r():
20402a9c:	1141                	addi	sp,sp,-16
20402a9e:	c422                	sw	s0,8(sp)
20402aa0:	842a                	mv	s0,a0
20402aa2:	852e                	mv	a0,a1
20402aa4:	85b2                	mv	a1,a2
20402aa6:	8636                	mv	a2,a3
20402aa8:	5fbfe797          	auipc	a5,0x5fbfe
20402aac:	d207a423          	sw	zero,-728(a5) # 800007d0 <errno>
20402ab0:	c606                	sw	ra,12(sp)
20402ab2:	2209                	jal	20402bb4 <_lseek>
20402ab4:	57fd                	li	a5,-1
20402ab6:	00f51863          	bne	a0,a5,20402ac6 <_lseek_r+0x2a>
20402aba:	5fbfe797          	auipc	a5,0x5fbfe
20402abe:	d167a783          	lw	a5,-746(a5) # 800007d0 <errno>
20402ac2:	c391                	beqz	a5,20402ac6 <_lseek_r+0x2a>
20402ac4:	c01c                	sw	a5,0(s0)
20402ac6:	40b2                	lw	ra,12(sp)
20402ac8:	4422                	lw	s0,8(sp)
20402aca:	0141                	addi	sp,sp,16
20402acc:	8082                	ret

20402ace <__malloc_lock>:
__malloc_lock():
20402ace:	8082                	ret

20402ad0 <__malloc_unlock>:
__malloc_unlock():
20402ad0:	8082                	ret

20402ad2 <_read_r>:
_read_r():
20402ad2:	1141                	addi	sp,sp,-16
20402ad4:	c422                	sw	s0,8(sp)
20402ad6:	842a                	mv	s0,a0
20402ad8:	852e                	mv	a0,a1
20402ada:	85b2                	mv	a1,a2
20402adc:	8636                	mv	a2,a3
20402ade:	5fbfe797          	auipc	a5,0x5fbfe
20402ae2:	ce07a923          	sw	zero,-782(a5) # 800007d0 <errno>
20402ae6:	c606                	sw	ra,12(sp)
20402ae8:	28dd                	jal	20402bde <_read>
20402aea:	57fd                	li	a5,-1
20402aec:	00f51863          	bne	a0,a5,20402afc <_read_r+0x2a>
20402af0:	5fbfe797          	auipc	a5,0x5fbfe
20402af4:	ce07a783          	lw	a5,-800(a5) # 800007d0 <errno>
20402af8:	c391                	beqz	a5,20402afc <_read_r+0x2a>
20402afa:	c01c                	sw	a5,0(s0)
20402afc:	40b2                	lw	ra,12(sp)
20402afe:	4422                	lw	s0,8(sp)
20402b00:	0141                	addi	sp,sp,16
20402b02:	8082                	ret

20402b04 <_close>:
_close():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20402b04:	1101                	addi	sp,sp,-32
20402b06:	ce06                	sw	ra,28(sp)
20402b08:	cc22                	sw	s0,24(sp)
20402b0a:	1000                	addi	s0,sp,32
20402b0c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402b10:	22fd                	jal	20402cfe <__errno>
20402b12:	872a                	mv	a4,a0
20402b14:	05800793          	li	a5,88
20402b18:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:5
    return -1;
20402b1a:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_close.c:6
}
20402b1c:	853e                	mv	a0,a5
20402b1e:	40f2                	lw	ra,28(sp)
20402b20:	4462                	lw	s0,24(sp)
20402b22:	6105                	addi	sp,sp,32
20402b24:	8082                	ret

20402b26 <_exit>:
_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20402b26:	1101                	addi	sp,sp,-32
20402b28:	ce06                	sw	ra,28(sp)
20402b2a:	cc22                	sw	s0,24(sp)
20402b2c:	1000                	addi	s0,sp,32
20402b2e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20402b32:	fec42503          	lw	a0,-20(s0)
20402b36:	2331                	jal	20403042 <metal_shutdown>

20402b38 <_fstat>:
_fstat():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402b38:	1101                	addi	sp,sp,-32
20402b3a:	ce06                	sw	ra,28(sp)
20402b3c:	cc22                	sw	s0,24(sp)
20402b3e:	1000                	addi	s0,sp,32
20402b40:	fea42623          	sw	a0,-20(s0)
20402b44:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20402b48:	2a5d                	jal	20402cfe <__errno>
20402b4a:	872a                	mv	a4,a0
20402b4c:	fa800793          	li	a5,-88
20402b50:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402b52:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_fstat.c:7
}
20402b54:	853e                	mv	a0,a5
20402b56:	40f2                	lw	ra,28(sp)
20402b58:	4462                	lw	s0,24(sp)
20402b5a:	6105                	addi	sp,sp,32
20402b5c:	8082                	ret

20402b5e <_getpid>:
_getpid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_getpid.c:3
#include <errno.h>

int _getpid() { return 1; }
20402b5e:	1141                	addi	sp,sp,-16
20402b60:	c622                	sw	s0,12(sp)
20402b62:	0800                	addi	s0,sp,16
20402b64:	4785                	li	a5,1
20402b66:	853e                	mv	a0,a5
20402b68:	4432                	lw	s0,12(sp)
20402b6a:	0141                	addi	sp,sp,16
20402b6c:	8082                	ret

20402b6e <_isatty>:
_isatty():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20402b6e:	1101                	addi	sp,sp,-32
20402b70:	ce22                	sw	s0,28(sp)
20402b72:	1000                	addi	s0,sp,32
20402b74:	fea42623          	sw	a0,-20(s0)
20402b78:	fec42783          	lw	a5,-20(s0)
20402b7c:	17fd                	addi	a5,a5,-1
20402b7e:	0017b793          	seqz	a5,a5
20402b82:	0ff7f793          	zext.b	a5,a5
20402b86:	853e                	mv	a0,a5
20402b88:	4472                	lw	s0,28(sp)
20402b8a:	6105                	addi	sp,sp,32
20402b8c:	8082                	ret

20402b8e <_kill>:
_kill():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:3
#include <errno.h>

int _kill(int pid, int sig) {
20402b8e:	1101                	addi	sp,sp,-32
20402b90:	ce06                	sw	ra,28(sp)
20402b92:	cc22                	sw	s0,24(sp)
20402b94:	1000                	addi	s0,sp,32
20402b96:	fea42623          	sw	a0,-20(s0)
20402b9a:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:4
    errno = ENOSYS;
20402b9e:	2285                	jal	20402cfe <__errno>
20402ba0:	872a                	mv	a4,a0
20402ba2:	05800793          	li	a5,88
20402ba6:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:5
    return -1;
20402ba8:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_kill.c:6
}
20402baa:	853e                	mv	a0,a5
20402bac:	40f2                	lw	ra,28(sp)
20402bae:	4462                	lw	s0,24(sp)
20402bb0:	6105                	addi	sp,sp,32
20402bb2:	8082                	ret

20402bb4 <_lseek>:
_lseek():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20402bb4:	1101                	addi	sp,sp,-32
20402bb6:	ce06                	sw	ra,28(sp)
20402bb8:	cc22                	sw	s0,24(sp)
20402bba:	1000                	addi	s0,sp,32
20402bbc:	fea42623          	sw	a0,-20(s0)
20402bc0:	feb42423          	sw	a1,-24(s0)
20402bc4:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402bc8:	2a1d                	jal	20402cfe <__errno>
20402bca:	872a                	mv	a4,a0
20402bcc:	05800793          	li	a5,88
20402bd0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20402bd2:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_lseek.c:7
}
20402bd4:	853e                	mv	a0,a5
20402bd6:	40f2                	lw	ra,28(sp)
20402bd8:	4462                	lw	s0,24(sp)
20402bda:	6105                	addi	sp,sp,32
20402bdc:	8082                	ret

20402bde <_read>:
_read():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402bde:	1101                	addi	sp,sp,-32
20402be0:	ce06                	sw	ra,28(sp)
20402be2:	cc22                	sw	s0,24(sp)
20402be4:	1000                	addi	s0,sp,32
20402be6:	fea42623          	sw	a0,-20(s0)
20402bea:	feb42423          	sw	a1,-24(s0)
20402bee:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402bf2:	2231                	jal	20402cfe <__errno>
20402bf4:	872a                	mv	a4,a0
20402bf6:	05800793          	li	a5,88
20402bfa:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:6
    return -1;
20402bfc:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_read.c:7
}
20402bfe:	853e                	mv	a0,a5
20402c00:	40f2                	lw	ra,28(sp)
20402c02:	4462                	lw	s0,24(sp)
20402c04:	6105                	addi	sp,sp,32
20402c06:	8082                	ret

20402c08 <_sbrk>:
_sbrk():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402c08:	7179                	addi	sp,sp,-48
20402c0a:	d606                	sw	ra,44(sp)
20402c0c:	d422                	sw	s0,40(sp)
20402c0e:	1800                	addi	s0,sp,48
20402c10:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402c14:	800007b7          	lui	a5,0x80000
20402c18:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20402c1c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402c20:	cd018713          	addi	a4,gp,-816 # 80000c70 <_sp>
20402c24:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20402c28:	00f71463          	bne	a4,a5,20402c30 <_sbrk+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402c2c:	57fd                	li	a5,-1
20402c2e:	a0b9                	j	20402c7c <_sbrk+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402c30:	800007b7          	lui	a5,0x80000
20402c34:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20402c38:	fdc42783          	lw	a5,-36(s0)
20402c3c:	973e                	add	a4,a4,a5
20402c3e:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20402c42:	02f77663          	bgeu	a4,a5,20402c6e <_sbrk+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402c46:	800007b7          	lui	a5,0x80000
20402c4a:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20402c4e:	fdc42783          	lw	a5,-36(s0)
20402c52:	973e                	add	a4,a4,a5
20402c54:	800007b7          	lui	a5,0x80000
20402c58:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402c5c:	fdc42583          	lw	a1,-36(s0)
20402c60:	fec42503          	lw	a0,-20(s0)
20402c64:	c26fd0ef          	jal	ra,2040008a <metal_mem_scrub>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402c68:	fec42783          	lw	a5,-20(s0)
20402c6c:	a801                	j	20402c7c <_sbrk+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402c6e:	800007b7          	lui	a5,0x80000
20402c72:	4d018713          	addi	a4,gp,1232 # 80001470 <metal_segment_heap_target_end>
20402c76:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402c7a:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_sbrk.c:43
}
20402c7c:	853e                	mv	a0,a5
20402c7e:	50b2                	lw	ra,44(sp)
20402c80:	5422                	lw	s0,40(sp)
20402c82:	6145                	addi	sp,sp,48
20402c84:	8082                	ret

20402c86 <_write>:
_write():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402c86:	7179                	addi	sp,sp,-48
20402c88:	d606                	sw	ra,44(sp)
20402c8a:	d422                	sw	s0,40(sp)
20402c8c:	1800                	addi	s0,sp,48
20402c8e:	fca42e23          	sw	a0,-36(s0)
20402c92:	fcb42c23          	sw	a1,-40(s0)
20402c96:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402c9a:	fdc42703          	lw	a4,-36(s0)
20402c9e:	4785                	li	a5,1
20402ca0:	00f70963          	beq	a4,a5,20402cb2 <_write+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402ca4:	28a9                	jal	20402cfe <__errno>
20402ca6:	872a                	mv	a4,a0
20402ca8:	05800793          	li	a5,88
20402cac:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:10
        return -1;
20402cae:	57fd                	li	a5,-1
20402cb0:	a82d                	j	20402cea <_write+0x64>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20402cb2:	fd842783          	lw	a5,-40(s0)
20402cb6:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402cba:	fe042623          	sw	zero,-20(s0)
20402cbe:	a839                	j	20402cdc <_write+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402cc0:	fe842703          	lw	a4,-24(s0)
20402cc4:	fec42783          	lw	a5,-20(s0)
20402cc8:	97ba                	add	a5,a5,a4
20402cca:	0007c783          	lbu	a5,0(a5)
20402cce:	853e                	mv	a0,a5
20402cd0:	2661                	jal	20403058 <metal_tty_putc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402cd2:	fec42783          	lw	a5,-20(s0)
20402cd6:	0785                	addi	a5,a5,1
20402cd8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402cdc:	fec42703          	lw	a4,-20(s0)
20402ce0:	fd442783          	lw	a5,-44(s0)
20402ce4:	fcf76ee3          	bltu	a4,a5,20402cc0 <_write+0x3a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:16
    return 0;
20402ce8:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/gloss/sys_write.c:17
}
20402cea:	853e                	mv	a0,a5
20402cec:	50b2                	lw	ra,44(sp)
20402cee:	5422                	lw	s0,40(sp)
20402cf0:	6145                	addi	sp,sp,48
20402cf2:	8082                	ret

20402cf4 <atexit>:
atexit():
20402cf4:	85aa                	mv	a1,a0
20402cf6:	4681                	li	a3,0
20402cf8:	4601                	li	a2,0
20402cfa:	4501                	li	a0,0
20402cfc:	a0e1                	j	20402dc4 <__register_exitproc>

20402cfe <__errno>:
__errno():
20402cfe:	5fbfe517          	auipc	a0,0x5fbfe
20402d02:	aa252503          	lw	a0,-1374(a0) # 800007a0 <_impure_ptr>
20402d06:	8082                	ret

20402d08 <exit>:
exit():
20402d08:	1141                	addi	sp,sp,-16
20402d0a:	c422                	sw	s0,8(sp)
20402d0c:	c606                	sw	ra,12(sp)
20402d0e:	00000797          	auipc	a5,0x0
20402d12:	13278793          	addi	a5,a5,306 # 20402e40 <__call_exitprocs>
20402d16:	842a                	mv	s0,a0
20402d18:	c399                	beqz	a5,20402d1e <exit+0x16>
20402d1a:	4581                	li	a1,0
20402d1c:	2215                	jal	20402e40 <__call_exitprocs>
20402d1e:	fffff517          	auipc	a0,0xfffff
20402d22:	88252503          	lw	a0,-1918(a0) # 204015a0 <_global_impure_ptr>
20402d26:	551c                	lw	a5,40(a0)
20402d28:	c391                	beqz	a5,20402d2c <exit+0x24>
20402d2a:	9782                	jalr	a5
20402d2c:	8522                	mv	a0,s0
20402d2e:	3be5                	jal	20402b26 <_exit>

20402d30 <__libc_fini_array>:
__libc_fini_array():
20402d30:	1141                	addi	sp,sp,-16
20402d32:	c422                	sw	s0,8(sp)
20402d34:	c226                	sw	s1,4(sp)
20402d36:	ffffd417          	auipc	s0,0xffffd
20402d3a:	5ba40413          	addi	s0,s0,1466 # 204002f0 <__fini_array_end>
20402d3e:	ffffd497          	auipc	s1,0xffffd
20402d42:	5b248493          	addi	s1,s1,1458 # 204002f0 <__fini_array_end>
20402d46:	8c05                	sub	s0,s0,s1
20402d48:	c606                	sw	ra,12(sp)
20402d4a:	8409                	srai	s0,s0,0x2
20402d4c:	e411                	bnez	s0,20402d58 <__libc_fini_array+0x28>
20402d4e:	40b2                	lw	ra,12(sp)
20402d50:	4422                	lw	s0,8(sp)
20402d52:	4492                	lw	s1,4(sp)
20402d54:	0141                	addi	sp,sp,16
20402d56:	8082                	ret
20402d58:	147d                	addi	s0,s0,-1
20402d5a:	00241793          	slli	a5,s0,0x2
20402d5e:	97a6                	add	a5,a5,s1
20402d60:	439c                	lw	a5,0(a5)
20402d62:	9782                	jalr	a5
20402d64:	b7e5                	j	20402d4c <__libc_fini_array+0x1c>

20402d66 <__libc_init_array>:
__libc_init_array():
20402d66:	1141                	addi	sp,sp,-16
20402d68:	c422                	sw	s0,8(sp)
20402d6a:	c226                	sw	s1,4(sp)
20402d6c:	ffffd417          	auipc	s0,0xffffd
20402d70:	57440413          	addi	s0,s0,1396 # 204002e0 <_metal_tty_init_ptr>
20402d74:	ffffd497          	auipc	s1,0xffffd
20402d78:	56c48493          	addi	s1,s1,1388 # 204002e0 <_metal_tty_init_ptr>
20402d7c:	8c81                	sub	s1,s1,s0
20402d7e:	c04a                	sw	s2,0(sp)
20402d80:	c606                	sw	ra,12(sp)
20402d82:	8489                	srai	s1,s1,0x2
20402d84:	4901                	li	s2,0
20402d86:	02991563          	bne	s2,s1,20402db0 <__libc_init_array+0x4a>
20402d8a:	ffffd417          	auipc	s0,0xffffd
20402d8e:	55640413          	addi	s0,s0,1366 # 204002e0 <_metal_tty_init_ptr>
20402d92:	ffffd497          	auipc	s1,0xffffd
20402d96:	54e48493          	addi	s1,s1,1358 # 204002e0 <_metal_tty_init_ptr>
20402d9a:	8c81                	sub	s1,s1,s0
20402d9c:	8489                	srai	s1,s1,0x2
20402d9e:	4901                	li	s2,0
20402da0:	00991d63          	bne	s2,s1,20402dba <__libc_init_array+0x54>
20402da4:	40b2                	lw	ra,12(sp)
20402da6:	4422                	lw	s0,8(sp)
20402da8:	4492                	lw	s1,4(sp)
20402daa:	4902                	lw	s2,0(sp)
20402dac:	0141                	addi	sp,sp,16
20402dae:	8082                	ret
20402db0:	401c                	lw	a5,0(s0)
20402db2:	0905                	addi	s2,s2,1
20402db4:	0411                	addi	s0,s0,4
20402db6:	9782                	jalr	a5
20402db8:	b7f9                	j	20402d86 <__libc_init_array+0x20>
20402dba:	401c                	lw	a5,0(s0)
20402dbc:	0905                	addi	s2,s2,1
20402dbe:	0411                	addi	s0,s0,4
20402dc0:	9782                	jalr	a5
20402dc2:	bff9                	j	20402da0 <__libc_init_array+0x3a>

20402dc4 <__register_exitproc>:
__register_exitproc():
20402dc4:	88aa                	mv	a7,a0
20402dc6:	5fbfe517          	auipc	a0,0x5fbfe
20402dca:	a0e50513          	addi	a0,a0,-1522 # 800007d4 <_global_atexit>
20402dce:	411c                	lw	a5,0(a0)
20402dd0:	ef91                	bnez	a5,20402dec <__register_exitproc+0x28>
20402dd2:	5fbfe717          	auipc	a4,0x5fbfe
20402dd6:	a0e70713          	addi	a4,a4,-1522 # 800007e0 <_global_atexit0>
20402dda:	c118                	sw	a4,0(a0)
20402ddc:	00000513          	li	a0,0
20402de0:	87ba                	mv	a5,a4
20402de2:	c509                	beqz	a0,20402dec <__register_exitproc+0x28>
20402de4:	411c                	lw	a5,0(a0)
20402de6:	08f72423          	sw	a5,136(a4)
20402dea:	87ba                	mv	a5,a4
20402dec:	43d8                	lw	a4,4(a5)
20402dee:	487d                	li	a6,31
20402df0:	557d                	li	a0,-1
20402df2:	04e84663          	blt	a6,a4,20402e3e <__register_exitproc+0x7a>
20402df6:	02088d63          	beqz	a7,20402e30 <__register_exitproc+0x6c>
20402dfa:	0887a803          	lw	a6,136(a5)
20402dfe:	04080063          	beqz	a6,20402e3e <__register_exitproc+0x7a>
20402e02:	00271513          	slli	a0,a4,0x2
20402e06:	9542                	add	a0,a0,a6
20402e08:	c110                	sw	a2,0(a0)
20402e0a:	10082303          	lw	t1,256(a6)
20402e0e:	4605                	li	a2,1
20402e10:	00e61633          	sll	a2,a2,a4
20402e14:	00c36333          	or	t1,t1,a2
20402e18:	10682023          	sw	t1,256(a6)
20402e1c:	08d52023          	sw	a3,128(a0)
20402e20:	4689                	li	a3,2
20402e22:	00d89763          	bne	a7,a3,20402e30 <__register_exitproc+0x6c>
20402e26:	10482683          	lw	a3,260(a6)
20402e2a:	8e55                	or	a2,a2,a3
20402e2c:	10c82223          	sw	a2,260(a6)
20402e30:	00170693          	addi	a3,a4,1
20402e34:	070a                	slli	a4,a4,0x2
20402e36:	c3d4                	sw	a3,4(a5)
20402e38:	97ba                	add	a5,a5,a4
20402e3a:	c78c                	sw	a1,8(a5)
20402e3c:	4501                	li	a0,0
20402e3e:	8082                	ret

20402e40 <__call_exitprocs>:
__call_exitprocs():
20402e40:	7179                	addi	sp,sp,-48
20402e42:	ca56                	sw	s5,20(sp)
20402e44:	c85a                	sw	s6,16(sp)
20402e46:	c65e                	sw	s7,12(sp)
20402e48:	c462                	sw	s8,8(sp)
20402e4a:	d606                	sw	ra,44(sp)
20402e4c:	d422                	sw	s0,40(sp)
20402e4e:	d226                	sw	s1,36(sp)
20402e50:	d04a                	sw	s2,32(sp)
20402e52:	ce4e                	sw	s3,28(sp)
20402e54:	cc52                	sw	s4,24(sp)
20402e56:	c266                	sw	s9,4(sp)
20402e58:	8b2a                	mv	s6,a0
20402e5a:	8aae                	mv	s5,a1
20402e5c:	5fbfeb97          	auipc	s7,0x5fbfe
20402e60:	978b8b93          	addi	s7,s7,-1672 # 800007d4 <_global_atexit>
20402e64:	4c05                	li	s8,1
20402e66:	000ba483          	lw	s1,0(s7)
20402e6a:	cc81                	beqz	s1,20402e82 <__call_exitprocs+0x42>
20402e6c:	40c0                	lw	s0,4(s1)
20402e6e:	0884a983          	lw	s3,136(s1)
20402e72:	fff40913          	addi	s2,s0,-1
20402e76:	040a                	slli	s0,s0,0x2
20402e78:	00898a33          	add	s4,s3,s0
20402e7c:	9426                	add	s0,s0,s1
20402e7e:	00095f63          	bgez	s2,20402e9c <__call_exitprocs+0x5c>
20402e82:	50b2                	lw	ra,44(sp)
20402e84:	5422                	lw	s0,40(sp)
20402e86:	5492                	lw	s1,36(sp)
20402e88:	5902                	lw	s2,32(sp)
20402e8a:	49f2                	lw	s3,28(sp)
20402e8c:	4a62                	lw	s4,24(sp)
20402e8e:	4ad2                	lw	s5,20(sp)
20402e90:	4b42                	lw	s6,16(sp)
20402e92:	4bb2                	lw	s7,12(sp)
20402e94:	4c22                	lw	s8,8(sp)
20402e96:	4c92                	lw	s9,4(sp)
20402e98:	6145                	addi	sp,sp,48
20402e9a:	8082                	ret
20402e9c:	000a8c63          	beqz	s5,20402eb4 <__call_exitprocs+0x74>
20402ea0:	00099663          	bnez	s3,20402eac <__call_exitprocs+0x6c>
20402ea4:	197d                	addi	s2,s2,-1
20402ea6:	1a71                	addi	s4,s4,-4
20402ea8:	1471                	addi	s0,s0,-4
20402eaa:	bfd1                	j	20402e7e <__call_exitprocs+0x3e>
20402eac:	07ca2783          	lw	a5,124(s4)
20402eb0:	ff579ae3          	bne	a5,s5,20402ea4 <__call_exitprocs+0x64>
20402eb4:	40d8                	lw	a4,4(s1)
20402eb6:	405c                	lw	a5,4(s0)
20402eb8:	177d                	addi	a4,a4,-1
20402eba:	03271863          	bne	a4,s2,20402eea <__call_exitprocs+0xaa>
20402ebe:	0124a223          	sw	s2,4(s1)
20402ec2:	d3ed                	beqz	a5,20402ea4 <__call_exitprocs+0x64>
20402ec4:	0044ac83          	lw	s9,4(s1)
20402ec8:	00098863          	beqz	s3,20402ed8 <__call_exitprocs+0x98>
20402ecc:	1009a683          	lw	a3,256(s3)
20402ed0:	012c1733          	sll	a4,s8,s2
20402ed4:	8ef9                	and	a3,a3,a4
20402ed6:	ee89                	bnez	a3,20402ef0 <__call_exitprocs+0xb0>
20402ed8:	9782                	jalr	a5
20402eda:	40d8                	lw	a4,4(s1)
20402edc:	000ba783          	lw	a5,0(s7)
20402ee0:	f99713e3          	bne	a4,s9,20402e66 <__call_exitprocs+0x26>
20402ee4:	fcf480e3          	beq	s1,a5,20402ea4 <__call_exitprocs+0x64>
20402ee8:	bfbd                	j	20402e66 <__call_exitprocs+0x26>
20402eea:	00042223          	sw	zero,4(s0)
20402eee:	bfd1                	j	20402ec2 <__call_exitprocs+0x82>
20402ef0:	1049a683          	lw	a3,260(s3)
20402ef4:	ffca2583          	lw	a1,-4(s4)
20402ef8:	8f75                	and	a4,a4,a3
20402efa:	e701                	bnez	a4,20402f02 <__call_exitprocs+0xc2>
20402efc:	855a                	mv	a0,s6
20402efe:	9782                	jalr	a5
20402f00:	bfe9                	j	20402eda <__call_exitprocs+0x9a>
20402f02:	852e                	mv	a0,a1
20402f04:	9782                	jalr	a5
20402f06:	bfd1                	j	20402eda <__call_exitprocs+0x9a>

20402f08 <metal_init>:
metal_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402f08:	1101                	addi	sp,sp,-32
20402f0a:	ce06                	sw	ra,28(sp)
20402f0c:	cc22                	sw	s0,24(sp)
20402f0e:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402f10:	800007b7          	lui	a5,0x80000
20402f14:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
20402f18:	efa9                	bnez	a5,20402f72 <metal_init+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402f1a:	800007b7          	lui	a5,0x80000
20402f1e:	4705                	li	a4,1
20402f20:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402f24:	204007b7          	lui	a5,0x20400
20402f28:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402f2c:	204007b7          	lui	a5,0x20400
20402f30:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402f34:	04e7f163          	bgeu	a5,a4,20402f76 <metal_init+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402f38:	204007b7          	lui	a5,0x20400
20402f3c:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402f40:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402f44:	a831                	j	20402f60 <metal_init+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402f46:	fec42783          	lw	a5,-20(s0)
20402f4a:	439c                	lw	a5,0(a5)
20402f4c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:33

        func();
20402f50:	fe842783          	lw	a5,-24(s0)
20402f54:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:35

        funcptr += 1;
20402f56:	fec42783          	lw	a5,-20(s0)
20402f5a:	0791                	addi	a5,a5,4
20402f5c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402f60:	fec42703          	lw	a4,-20(s0)
20402f64:	204007b7          	lui	a5,0x20400
20402f68:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402f6c:	fcf71de3          	bne	a4,a5,20402f46 <metal_init+0x3e>
20402f70:	a021                	j	20402f78 <metal_init+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:21
        return;
20402f72:	0001                	nop
20402f74:	a011                	j	20402f78 <metal_init+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:26
        return;
20402f76:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:37
    }
}
20402f78:	40f2                	lw	ra,28(sp)
20402f7a:	4462                	lw	s0,24(sp)
20402f7c:	6105                	addi	sp,sp,32
20402f7e:	8082                	ret

20402f80 <metal_fini>:
metal_fini():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:39

void metal_fini(void) {
20402f80:	1101                	addi	sp,sp,-32
20402f82:	ce06                	sw	ra,28(sp)
20402f84:	cc22                	sw	s0,24(sp)
20402f86:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402f88:	800007b7          	lui	a5,0x80000
20402f8c:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
20402f90:	efa9                	bnez	a5,20402fea <metal_fini+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402f92:	800007b7          	lui	a5,0x80000
20402f96:	4705                	li	a4,1
20402f98:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20402f9c:	204007b7          	lui	a5,0x20400
20402fa0:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402fa4:	204007b7          	lui	a5,0x20400
20402fa8:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402fac:	04e7f163          	bgeu	a5,a4,20402fee <metal_fini+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20402fb0:	204007b7          	lui	a5,0x20400
20402fb4:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402fb8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402fbc:	a831                	j	20402fd8 <metal_fini+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20402fbe:	fec42783          	lw	a5,-20(s0)
20402fc2:	439c                	lw	a5,0(a5)
20402fc4:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:55

        func();
20402fc8:	fe842783          	lw	a5,-24(s0)
20402fcc:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:57

        funcptr += 1;
20402fce:	fec42783          	lw	a5,-20(s0)
20402fd2:	0791                	addi	a5,a5,4
20402fd4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402fd8:	fec42703          	lw	a4,-20(s0)
20402fdc:	204007b7          	lui	a5,0x20400
20402fe0:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402fe4:	fcf71de3          	bne	a4,a5,20402fbe <metal_fini+0x3e>
20402fe8:	a021                	j	20402ff0 <metal_fini+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:43
        return;
20402fea:	0001                	nop
20402fec:	a011                	j	20402ff0 <metal_fini+0x70>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:48
        return;
20402fee:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:59
    }
}
20402ff0:	40f2                	lw	ra,28(sp)
20402ff2:	4462                	lw	s0,24(sp)
20402ff4:	6105                	addi	sp,sp,32
20402ff6:	8082                	ret

20402ff8 <metal_init_run>:
metal_init_run():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402ff8:	1141                	addi	sp,sp,-16
20402ffa:	c606                	sw	ra,12(sp)
20402ffc:	c422                	sw	s0,8(sp)
20402ffe:	0800                	addi	s0,sp,16
20403000:	3721                	jal	20402f08 <metal_init>
20403002:	0001                	nop
20403004:	40b2                	lw	ra,12(sp)
20403006:	4422                	lw	s0,8(sp)
20403008:	0141                	addi	sp,sp,16
2040300a:	8082                	ret

2040300c <metal_fini_run>:
metal_fini_run():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040300c:	1141                	addi	sp,sp,-16
2040300e:	c606                	sw	ra,12(sp)
20403010:	c422                	sw	s0,8(sp)
20403012:	0800                	addi	s0,sp,16
20403014:	37b5                	jal	20402f80 <metal_fini>
20403016:	0001                	nop
20403018:	40b2                	lw	ra,12(sp)
2040301a:	4422                	lw	s0,8(sp)
2040301c:	0141                	addi	sp,sp,16
2040301e:	8082                	ret

20403020 <__metal_shutdown_exit>:
__metal_shutdown_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20403020:	1101                	addi	sp,sp,-32
20403022:	ce06                	sw	ra,28(sp)
20403024:	cc22                	sw	s0,24(sp)
20403026:	1000                	addi	s0,sp,32
20403028:	fea42623          	sw	a0,-20(s0)
2040302c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20403030:	fec42783          	lw	a5,-20(s0)
20403034:	439c                	lw	a5,0(a5)
20403036:	439c                	lw	a5,0(a5)
20403038:	fe842583          	lw	a1,-24(s0)
2040303c:	fec42503          	lw	a0,-20(s0)
20403040:	9782                	jalr	a5

20403042 <metal_shutdown>:
metal_shutdown():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20403042:	1101                	addi	sp,sp,-32
20403044:	ce06                	sw	ra,28(sp)
20403046:	cc22                	sw	s0,24(sp)
20403048:	1000                	addi	s0,sp,32
2040304a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
2040304e:	fec42583          	lw	a1,-20(s0)
20403052:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20403056:	37e9                	jal	20403020 <__metal_shutdown_exit>

20403058 <metal_tty_putc>:
metal_tty_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20403058:	1101                	addi	sp,sp,-32
2040305a:	ce06                	sw	ra,28(sp)
2040305c:	cc22                	sw	s0,24(sp)
2040305e:	1000                	addi	s0,sp,32
20403060:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20403064:	fec42583          	lw	a1,-20(s0)
20403068:	800007b7          	lui	a5,0x80000
2040306c:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20403070:	282d                	jal	204030aa <metal_uart_putc>
20403072:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/tty.c:14
}
20403074:	853e                	mv	a0,a5
20403076:	40f2                	lw	ra,28(sp)
20403078:	4462                	lw	s0,24(sp)
2040307a:	6105                	addi	sp,sp,32
2040307c:	8082                	ret

2040307e <metal_uart_init>:
metal_uart_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
2040307e:	1101                	addi	sp,sp,-32
20403080:	ce06                	sw	ra,28(sp)
20403082:	cc22                	sw	s0,24(sp)
20403084:	1000                	addi	s0,sp,32
20403086:	fea42623          	sw	a0,-20(s0)
2040308a:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
2040308e:	fec42783          	lw	a5,-20(s0)
20403092:	439c                	lw	a5,0(a5)
20403094:	439c                	lw	a5,0(a5)
20403096:	fe842583          	lw	a1,-24(s0)
2040309a:	fec42503          	lw	a0,-20(s0)
2040309e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:61
}
204030a0:	0001                	nop
204030a2:	40f2                	lw	ra,28(sp)
204030a4:	4462                	lw	s0,24(sp)
204030a6:	6105                	addi	sp,sp,32
204030a8:	8082                	ret

204030aa <metal_uart_putc>:
metal_uart_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
204030aa:	1101                	addi	sp,sp,-32
204030ac:	ce06                	sw	ra,28(sp)
204030ae:	cc22                	sw	s0,24(sp)
204030b0:	1000                	addi	s0,sp,32
204030b2:	fea42623          	sw	a0,-20(s0)
204030b6:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
204030ba:	fec42783          	lw	a5,-20(s0)
204030be:	439c                	lw	a5,0(a5)
204030c0:	43dc                	lw	a5,4(a5)
204030c2:	fe842583          	lw	a1,-24(s0)
204030c6:	fec42503          	lw	a0,-20(s0)
204030ca:	9782                	jalr	a5
204030cc:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:71
}
204030ce:	853e                	mv	a0,a5
204030d0:	40f2                	lw	ra,28(sp)
204030d2:	4462                	lw	s0,24(sp)
204030d4:	6105                	addi	sp,sp,32
204030d6:	8082                	ret

204030d8 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
204030d8:	1101                	addi	sp,sp,-32
204030da:	ce06                	sw	ra,28(sp)
204030dc:	cc22                	sw	s0,24(sp)
204030de:	1000                	addi	s0,sp,32
204030e0:	fea42623          	sw	a0,-20(s0)
204030e4:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
204030e8:	fec42783          	lw	a5,-20(s0)
204030ec:	439c                	lw	a5,0(a5)
204030ee:	4bdc                	lw	a5,20(a5)
204030f0:	fe842583          	lw	a1,-24(s0)
204030f4:	fec42503          	lw	a0,-20(s0)
204030f8:	9782                	jalr	a5
204030fa:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/uart.h:113
}
204030fc:	853e                	mv	a0,a5
204030fe:	40f2                	lw	ra,28(sp)
20403100:	4462                	lw	s0,24(sp)
20403102:	6105                	addi	sp,sp,32
20403104:	8082                	ret

20403106 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20403106:	1101                	addi	sp,sp,-32
20403108:	ce22                	sw	s0,28(sp)
2040310a:	1000                	addi	s0,sp,32
2040310c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20403110:	fec42703          	lw	a4,-20(s0)
20403114:	800007b7          	lui	a5,0x80000
20403118:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
2040311c:	00f71563          	bne	a4,a5,20403126 <__metal_driver_sifive_clint0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20403120:	020007b7          	lui	a5,0x2000
20403124:	a011                	j	20403128 <__metal_driver_sifive_clint0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:207
	}
	else {
		return 0;
20403126:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:209
	}
}
20403128:	853e                	mv	a0,a5
2040312a:	4472                	lw	s0,28(sp)
2040312c:	6105                	addi	sp,sp,32
2040312e:	8082                	ret

20403130 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20403130:	1101                	addi	sp,sp,-32
20403132:	ce22                	sw	s0,28(sp)
20403134:	1000                	addi	s0,sp,32
20403136:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040313a:	fec42703          	lw	a4,-20(s0)
2040313e:	800007b7          	lui	a5,0x80000
20403142:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
20403146:	00f71463          	bne	a4,a5,2040314e <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
2040314a:	4789                	li	a5,2
2040314c:	a011                	j	20403150 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:227
	}
	else {
		return 0;
2040314e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:229
	}
}
20403150:	853e                	mv	a0,a5
20403152:	4472                	lw	s0,28(sp)
20403154:	6105                	addi	sp,sp,32
20403156:	8082                	ret

20403158 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20403158:	1101                	addi	sp,sp,-32
2040315a:	ce22                	sw	s0,28(sp)
2040315c:	1000                	addi	s0,sp,32
2040315e:	fea42623          	sw	a0,-20(s0)
20403162:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:233
	if (idx == 0) {
20403166:	fe842783          	lw	a5,-24(s0)
2040316a:	e791                	bnez	a5,20403176 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040316c:	800007b7          	lui	a5,0x80000
20403170:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20403174:	a821                	j	2040318c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20403176:	fe842703          	lw	a4,-24(s0)
2040317a:	4785                	li	a5,1
2040317c:	00f71763          	bne	a4,a5,2040318a <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20403180:	800007b7          	lui	a5,0x80000
20403184:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20403188:	a011                	j	2040318c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:240
	}
	else {
		return NULL;
2040318a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:242
	}
}
2040318c:	853e                	mv	a0,a5
2040318e:	4472                	lw	s0,28(sp)
20403190:	6105                	addi	sp,sp,32
20403192:	8082                	ret

20403194 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20403194:	1101                	addi	sp,sp,-32
20403196:	ce22                	sw	s0,28(sp)
20403198:	1000                	addi	s0,sp,32
2040319a:	fea42623          	sw	a0,-20(s0)
2040319e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:246
	if (idx == 0) {
204031a2:	fe842783          	lw	a5,-24(s0)
204031a6:	e399                	bnez	a5,204031ac <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:247
		return 3;
204031a8:	478d                	li	a5,3
204031aa:	a809                	j	204031bc <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:249
	}
	else if (idx == 1) {
204031ac:	fe842703          	lw	a4,-24(s0)
204031b0:	4785                	li	a5,1
204031b2:	00f71463          	bne	a4,a5,204031ba <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:250
		return 7;
204031b6:	479d                	li	a5,7
204031b8:	a011                	j	204031bc <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:253
	}
	else {
		return 0;
204031ba:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:255
	}
}
204031bc:	853e                	mv	a0,a5
204031be:	4472                	lw	s0,28(sp)
204031c0:	6105                	addi	sp,sp,32
204031c2:	8082                	ret

204031c4 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
204031c4:	715d                	addi	sp,sp,-80
204031c6:	c686                	sw	ra,76(sp)
204031c8:	c4a2                	sw	s0,72(sp)
204031ca:	c2ca                	sw	s2,68(sp)
204031cc:	c0ce                	sw	s3,64(sp)
204031ce:	de52                	sw	s4,60(sp)
204031d0:	dc56                	sw	s5,56(sp)
204031d2:	da5a                	sw	s6,52(sp)
204031d4:	d85e                	sw	s7,48(sp)
204031d6:	d662                	sw	s8,44(sp)
204031d8:	d466                	sw	s9,40(sp)
204031da:	0880                	addi	s0,sp,80
204031dc:	faa42e23          	sw	a0,-68(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204031e0:	fbc42783          	lw	a5,-68(s0)
204031e4:	853e                	mv	a0,a5
204031e6:	3705                	jal	20403106 <__metal_driver_sifive_clint0_control_base>
204031e8:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
204031ec:	fcc42703          	lw	a4,-52(s0)
204031f0:	67b1                	lui	a5,0xc
204031f2:	17f1                	addi	a5,a5,-4
204031f4:	97ba                	add	a5,a5,a4
204031f6:	439c                	lw	a5,0(a5)
204031f8:	fcf42423          	sw	a5,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
204031fc:	fcc42703          	lw	a4,-52(s0)
20403200:	67b1                	lui	a5,0xc
20403202:	17e1                	addi	a5,a5,-8
20403204:	97ba                	add	a5,a5,a4
20403206:	439c                	lw	a5,0(a5)
20403208:	fcf42223          	sw	a5,-60(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040320c:	fcc42703          	lw	a4,-52(s0)
20403210:	67b1                	lui	a5,0xc
20403212:	17f1                	addi	a5,a5,-4
20403214:	97ba                	add	a5,a5,a4
20403216:	439c                	lw	a5,0(a5)
20403218:	fc842703          	lw	a4,-56(s0)
2040321c:	fcf718e3          	bne	a4,a5,204031ec <__metal_clint0_mtime_get+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20403220:	fc842783          	lw	a5,-56(s0)
20403224:	8c3e                	mv	s8,a5
20403226:	4c81                	li	s9,0
20403228:	000c1993          	slli	s3,s8,0x0
2040322c:	4901                	li	s2,0
2040322e:	fc442783          	lw	a5,-60(s0)
20403232:	8a3e                	mv	s4,a5
20403234:	4a81                	li	s5,0
20403236:	01496b33          	or	s6,s2,s4
2040323a:	0159ebb3          	or	s7,s3,s5
2040323e:	875a                	mv	a4,s6
20403240:	87de                	mv	a5,s7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:30
}
20403242:	853a                	mv	a0,a4
20403244:	85be                	mv	a1,a5
20403246:	40b6                	lw	ra,76(sp)
20403248:	4426                	lw	s0,72(sp)
2040324a:	4916                	lw	s2,68(sp)
2040324c:	4986                	lw	s3,64(sp)
2040324e:	5a72                	lw	s4,60(sp)
20403250:	5ae2                	lw	s5,56(sp)
20403252:	5b52                	lw	s6,52(sp)
20403254:	5bc2                	lw	s7,48(sp)
20403256:	5c32                	lw	s8,44(sp)
20403258:	5ca2                	lw	s9,40(sp)
2040325a:	6161                	addi	sp,sp,80
2040325c:	8082                	ret

2040325e <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
2040325e:	7179                	addi	sp,sp,-48
20403260:	d606                	sw	ra,44(sp)
20403262:	d422                	sw	s0,40(sp)
20403264:	d24a                	sw	s2,36(sp)
20403266:	d04e                	sw	s3,32(sp)
20403268:	1800                	addi	s0,sp,48
2040326a:	fca42e23          	sw	a0,-36(s0)
2040326e:	fcb42c23          	sw	a1,-40(s0)
20403272:	fcc42823          	sw	a2,-48(s0)
20403276:	fcd42a23          	sw	a3,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2040327a:	fdc42783          	lw	a5,-36(s0)
2040327e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20403282:	fec42783          	lw	a5,-20(s0)
20403286:	853e                	mv	a0,a5
20403288:	3dbd                	jal	20403106 <__metal_driver_sifive_clint0_control_base>
2040328a:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040328e:	fd842783          	lw	a5,-40(s0)
20403292:	078e                	slli	a5,a5,0x3
20403294:	873e                	mv	a4,a5
20403296:	fe842783          	lw	a5,-24(s0)
2040329a:	973e                	add	a4,a4,a5
2040329c:	6791                	lui	a5,0x4
2040329e:	0791                	addi	a5,a5,4
204032a0:	97ba                	add	a5,a5,a4
204032a2:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204032a4:	57fd                	li	a5,-1
204032a6:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204032a8:	fd842783          	lw	a5,-40(s0)
204032ac:	078e                	slli	a5,a5,0x3
204032ae:	873e                	mv	a4,a5
204032b0:	fe842783          	lw	a5,-24(s0)
204032b4:	973e                	add	a4,a4,a5
204032b6:	6791                	lui	a5,0x4
204032b8:	97ba                	add	a5,a5,a4
204032ba:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
204032bc:	fd042783          	lw	a5,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
204032c0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
204032c2:	fd442783          	lw	a5,-44(s0)
204032c6:	0007d913          	srli	s2,a5,0x0
204032ca:	4981                	li	s3,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204032cc:	fd842783          	lw	a5,-40(s0)
204032d0:	078e                	slli	a5,a5,0x3
204032d2:	873e                	mv	a4,a5
204032d4:	fe842783          	lw	a5,-24(s0)
204032d8:	973e                	add	a4,a4,a5
204032da:	6791                	lui	a5,0x4
204032dc:	0791                	addi	a5,a5,4
204032de:	97ba                	add	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
204032e0:	874a                	mv	a4,s2
204032e2:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
204032e4:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:55
}
204032e6:	853e                	mv	a0,a5
204032e8:	50b2                	lw	ra,44(sp)
204032ea:	5422                	lw	s0,40(sp)
204032ec:	5912                	lw	s2,36(sp)
204032ee:	5982                	lw	s3,32(sp)
204032f0:	6145                	addi	sp,sp,48
204032f2:	8082                	ret

204032f4 <_get_cpu_intc>:
_get_cpu_intc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
204032f4:	1101                	addi	sp,sp,-32
204032f6:	ce06                	sw	ra,28(sp)
204032f8:	cc22                	sw	s0,24(sp)
204032fa:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
204032fc:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20403300:	f14027f3          	csrr	a5,mhartid
20403304:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403308:	fec42783          	lw	a5,-20(s0)
2040330c:	853e                	mv	a0,a5
2040330e:	2c0040ef          	jal	ra,204075ce <metal_cpu_get>
20403312:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20403316:	fe842503          	lw	a0,-24(s0)
2040331a:	28e040ef          	jal	ra,204075a8 <metal_cpu_interrupt_controller>
2040331e:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:65
}
20403320:	853e                	mv	a0,a5
20403322:	40f2                	lw	ra,28(sp)
20403324:	4462                	lw	s0,24(sp)
20403326:	6105                	addi	sp,sp,32
20403328:	8082                	ret

2040332a <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
2040332a:	7139                	addi	sp,sp,-64
2040332c:	de06                	sw	ra,60(sp)
2040332e:	dc22                	sw	s0,56(sp)
20403330:	0080                	addi	s0,sp,64
20403332:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403336:	fcc42503          	lw	a0,-52(s0)
2040333a:	3bdd                	jal	20403130 <__metal_driver_sifive_clint0_num_interrupts>
2040333c:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20403340:	fcc42783          	lw	a5,-52(s0)
20403344:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20403348:	fe442783          	lw	a5,-28(s0)
2040334c:	43dc                	lw	a5,4(a5)
2040334e:	efa9                	bnez	a5,204033a8 <__metal_driver_riscv_clint0_init+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20403350:	fe042623          	sw	zero,-20(s0)
20403354:	a081                	j	20403394 <__metal_driver_riscv_clint0_init+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403356:	fec42583          	lw	a1,-20(s0)
2040335a:	fcc42503          	lw	a0,-52(s0)
2040335e:	3bed                	jal	20403158 <__metal_driver_sifive_clint0_interrupt_parents>
20403360:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403364:	fec42583          	lw	a1,-20(s0)
20403368:	fcc42503          	lw	a0,-52(s0)
2040336c:	3525                	jal	20403194 <__metal_driver_sifive_clint0_interrupt_lines>
2040336e:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20403372:	fe042783          	lw	a5,-32(s0)
20403376:	439c                	lw	a5,0(a5)
20403378:	4fdc                	lw	a5,28(a5)
2040337a:	fcc42683          	lw	a3,-52(s0)
2040337e:	4601                	li	a2,0
20403380:	fdc42583          	lw	a1,-36(s0)
20403384:	fe042503          	lw	a0,-32(s0)
20403388:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2040338a:	fec42783          	lw	a5,-20(s0)
2040338e:	0785                	addi	a5,a5,1
20403390:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20403394:	fec42703          	lw	a4,-20(s0)
20403398:	fe842783          	lw	a5,-24(s0)
2040339c:	faf74de3          	blt	a4,a5,20403356 <__metal_driver_riscv_clint0_init+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204033a0:	fe442783          	lw	a5,-28(s0)
204033a4:	4705                	li	a4,1
204033a6:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204033a8:	0001                	nop
204033aa:	50f2                	lw	ra,60(sp)
204033ac:	5462                	lw	s0,56(sp)
204033ae:	6121                	addi	sp,sp,64
204033b0:	8082                	ret

204033b2 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
204033b2:	7139                	addi	sp,sp,-64
204033b4:	de06                	sw	ra,60(sp)
204033b6:	dc22                	sw	s0,56(sp)
204033b8:	0080                	addi	s0,sp,64
204033ba:	fca42623          	sw	a0,-52(s0)
204033be:	fcb42423          	sw	a1,-56(s0)
204033c2:	fcc42223          	sw	a2,-60(s0)
204033c6:	fcd42023          	sw	a3,-64(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
204033ca:	57fd                	li	a5,-1
204033cc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
204033d0:	48a010ef          	jal	ra,2040485a <__metal_controller_interrupt_vector_mode>
204033d4:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
204033d8:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
204033dc:	3f21                	jal	204032f4 <_get_cpu_intc>
204033de:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204033e2:	fcc42503          	lw	a0,-52(s0)
204033e6:	33a9                	jal	20403130 <__metal_driver_sifive_clint0_num_interrupts>
204033e8:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
204033ec:	fe042703          	lw	a4,-32(s0)
204033f0:	4785                	li	a5,1
204033f2:	00f70863          	beq	a4,a5,20403402 <__metal_driver_riscv_clint0_register+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
204033f6:	fe042783          	lw	a5,-32(s0)
204033fa:	c781                	beqz	a5,20403402 <__metal_driver_riscv_clint0_register+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
204033fc:	fec42783          	lw	a5,-20(s0)
20403400:	a049                	j	20403482 <__metal_driver_riscv_clint0_register+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20403402:	fe042223          	sw	zero,-28(s0)
20403406:	a091                	j	2040344a <__metal_driver_riscv_clint0_register+0x98>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403408:	fe442583          	lw	a1,-28(s0)
2040340c:	fcc42503          	lw	a0,-52(s0)
20403410:	3351                	jal	20403194 <__metal_driver_sifive_clint0_interrupt_lines>
20403412:	fca42a23          	sw	a0,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403416:	fe442583          	lw	a1,-28(s0)
2040341a:	fcc42503          	lw	a0,-52(s0)
2040341e:	3b2d                	jal	20403158 <__metal_driver_sifive_clint0_interrupt_parents>
20403420:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20403424:	fdc42703          	lw	a4,-36(s0)
20403428:	fe842783          	lw	a5,-24(s0)
2040342c:	00f71863          	bne	a4,a5,2040343c <__metal_driver_riscv_clint0_register+0x8a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20403430:	fc842703          	lw	a4,-56(s0)
20403434:	fd442783          	lw	a5,-44(s0)
20403438:	02f70063          	beq	a4,a5,20403458 <__metal_driver_riscv_clint0_register+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
2040343c:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20403440:	fe442783          	lw	a5,-28(s0)
20403444:	0785                	addi	a5,a5,1
20403446:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
2040344a:	fe442703          	lw	a4,-28(s0)
2040344e:	fd842783          	lw	a5,-40(s0)
20403452:	faf74be3          	blt	a4,a5,20403408 <__metal_driver_riscv_clint0_register+0x56>
20403456:	a011                	j	2040345a <__metal_driver_riscv_clint0_register+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20403458:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
2040345a:	fe842783          	lw	a5,-24(s0)
2040345e:	c385                	beqz	a5,2040347e <__metal_driver_riscv_clint0_register+0xcc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20403460:	fe842783          	lw	a5,-24(s0)
20403464:	439c                	lw	a5,0(a5)
20403466:	4fdc                	lw	a5,28(a5)
20403468:	fc042683          	lw	a3,-64(s0)
2040346c:	fc442603          	lw	a2,-60(s0)
20403470:	fc842583          	lw	a1,-56(s0)
20403474:	fe842503          	lw	a0,-24(s0)
20403478:	9782                	jalr	a5
2040347a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
2040347e:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:115
}
20403482:	853e                	mv	a0,a5
20403484:	50f2                	lw	ra,60(sp)
20403486:	5462                	lw	s0,56(sp)
20403488:	6121                	addi	sp,sp,64
2040348a:	8082                	ret

2040348c <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2040348c:	7179                	addi	sp,sp,-48
2040348e:	d622                	sw	s0,44(sp)
20403490:	1800                	addi	s0,sp,48
20403492:	fca42e23          	sw	a0,-36(s0)
20403496:	fcb42c23          	sw	a1,-40(s0)
2040349a:	fcc42a23          	sw	a2,-44(s0)
2040349e:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204034a2:	57fd                	li	a5,-1
204034a4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204034a8:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:123
}
204034ac:	853e                	mv	a0,a5
204034ae:	5432                	lw	s0,44(sp)
204034b0:	6145                	addi	sp,sp,48
204034b2:	8082                	ret

204034b4 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
204034b4:	1101                	addi	sp,sp,-32
204034b6:	ce06                	sw	ra,28(sp)
204034b8:	cc22                	sw	s0,24(sp)
204034ba:	1000                	addi	s0,sp,32
204034bc:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
204034c0:	39a010ef          	jal	ra,2040485a <__metal_controller_interrupt_vector_mode>
204034c4:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:128
}
204034c6:	853e                	mv	a0,a5
204034c8:	40f2                	lw	ra,28(sp)
204034ca:	4462                	lw	s0,24(sp)
204034cc:	6105                	addi	sp,sp,32
204034ce:	8082                	ret

204034d0 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204034d0:	7179                	addi	sp,sp,-48
204034d2:	d606                	sw	ra,44(sp)
204034d4:	d422                	sw	s0,40(sp)
204034d6:	1800                	addi	s0,sp,48
204034d8:	fca42e23          	sw	a0,-36(s0)
204034dc:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
204034e0:	57fd                	li	a5,-1
204034e2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
204034e6:	3539                	jal	204032f4 <_get_cpu_intc>
204034e8:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
204034ec:	fe842783          	lw	a5,-24(s0)
204034f0:	c395                	beqz	a5,20403514 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
204034f2:	fd842703          	lw	a4,-40(s0)
204034f6:	4785                	li	a5,1
204034f8:	02e7e063          	bltu	a5,a4,20403518 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
204034fc:	fe842783          	lw	a5,-24(s0)
20403500:	439c                	lw	a5,0(a5)
20403502:	43dc                	lw	a5,4(a5)
20403504:	fd842583          	lw	a1,-40(s0)
20403508:	fe842503          	lw	a0,-24(s0)
2040350c:	9782                	jalr	a5
2040350e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20403512:	a021                	j	2040351a <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20403514:	0001                	nop
20403516:	a011                	j	2040351a <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403518:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
2040351a:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:148
}
2040351e:	853e                	mv	a0,a5
20403520:	50b2                	lw	ra,44(sp)
20403522:	5422                	lw	s0,40(sp)
20403524:	6145                	addi	sp,sp,48
20403526:	8082                	ret

20403528 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403528:	7139                	addi	sp,sp,-64
2040352a:	de06                	sw	ra,60(sp)
2040352c:	dc22                	sw	s0,56(sp)
2040352e:	0080                	addi	s0,sp,64
20403530:	fca42623          	sw	a0,-52(s0)
20403534:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403538:	57fd                	li	a5,-1
2040353a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
2040353e:	fc842783          	lw	a5,-56(s0)
20403542:	c7c9                	beqz	a5,204035cc <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20403544:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403548:	3375                	jal	204032f4 <_get_cpu_intc>
2040354a:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040354e:	fcc42503          	lw	a0,-52(s0)
20403552:	3ef9                	jal	20403130 <__metal_driver_sifive_clint0_num_interrupts>
20403554:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20403558:	fe042223          	sw	zero,-28(s0)
2040355c:	a091                	j	204035a0 <__metal_driver_riscv_clint0_enable+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040355e:	fe442583          	lw	a1,-28(s0)
20403562:	fcc42503          	lw	a0,-52(s0)
20403566:	313d                	jal	20403194 <__metal_driver_sifive_clint0_interrupt_lines>
20403568:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040356c:	fe442583          	lw	a1,-28(s0)
20403570:	fcc42503          	lw	a0,-52(s0)
20403574:	36d5                	jal	20403158 <__metal_driver_sifive_clint0_interrupt_parents>
20403576:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
2040357a:	fe042703          	lw	a4,-32(s0)
2040357e:	fe842783          	lw	a5,-24(s0)
20403582:	00f71863          	bne	a4,a5,20403592 <__metal_driver_riscv_clint0_enable+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20403586:	fc842703          	lw	a4,-56(s0)
2040358a:	fd842783          	lw	a5,-40(s0)
2040358e:	02f70063          	beq	a4,a5,204035ae <__metal_driver_riscv_clint0_enable+0x86>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20403592:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403596:	fe442783          	lw	a5,-28(s0)
2040359a:	0785                	addi	a5,a5,1
2040359c:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204035a0:	fe442703          	lw	a4,-28(s0)
204035a4:	fdc42783          	lw	a5,-36(s0)
204035a8:	faf74be3          	blt	a4,a5,2040355e <__metal_driver_riscv_clint0_enable+0x36>
204035ac:	a011                	j	204035b0 <__metal_driver_riscv_clint0_enable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
204035ae:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
204035b0:	fe842783          	lw	a5,-24(s0)
204035b4:	cf81                	beqz	a5,204035cc <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
204035b6:	fe842783          	lw	a5,-24(s0)
204035ba:	439c                	lw	a5,0(a5)
204035bc:	53dc                	lw	a5,36(a5)
204035be:	fc842583          	lw	a1,-56(s0)
204035c2:	fe842503          	lw	a0,-24(s0)
204035c6:	9782                	jalr	a5
204035c8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
204035cc:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:178
}
204035d0:	853e                	mv	a0,a5
204035d2:	50f2                	lw	ra,60(sp)
204035d4:	5462                	lw	s0,56(sp)
204035d6:	6121                	addi	sp,sp,64
204035d8:	8082                	ret

204035da <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
204035da:	7139                	addi	sp,sp,-64
204035dc:	de06                	sw	ra,60(sp)
204035de:	dc22                	sw	s0,56(sp)
204035e0:	0080                	addi	s0,sp,64
204035e2:	fca42623          	sw	a0,-52(s0)
204035e6:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
204035ea:	57fd                	li	a5,-1
204035ec:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
204035f0:	fc842783          	lw	a5,-56(s0)
204035f4:	c7d9                	beqz	a5,20403682 <__metal_driver_riscv_clint0_disable+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
204035f6:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204035fa:	39ed                	jal	204032f4 <_get_cpu_intc>
204035fc:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403600:	fcc42503          	lw	a0,-52(s0)
20403604:	b2dff0ef          	jal	ra,20403130 <__metal_driver_sifive_clint0_num_interrupts>
20403608:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2040360c:	fe042223          	sw	zero,-28(s0)
20403610:	a099                	j	20403656 <__metal_driver_riscv_clint0_disable+0x7c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403612:	fe442583          	lw	a1,-28(s0)
20403616:	fcc42503          	lw	a0,-52(s0)
2040361a:	3ead                	jal	20403194 <__metal_driver_sifive_clint0_interrupt_lines>
2040361c:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403620:	fe442583          	lw	a1,-28(s0)
20403624:	fcc42503          	lw	a0,-52(s0)
20403628:	b31ff0ef          	jal	ra,20403158 <__metal_driver_sifive_clint0_interrupt_parents>
2040362c:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20403630:	fe042703          	lw	a4,-32(s0)
20403634:	fe842783          	lw	a5,-24(s0)
20403638:	00f71863          	bne	a4,a5,20403648 <__metal_driver_riscv_clint0_disable+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
2040363c:	fc842703          	lw	a4,-56(s0)
20403640:	fd842783          	lw	a5,-40(s0)
20403644:	02f70063          	beq	a4,a5,20403664 <__metal_driver_riscv_clint0_disable+0x8a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20403648:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2040364c:	fe442783          	lw	a5,-28(s0)
20403650:	0785                	addi	a5,a5,1
20403652:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20403656:	fe442703          	lw	a4,-28(s0)
2040365a:	fdc42783          	lw	a5,-36(s0)
2040365e:	faf74ae3          	blt	a4,a5,20403612 <__metal_driver_riscv_clint0_disable+0x38>
20403662:	a011                	j	20403666 <__metal_driver_riscv_clint0_disable+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20403664:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20403666:	fe842783          	lw	a5,-24(s0)
2040366a:	cf81                	beqz	a5,20403682 <__metal_driver_riscv_clint0_disable+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
2040366c:	fe842783          	lw	a5,-24(s0)
20403670:	439c                	lw	a5,0(a5)
20403672:	579c                	lw	a5,40(a5)
20403674:	fc842583          	lw	a1,-56(s0)
20403678:	fe842503          	lw	a0,-24(s0)
2040367c:	9782                	jalr	a5
2040367e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20403682:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:208
}
20403686:	853e                	mv	a0,a5
20403688:	50f2                	lw	ra,60(sp)
2040368a:	5462                	lw	s0,56(sp)
2040368c:	6121                	addi	sp,sp,64
2040368e:	8082                	ret

20403690 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20403690:	7179                	addi	sp,sp,-48
20403692:	d606                	sw	ra,44(sp)
20403694:	d422                	sw	s0,40(sp)
20403696:	1800                	addi	s0,sp,48
20403698:	fca42e23          	sw	a0,-36(s0)
2040369c:	fcb42c23          	sw	a1,-40(s0)
204036a0:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
204036a4:	57fd                	li	a5,-1
204036a6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
204036aa:	fdc42783          	lw	a5,-36(s0)
204036ae:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
204036b2:	fdc42503          	lw	a0,-36(s0)
204036b6:	a51ff0ef          	jal	ra,20403106 <__metal_driver_sifive_clint0_control_base>
204036ba:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
204036be:	fd842703          	lw	a4,-40(s0)
204036c2:	4791                	li	a5,4
204036c4:	0cf70163          	beq	a4,a5,20403786 <__metal_driver_riscv_clint0_command_request+0xf6>
204036c8:	fd842703          	lw	a4,-40(s0)
204036cc:	4791                	li	a5,4
204036ce:	0ee7c163          	blt	a5,a4,204037b0 <__metal_driver_riscv_clint0_command_request+0x120>
204036d2:	fd842703          	lw	a4,-40(s0)
204036d6:	478d                	li	a5,3
204036d8:	06f70663          	beq	a4,a5,20403744 <__metal_driver_riscv_clint0_command_request+0xb4>
204036dc:	fd842703          	lw	a4,-40(s0)
204036e0:	478d                	li	a5,3
204036e2:	0ce7c763          	blt	a5,a4,204037b0 <__metal_driver_riscv_clint0_command_request+0x120>
204036e6:	fd842703          	lw	a4,-40(s0)
204036ea:	4785                	li	a5,1
204036ec:	00f70863          	beq	a4,a5,204036fc <__metal_driver_riscv_clint0_command_request+0x6c>
204036f0:	fd842703          	lw	a4,-40(s0)
204036f4:	4789                	li	a5,2
204036f6:	02f70363          	beq	a4,a5,2040371c <__metal_driver_riscv_clint0_command_request+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
204036fa:	a85d                	j	204037b0 <__metal_driver_riscv_clint0_command_request+0x120>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
204036fc:	fd442783          	lw	a5,-44(s0)
20403700:	cbd5                	beqz	a5,204037b4 <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20403702:	fe842503          	lw	a0,-24(s0)
20403706:	abfff0ef          	jal	ra,204031c4 <__metal_clint0_mtime_get>
2040370a:	872a                	mv	a4,a0
2040370c:	87ae                	mv	a5,a1
2040370e:	fd442683          	lw	a3,-44(s0)
20403712:	c298                	sw	a4,0(a3)
20403714:	c2dc                	sw	a5,4(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403716:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040371a:	a869                	j	204037b4 <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2040371c:	fd442783          	lw	a5,-44(s0)
20403720:	cfc1                	beqz	a5,204037b8 <__metal_driver_riscv_clint0_command_request+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20403722:	fd442783          	lw	a5,-44(s0)
20403726:	439c                	lw	a5,0(a5)
20403728:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
2040372c:	fe042783          	lw	a5,-32(s0)
20403730:	078a                	slli	a5,a5,0x2
20403732:	873e                	mv	a4,a5
20403734:	fe442783          	lw	a5,-28(s0)
20403738:	97ba                	add	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
2040373a:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
2040373e:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403742:	a89d                	j	204037b8 <__metal_driver_riscv_clint0_command_request+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20403744:	fd442783          	lw	a5,-44(s0)
20403748:	cbb5                	beqz	a5,204037bc <__metal_driver_riscv_clint0_command_request+0x12c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
2040374a:	fd442783          	lw	a5,-44(s0)
2040374e:	439c                	lw	a5,0(a5)
20403750:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20403754:	fe042783          	lw	a5,-32(s0)
20403758:	078a                	slli	a5,a5,0x2
2040375a:	873e                	mv	a4,a5
2040375c:	fe442783          	lw	a5,-28(s0)
20403760:	97ba                	add	a5,a5,a4
20403762:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20403764:	4785                	li	a5,1
20403766:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20403768:	0480000f          	fence	o,i
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
2040376c:	fe042783          	lw	a5,-32(s0)
20403770:	078a                	slli	a5,a5,0x2
20403772:	873e                	mv	a4,a5
20403774:	fe442783          	lw	a5,-28(s0)
20403778:	97ba                	add	a5,a5,a4
2040377a:	439c                	lw	a5,0(a5)
2040377c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403780:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403784:	a825                	j	204037bc <__metal_driver_riscv_clint0_command_request+0x12c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20403786:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
2040378a:	fd442783          	lw	a5,-44(s0)
2040378e:	cb8d                	beqz	a5,204037c0 <__metal_driver_riscv_clint0_command_request+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403790:	fd442783          	lw	a5,-44(s0)
20403794:	439c                	lw	a5,0(a5)
20403796:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
2040379a:	fe042783          	lw	a5,-32(s0)
2040379e:	078a                	slli	a5,a5,0x2
204037a0:	873e                	mv	a4,a5
204037a2:	fe442783          	lw	a5,-28(s0)
204037a6:	97ba                	add	a5,a5,a4
204037a8:	439c                	lw	a5,0(a5)
204037aa:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204037ae:	a809                	j	204037c0 <__metal_driver_riscv_clint0_command_request+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
204037b0:	0001                	nop
204037b2:	a801                	j	204037c2 <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204037b4:	0001                	nop
204037b6:	a031                	j	204037c2 <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204037b8:	0001                	nop
204037ba:	a021                	j	204037c2 <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204037bc:	0001                	nop
204037be:	a011                	j	204037c2 <__metal_driver_riscv_clint0_command_request+0x132>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204037c0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
204037c2:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:267
}
204037c6:	853e                	mv	a0,a5
204037c8:	50b2                	lw	ra,44(sp)
204037ca:	5422                	lw	s0,40(sp)
204037cc:	6145                	addi	sp,sp,48
204037ce:	8082                	ret

204037d0 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
204037d0:	7179                	addi	sp,sp,-48
204037d2:	d606                	sw	ra,44(sp)
204037d4:	d422                	sw	s0,40(sp)
204037d6:	1800                	addi	s0,sp,48
204037d8:	fca42e23          	sw	a0,-36(s0)
204037dc:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
204037e0:	61d030ef          	jal	ra,204075fc <metal_cpu_get_current_hartid>
204037e4:	87aa                	mv	a5,a0
204037e6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
204037ea:	fec40793          	addi	a5,s0,-20
204037ee:	863e                	mv	a2,a5
204037f0:	4589                	li	a1,2
204037f2:	fdc42503          	lw	a0,-36(s0)
204037f6:	3d69                	jal	20403690 <__metal_driver_riscv_clint0_command_request>
204037f8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
204037fa:	853e                	mv	a0,a5
204037fc:	50b2                	lw	ra,44(sp)
204037fe:	5422                	lw	s0,40(sp)
20403800:	6145                	addi	sp,sp,48
20403802:	8082                	ret

20403804 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403804:	7179                	addi	sp,sp,-48
20403806:	d606                	sw	ra,44(sp)
20403808:	d422                	sw	s0,40(sp)
2040380a:	1800                	addi	s0,sp,48
2040380c:	fca42e23          	sw	a0,-36(s0)
20403810:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403814:	5e9030ef          	jal	ra,204075fc <metal_cpu_get_current_hartid>
20403818:	87aa                	mv	a5,a0
2040381a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
2040381e:	fec40793          	addi	a5,s0,-20
20403822:	863e                	mv	a2,a5
20403824:	458d                	li	a1,3
20403826:	fdc42503          	lw	a0,-36(s0)
2040382a:	359d                	jal	20403690 <__metal_driver_riscv_clint0_command_request>
2040382c:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
2040382e:	853e                	mv	a0,a5
20403830:	50b2                	lw	ra,44(sp)
20403832:	5422                	lw	s0,40(sp)
20403834:	6145                	addi	sp,sp,48
20403836:	8082                	ret

20403838 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403838:	1101                	addi	sp,sp,-32
2040383a:	ce22                	sw	s0,28(sp)
2040383c:	1000                	addi	s0,sp,32
2040383e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403842:	fec42703          	lw	a4,-20(s0)
20403846:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040384a:	00f71463          	bne	a4,a5,20403852 <__metal_driver_cpu_hartid+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:263
		return 0;
2040384e:	4781                	li	a5,0
20403850:	a011                	j	20403854 <__metal_driver_cpu_hartid+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:266
	}
	else {
		return -1;
20403852:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:268
	}
}
20403854:	853e                	mv	a0,a5
20403856:	4472                	lw	s0,28(sp)
20403858:	6105                	addi	sp,sp,32
2040385a:	8082                	ret

2040385c <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
2040385c:	1101                	addi	sp,sp,-32
2040385e:	ce22                	sw	s0,28(sp)
20403860:	1000                	addi	s0,sp,32
20403862:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403866:	fec42703          	lw	a4,-20(s0)
2040386a:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040386e:	00f71763          	bne	a4,a5,2040387c <__metal_driver_cpu_timebase+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:273
		return 1000000;
20403872:	000f47b7          	lui	a5,0xf4
20403876:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
2040387a:	a011                	j	2040387e <__metal_driver_cpu_timebase+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:276
	}
	else {
		return 0;
2040387c:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:278
	}
}
2040387e:	853e                	mv	a0,a5
20403880:	4472                	lw	s0,28(sp)
20403882:	6105                	addi	sp,sp,32
20403884:	8082                	ret

20403886 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20403886:	1101                	addi	sp,sp,-32
20403888:	ce22                	sw	s0,28(sp)
2040388a:	1000                	addi	s0,sp,32
2040388c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403890:	fec42703          	lw	a4,-20(s0)
20403894:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403898:	00f71763          	bne	a4,a5,204038a6 <__metal_driver_cpu_interrupt_controller+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
2040389c:	800007b7          	lui	a5,0x80000
204038a0:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
204038a4:	a011                	j	204038a8 <__metal_driver_cpu_interrupt_controller+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:286
	}
	else {
		return NULL;
204038a6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:288
	}
}
204038a8:	853e                	mv	a0,a5
204038aa:	4472                	lw	s0,28(sp)
204038ac:	6105                	addi	sp,sp,32
204038ae:	8082                	ret

204038b0 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
204038b0:	1101                	addi	sp,sp,-32
204038b2:	ce22                	sw	s0,28(sp)
204038b4:	1000                	addi	s0,sp,32
204038b6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204038ba:	fec42703          	lw	a4,-20(s0)
204038be:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204038c2:	00f71463          	bne	a4,a5,204038ca <__metal_driver_cpu_buserror+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:303
		return NULL;
204038c6:	4781                	li	a5,0
204038c8:	a011                	j	204038cc <__metal_driver_cpu_buserror+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:306
	}
	else {
		return NULL;
204038ca:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:308
	}
}
204038cc:	853e                	mv	a0,a5
204038ce:	4472                	lw	s0,28(sp)
204038d0:	6105                	addi	sp,sp,32
204038d2:	8082                	ret

204038d4 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
204038d4:	1101                	addi	sp,sp,-32
204038d6:	ce22                	sw	s0,28(sp)
204038d8:	1000                	addi	s0,sp,32
204038da:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
204038de:	fec42783          	lw	a5,-20(s0)
204038e2:	00f04c63          	bgtz	a5,204038fa <__metal_driver_cpu_get+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
204038e6:	800007b7          	lui	a5,0x80000
204038ea:	fec42703          	lw	a4,-20(s0)
204038ee:	070a                	slli	a4,a4,0x2
204038f0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204038f4:	97ba                	add	a5,a5,a4
204038f6:	439c                	lw	a5,0(a5)
204038f8:	a011                	j	204038fc <__metal_driver_cpu_get+0x28>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
204038fa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:30
}
204038fc:	853e                	mv	a0,a5
204038fe:	4472                	lw	s0,28(sp)
20403900:	6105                	addi	sp,sp,32
20403902:	8082                	ret

20403904 <__metal_myhart_id>:
__metal_myhart_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403904:	1101                	addi	sp,sp,-32
20403906:	ce22                	sw	s0,28(sp)
20403908:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2040390a:	f14027f3          	csrr	a5,mhartid
2040390e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403912:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403916:	853e                	mv	a0,a5
20403918:	4472                	lw	s0,28(sp)
2040391a:	6105                	addi	sp,sp,32
2040391c:	8082                	ret

2040391e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
2040391e:	1101                	addi	sp,sp,-32
20403920:	ce22                	sw	s0,28(sp)
20403922:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403924:	47a1                	li	a5,8
20403926:	3007a7f3          	csrrs	a5,mstatus,a5
2040392a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040392e:	0001                	nop
20403930:	4472                	lw	s0,28(sp)
20403932:	6105                	addi	sp,sp,32
20403934:	8082                	ret

20403936 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403936:	1101                	addi	sp,sp,-32
20403938:	ce22                	sw	s0,28(sp)
2040393a:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
2040393c:	47a1                	li	a5,8
2040393e:	3007b7f3          	csrrc	a5,mstatus,a5
20403942:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403946:	0001                	nop
20403948:	4472                	lw	s0,28(sp)
2040394a:	6105                	addi	sp,sp,32
2040394c:	8082                	ret

2040394e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
2040394e:	1101                	addi	sp,sp,-32
20403950:	ce22                	sw	s0,28(sp)
20403952:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403954:	47a1                	li	a5,8
20403956:	3047a7f3          	csrrs	a5,mie,a5
2040395a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040395e:	0001                	nop
20403960:	4472                	lw	s0,28(sp)
20403962:	6105                	addi	sp,sp,32
20403964:	8082                	ret

20403966 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20403966:	1101                	addi	sp,sp,-32
20403968:	ce22                	sw	s0,28(sp)
2040396a:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2040396c:	47a1                	li	a5,8
2040396e:	3047b7f3          	csrrc	a5,mie,a5
20403972:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403976:	0001                	nop
20403978:	4472                	lw	s0,28(sp)
2040397a:	6105                	addi	sp,sp,32
2040397c:	8082                	ret

2040397e <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2040397e:	1101                	addi	sp,sp,-32
20403980:	ce22                	sw	s0,28(sp)
20403982:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403984:	08000793          	li	a5,128
20403988:	3047a7f3          	csrrs	a5,mie,a5
2040398c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403990:	0001                	nop
20403992:	4472                	lw	s0,28(sp)
20403994:	6105                	addi	sp,sp,32
20403996:	8082                	ret

20403998 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20403998:	1101                	addi	sp,sp,-32
2040399a:	ce22                	sw	s0,28(sp)
2040399c:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2040399e:	08000793          	li	a5,128
204039a2:	3047b7f3          	csrrc	a5,mie,a5
204039a6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204039aa:	0001                	nop
204039ac:	4472                	lw	s0,28(sp)
204039ae:	6105                	addi	sp,sp,32
204039b0:	8082                	ret

204039b2 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
204039b2:	1101                	addi	sp,sp,-32
204039b4:	ce22                	sw	s0,28(sp)
204039b6:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204039b8:	6785                	lui	a5,0x1
204039ba:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204039be:	3047a7f3          	csrrs	a5,mie,a5
204039c2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204039c6:	0001                	nop
204039c8:	4472                	lw	s0,28(sp)
204039ca:	6105                	addi	sp,sp,32
204039cc:	8082                	ret

204039ce <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
204039ce:	1101                	addi	sp,sp,-32
204039d0:	ce22                	sw	s0,28(sp)
204039d2:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
204039d4:	6785                	lui	a5,0x1
204039d6:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204039da:	3047b7f3          	csrrc	a5,mie,a5
204039de:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204039e2:	0001                	nop
204039e4:	4472                	lw	s0,28(sp)
204039e6:	6105                	addi	sp,sp,32
204039e8:	8082                	ret

204039ea <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
204039ea:	7179                	addi	sp,sp,-48
204039ec:	d622                	sw	s0,44(sp)
204039ee:	1800                	addi	s0,sp,48
204039f0:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
204039f4:	fdc42783          	lw	a5,-36(s0)
204039f8:	4705                	li	a4,1
204039fa:	00f717b3          	sll	a5,a4,a5
204039fe:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20403a02:	fec42783          	lw	a5,-20(s0)
20403a06:	3047a7f3          	csrrs	a5,mie,a5
20403a0a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403a0e:	0001                	nop
20403a10:	5432                	lw	s0,44(sp)
20403a12:	6145                	addi	sp,sp,48
20403a14:	8082                	ret

20403a16 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20403a16:	7179                	addi	sp,sp,-48
20403a18:	d622                	sw	s0,44(sp)
20403a1a:	1800                	addi	s0,sp,48
20403a1c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20403a20:	fdc42783          	lw	a5,-36(s0)
20403a24:	4705                	li	a4,1
20403a26:	00f717b3          	sll	a5,a4,a5
20403a2a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403a2e:	fec42783          	lw	a5,-20(s0)
20403a32:	3047b7f3          	csrrc	a5,mie,a5
20403a36:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403a3a:	0001                	nop
20403a3c:	5432                	lw	s0,44(sp)
20403a3e:	6145                	addi	sp,sp,48
20403a40:	8082                	ret

20403a42 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20403a42:	1101                	addi	sp,sp,-32
20403a44:	ce06                	sw	ra,28(sp)
20403a46:	cc22                	sw	s0,24(sp)
20403a48:	1000                	addi	s0,sp,32
20403a4a:	fea42623          	sw	a0,-20(s0)
20403a4e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20403a52:	06400513          	li	a0,100
20403a56:	decff0ef          	jal	ra,20403042 <metal_shutdown>

20403a5a <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403a5a:	1101                	addi	sp,sp,-32
20403a5c:	ce06                	sw	ra,28(sp)
20403a5e:	cc22                	sw	s0,24(sp)
20403a60:	1000                	addi	s0,sp,32
20403a62:	fea42623          	sw	a0,-20(s0)
20403a66:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403a6a:	0c800513          	li	a0,200
20403a6e:	dd4ff0ef          	jal	ra,20403042 <metal_shutdown>

20403a72 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403a72:	715d                	addi	sp,sp,-80
20403a74:	c686                	sw	ra,76(sp)
20403a76:	c496                	sw	t0,72(sp)
20403a78:	c29a                	sw	t1,68(sp)
20403a7a:	c09e                	sw	t2,64(sp)
20403a7c:	de22                	sw	s0,60(sp)
20403a7e:	dc2a                	sw	a0,56(sp)
20403a80:	da2e                	sw	a1,52(sp)
20403a82:	d832                	sw	a2,48(sp)
20403a84:	d636                	sw	a3,44(sp)
20403a86:	d43a                	sw	a4,40(sp)
20403a88:	d23e                	sw	a5,36(sp)
20403a8a:	d042                	sw	a6,32(sp)
20403a8c:	ce46                	sw	a7,28(sp)
20403a8e:	cc72                	sw	t3,24(sp)
20403a90:	ca76                	sw	t4,20(sp)
20403a92:	c87a                	sw	t5,16(sp)
20403a94:	c67e                	sw	t6,12(sp)
20403a96:	0880                	addi	s0,sp,80
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20403a98:	12c00513          	li	a0,300
20403a9c:	da6ff0ef          	jal	ra,20403042 <metal_shutdown>

20403aa0 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403aa0:	711d                	addi	sp,sp,-96
20403aa2:	ce86                	sw	ra,92(sp)
20403aa4:	cc96                	sw	t0,88(sp)
20403aa6:	ca9a                	sw	t1,84(sp)
20403aa8:	c89e                	sw	t2,80(sp)
20403aaa:	c6a2                	sw	s0,76(sp)
20403aac:	c4aa                	sw	a0,72(sp)
20403aae:	c2ae                	sw	a1,68(sp)
20403ab0:	c0b2                	sw	a2,64(sp)
20403ab2:	de36                	sw	a3,60(sp)
20403ab4:	dc3a                	sw	a4,56(sp)
20403ab6:	da3e                	sw	a5,52(sp)
20403ab8:	d842                	sw	a6,48(sp)
20403aba:	d646                	sw	a7,44(sp)
20403abc:	d472                	sw	t3,40(sp)
20403abe:	d276                	sw	t4,36(sp)
20403ac0:	d07a                	sw	t5,32(sp)
20403ac2:	ce7e                	sw	t6,28(sp)
20403ac4:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20403ac6:	3d3d                	jal	20403904 <__metal_myhart_id>
20403ac8:	872a                	mv	a4,a0
20403aca:	800007b7          	lui	a5,0x80000
20403ace:	070a                	slli	a4,a4,0x2
20403ad0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403ad4:	97ba                	add	a5,a5,a4
20403ad6:	439c                	lw	a5,0(a5)
20403ad8:	faf42623          	sw	a5,-84(s0)
20403adc:	fac42783          	lw	a5,-84(s0)
20403ae0:	c785                	beqz	a5,20403b08 <metal_software_interrupt_vector_handler+0x68>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20403ae2:	fac42503          	lw	a0,-84(s0)
20403ae6:	3345                	jal	20403886 <__metal_driver_cpu_interrupt_controller>
20403ae8:	faa42423          	sw	a0,-88(s0)
20403aec:	fa842783          	lw	a5,-88(s0)
20403af0:	0e07a783          	lw	a5,224(a5)
20403af4:	faf42223          	sw	a5,-92(s0)
20403af8:	fa842783          	lw	a5,-88(s0)
20403afc:	0d87a783          	lw	a5,216(a5)
20403b00:	fa442583          	lw	a1,-92(s0)
20403b04:	450d                	li	a0,3
20403b06:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403b08:	0001                	nop
20403b0a:	40f6                	lw	ra,92(sp)
20403b0c:	42e6                	lw	t0,88(sp)
20403b0e:	4356                	lw	t1,84(sp)
20403b10:	43c6                	lw	t2,80(sp)
20403b12:	4436                	lw	s0,76(sp)
20403b14:	4526                	lw	a0,72(sp)
20403b16:	4596                	lw	a1,68(sp)
20403b18:	4606                	lw	a2,64(sp)
20403b1a:	56f2                	lw	a3,60(sp)
20403b1c:	5762                	lw	a4,56(sp)
20403b1e:	57d2                	lw	a5,52(sp)
20403b20:	5842                	lw	a6,48(sp)
20403b22:	58b2                	lw	a7,44(sp)
20403b24:	5e22                	lw	t3,40(sp)
20403b26:	5e92                	lw	t4,36(sp)
20403b28:	5f02                	lw	t5,32(sp)
20403b2a:	4ff2                	lw	t6,28(sp)
20403b2c:	6125                	addi	sp,sp,96
20403b2e:	30200073          	mret

20403b32 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403b32:	7179                	addi	sp,sp,-48
20403b34:	d606                	sw	ra,44(sp)
20403b36:	d422                	sw	s0,40(sp)
20403b38:	1800                	addi	s0,sp,48
20403b3a:	fca42e23          	sw	a0,-36(s0)
20403b3e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403b42:	33c9                	jal	20403904 <__metal_myhart_id>
20403b44:	872a                	mv	a4,a0
20403b46:	800007b7          	lui	a5,0x80000
20403b4a:	070a                	slli	a4,a4,0x2
20403b4c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403b50:	97ba                	add	a5,a5,a4
20403b52:	439c                	lw	a5,0(a5)
20403b54:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403b58:	342027f3          	csrr	a5,mcause
20403b5c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20403b60:	fec42783          	lw	a5,-20(s0)
20403b64:	c795                	beqz	a5,20403b90 <__metal_default_sw_handler+0x5e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403b66:	fec42503          	lw	a0,-20(s0)
20403b6a:	3b31                	jal	20403886 <__metal_driver_cpu_interrupt_controller>
20403b6c:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403b70:	fe842783          	lw	a5,-24(s0)
20403b74:	3ff7f793          	andi	a5,a5,1023
20403b78:	fe442703          	lw	a4,-28(s0)
20403b7c:	0e878793          	addi	a5,a5,232
20403b80:	078a                	slli	a5,a5,0x2
20403b82:	97ba                	add	a5,a5,a4
20403b84:	439c                	lw	a5,0(a5)
20403b86:	fdc42583          	lw	a1,-36(s0)
20403b8a:	fec42503          	lw	a0,-20(s0)
20403b8e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403b90:	0001                	nop
20403b92:	50b2                	lw	ra,44(sp)
20403b94:	5422                	lw	s0,40(sp)
20403b96:	6145                	addi	sp,sp,48
20403b98:	8082                	ret

20403b9a <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403b9a:	711d                	addi	sp,sp,-96
20403b9c:	ce86                	sw	ra,92(sp)
20403b9e:	cc96                	sw	t0,88(sp)
20403ba0:	ca9a                	sw	t1,84(sp)
20403ba2:	c89e                	sw	t2,80(sp)
20403ba4:	c6a2                	sw	s0,76(sp)
20403ba6:	c4aa                	sw	a0,72(sp)
20403ba8:	c2ae                	sw	a1,68(sp)
20403baa:	c0b2                	sw	a2,64(sp)
20403bac:	de36                	sw	a3,60(sp)
20403bae:	dc3a                	sw	a4,56(sp)
20403bb0:	da3e                	sw	a5,52(sp)
20403bb2:	d842                	sw	a6,48(sp)
20403bb4:	d646                	sw	a7,44(sp)
20403bb6:	d472                	sw	t3,40(sp)
20403bb8:	d276                	sw	t4,36(sp)
20403bba:	d07a                	sw	t5,32(sp)
20403bbc:	ce7e                	sw	t6,28(sp)
20403bbe:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20403bc0:	3391                	jal	20403904 <__metal_myhart_id>
20403bc2:	872a                	mv	a4,a0
20403bc4:	800007b7          	lui	a5,0x80000
20403bc8:	070a                	slli	a4,a4,0x2
20403bca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403bce:	97ba                	add	a5,a5,a4
20403bd0:	439c                	lw	a5,0(a5)
20403bd2:	faf42623          	sw	a5,-84(s0)
20403bd6:	fac42783          	lw	a5,-84(s0)
20403bda:	c785                	beqz	a5,20403c02 <metal_timer_interrupt_vector_handler+0x68>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403bdc:	fac42503          	lw	a0,-84(s0)
20403be0:	315d                	jal	20403886 <__metal_driver_cpu_interrupt_controller>
20403be2:	faa42423          	sw	a0,-88(s0)
20403be6:	fa842783          	lw	a5,-88(s0)
20403bea:	1407a783          	lw	a5,320(a5)
20403bee:	faf42223          	sw	a5,-92(s0)
20403bf2:	fa842783          	lw	a5,-88(s0)
20403bf6:	1387a783          	lw	a5,312(a5)
20403bfa:	fa442583          	lw	a1,-92(s0)
20403bfe:	451d                	li	a0,7
20403c00:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:150
}
20403c02:	0001                	nop
20403c04:	40f6                	lw	ra,92(sp)
20403c06:	42e6                	lw	t0,88(sp)
20403c08:	4356                	lw	t1,84(sp)
20403c0a:	43c6                	lw	t2,80(sp)
20403c0c:	4436                	lw	s0,76(sp)
20403c0e:	4526                	lw	a0,72(sp)
20403c10:	4596                	lw	a1,68(sp)
20403c12:	4606                	lw	a2,64(sp)
20403c14:	56f2                	lw	a3,60(sp)
20403c16:	5762                	lw	a4,56(sp)
20403c18:	57d2                	lw	a5,52(sp)
20403c1a:	5842                	lw	a6,48(sp)
20403c1c:	58b2                	lw	a7,44(sp)
20403c1e:	5e22                	lw	t3,40(sp)
20403c20:	5e92                	lw	t4,36(sp)
20403c22:	5f02                	lw	t5,32(sp)
20403c24:	4ff2                	lw	t6,28(sp)
20403c26:	6125                	addi	sp,sp,96
20403c28:	30200073          	mret

20403c2c <__metal_default_beu_handler>:
__metal_default_beu_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403c2c:	1101                	addi	sp,sp,-32
20403c2e:	ce22                	sw	s0,28(sp)
20403c30:	1000                	addi	s0,sp,32
20403c32:	fea42623          	sw	a0,-20(s0)
20403c36:	feb42423          	sw	a1,-24(s0)
20403c3a:	0001                	nop
20403c3c:	4472                	lw	s0,28(sp)
20403c3e:	6105                	addi	sp,sp,32
20403c40:	8082                	ret

20403c42 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403c42:	7179                	addi	sp,sp,-48
20403c44:	d606                	sw	ra,44(sp)
20403c46:	d422                	sw	s0,40(sp)
20403c48:	1800                	addi	s0,sp,48
20403c4a:	fca42e23          	sw	a0,-36(s0)
20403c4e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403c52:	394d                	jal	20403904 <__metal_myhart_id>
20403c54:	87aa                	mv	a5,a0
20403c56:	853e                	mv	a0,a5
20403c58:	39b5                	jal	204038d4 <__metal_driver_cpu_get>
20403c5a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403c5e:	fec42503          	lw	a0,-20(s0)
20403c62:	2c0010ef          	jal	ra,20404f22 <__metal_driver_cpu_mtime_get>
20403c66:	fea42023          	sw	a0,-32(s0)
20403c6a:	feb42223          	sw	a1,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403c6e:	fe042703          	lw	a4,-32(s0)
20403c72:	fe442783          	lw	a5,-28(s0)
20403c76:	4529                	li	a0,10
20403c78:	4581                	li	a1,0
20403c7a:	00a70633          	add	a2,a4,a0
20403c7e:	8832                	mv	a6,a2
20403c80:	00e83833          	sltu	a6,a6,a4
20403c84:	00b786b3          	add	a3,a5,a1
20403c88:	00d807b3          	add	a5,a6,a3
20403c8c:	86be                	mv	a3,a5
20403c8e:	8732                	mv	a4,a2
20403c90:	87b6                	mv	a5,a3
20403c92:	85ba                	mv	a1,a4
20403c94:	863e                	mv	a2,a5
20403c96:	fec42503          	lw	a0,-20(s0)
20403c9a:	2ee010ef          	jal	ra,20404f88 <__metal_driver_cpu_mtimecmp_set>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403c9e:	0001                	nop
20403ca0:	50b2                	lw	ra,44(sp)
20403ca2:	5422                	lw	s0,40(sp)
20403ca4:	6145                	addi	sp,sp,48
20403ca6:	8082                	ret
	...

20403d00 <__metal_exception_handler>:
__metal_exception_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403d00:	7119                	addi	sp,sp,-128
20403d02:	de86                	sw	ra,124(sp)
20403d04:	dc96                	sw	t0,120(sp)
20403d06:	da9a                	sw	t1,116(sp)
20403d08:	d89e                	sw	t2,112(sp)
20403d0a:	d6a2                	sw	s0,108(sp)
20403d0c:	d4aa                	sw	a0,104(sp)
20403d0e:	d2ae                	sw	a1,100(sp)
20403d10:	d0b2                	sw	a2,96(sp)
20403d12:	ceb6                	sw	a3,92(sp)
20403d14:	ccba                	sw	a4,88(sp)
20403d16:	cabe                	sw	a5,84(sp)
20403d18:	c8c2                	sw	a6,80(sp)
20403d1a:	c6c6                	sw	a7,76(sp)
20403d1c:	c4f2                	sw	t3,72(sp)
20403d1e:	c2f6                	sw	t4,68(sp)
20403d20:	c0fa                	sw	t5,64(sp)
20403d22:	de7e                	sw	t6,60(sp)
20403d24:	0100                	addi	s0,sp,128
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403d26:	bdfff0ef          	jal	ra,20403904 <__metal_myhart_id>
20403d2a:	872a                	mv	a4,a0
20403d2c:	800007b7          	lui	a5,0x80000
20403d30:	070a                	slli	a4,a4,0x2
20403d32:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403d36:	97ba                	add	a5,a5,a4
20403d38:	439c                	lw	a5,0(a5)
20403d3a:	faf42623          	sw	a5,-84(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403d3e:	342027f3          	csrr	a5,mcause
20403d42:	faf42423          	sw	a5,-88(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403d46:	341027f3          	csrr	a5,mepc
20403d4a:	faf42223          	sw	a5,-92(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403d4e:	343027f3          	csrr	a5,mtval
20403d52:	faf42023          	sw	a5,-96(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403d56:	305027f3          	csrr	a5,mtvec
20403d5a:	f8f42e23          	sw	a5,-100(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403d5e:	fac42783          	lw	a5,-84(s0)
20403d62:	cbfd                	beqz	a5,20403e58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403d64:	fac42503          	lw	a0,-84(s0)
20403d68:	b1fff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20403d6c:	f8a42c23          	sw	a0,-104(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403d70:	fa842783          	lw	a5,-88(s0)
20403d74:	3ff7f793          	andi	a5,a5,1023
20403d78:	f8f42a23          	sw	a5,-108(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403d7c:	fa842783          	lw	a5,-88(s0)
20403d80:	0a07de63          	bgez	a5,20403e3c <__metal_exception_handler+0x13c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403d84:	f9442703          	lw	a4,-108(s0)
20403d88:	08000793          	li	a5,128
20403d8c:	02f71263          	bne	a4,a5,20403db0 <__metal_exception_handler+0xb0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403d90:	f9842783          	lw	a5,-104(s0)
20403d94:	3987a783          	lw	a5,920(a5)
20403d98:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403d9c:	f9842783          	lw	a5,-104(s0)
20403da0:	3907a783          	lw	a5,912(a5)
20403da4:	f8c42583          	lw	a1,-116(s0)
20403da8:	f9442503          	lw	a0,-108(s0)
20403dac:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403dae:	a06d                	j	20403e58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403db0:	f9442703          	lw	a4,-108(s0)
20403db4:	47ad                	li	a5,11
20403db6:	00e7d763          	bge	a5,a4,20403dc4 <__metal_exception_handler+0xc4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403dba:	f9c42783          	lw	a5,-100(s0)
20403dbe:	03f7f793          	andi	a5,a5,63
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403dc2:	ef9d                	bnez	a5,20403e00 <__metal_exception_handler+0x100>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403dc4:	f9842683          	lw	a3,-104(s0)
20403dc8:	f9442703          	lw	a4,-108(s0)
20403dcc:	87ba                	mv	a5,a4
20403dce:	0786                	slli	a5,a5,0x1
20403dd0:	97ba                	add	a5,a5,a4
20403dd2:	078e                	slli	a5,a5,0x3
20403dd4:	97b6                	add	a5,a5,a3
20403dd6:	0987a783          	lw	a5,152(a5)
20403dda:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403dde:	f9842683          	lw	a3,-104(s0)
20403de2:	f9442703          	lw	a4,-108(s0)
20403de6:	87ba                	mv	a5,a4
20403de8:	0786                	slli	a5,a5,0x1
20403dea:	97ba                	add	a5,a5,a4
20403dec:	078e                	slli	a5,a5,0x3
20403dee:	97b6                	add	a5,a5,a3
20403df0:	0907a783          	lw	a5,144(a5)
20403df4:	f8c42583          	lw	a1,-116(s0)
20403df8:	f9442503          	lw	a0,-108(s0)
20403dfc:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403dfe:	a8a9                	j	20403e58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403e00:	f9c42783          	lw	a5,-100(s0)
20403e04:	03f7f713          	andi	a4,a5,63
20403e08:	4789                	li	a5,2
20403e0a:	04f71763          	bne	a4,a5,20403e58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403e0e:	307027f3          	csrr	a5,mtvt
20403e12:	f8f42823          	sw	a5,-112(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403e16:	f9842783          	lw	a5,-104(s0)
20403e1a:	0dc7a783          	lw	a5,220(a5)
20403e1e:	f8f42623          	sw	a5,-116(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403e22:	f9042783          	lw	a5,-112(s0)
20403e26:	439c                	lw	a5,0(a5)
20403e28:	f8f42423          	sw	a5,-120(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403e2c:	f8842783          	lw	a5,-120(s0)
20403e30:	f8c42583          	lw	a1,-116(s0)
20403e34:	f9442503          	lw	a0,-108(s0)
20403e38:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403e3a:	a839                	j	20403e58 <__metal_exception_handler+0x158>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403e3c:	f9842703          	lw	a4,-104(s0)
20403e40:	f9442783          	lw	a5,-108(s0)
20403e44:	0e878793          	addi	a5,a5,232
20403e48:	078a                	slli	a5,a5,0x2
20403e4a:	97ba                	add	a5,a5,a4
20403e4c:	439c                	lw	a5,0(a5)
20403e4e:	f9442583          	lw	a1,-108(s0)
20403e52:	fac42503          	lw	a0,-84(s0)
20403e56:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403e58:	50f6                	lw	ra,124(sp)
20403e5a:	52e6                	lw	t0,120(sp)
20403e5c:	5356                	lw	t1,116(sp)
20403e5e:	53c6                	lw	t2,112(sp)
20403e60:	5436                	lw	s0,108(sp)
20403e62:	5526                	lw	a0,104(sp)
20403e64:	5596                	lw	a1,100(sp)
20403e66:	5606                	lw	a2,96(sp)
20403e68:	46f6                	lw	a3,92(sp)
20403e6a:	4766                	lw	a4,88(sp)
20403e6c:	47d6                	lw	a5,84(sp)
20403e6e:	4846                	lw	a6,80(sp)
20403e70:	48b6                	lw	a7,76(sp)
20403e72:	4e26                	lw	t3,72(sp)
20403e74:	4e96                	lw	t4,68(sp)
20403e76:	4f06                	lw	t5,64(sp)
20403e78:	5ff2                	lw	t6,60(sp)
20403e7a:	6109                	addi	sp,sp,128
20403e7c:	30200073          	mret
	...

20403efa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403efa:	711d                	addi	sp,sp,-96
20403efc:	ce86                	sw	ra,92(sp)
20403efe:	cc96                	sw	t0,88(sp)
20403f00:	ca9a                	sw	t1,84(sp)
20403f02:	c89e                	sw	t2,80(sp)
20403f04:	c6a2                	sw	s0,76(sp)
20403f06:	c4aa                	sw	a0,72(sp)
20403f08:	c2ae                	sw	a1,68(sp)
20403f0a:	c0b2                	sw	a2,64(sp)
20403f0c:	de36                	sw	a3,60(sp)
20403f0e:	dc3a                	sw	a4,56(sp)
20403f10:	da3e                	sw	a5,52(sp)
20403f12:	d842                	sw	a6,48(sp)
20403f14:	d646                	sw	a7,44(sp)
20403f16:	d472                	sw	t3,40(sp)
20403f18:	d276                	sw	t4,36(sp)
20403f1a:	d07a                	sw	t5,32(sp)
20403f1c:	ce7e                	sw	t6,28(sp)
20403f1e:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403f20:	9e5ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20403f24:	872a                	mv	a4,a0
20403f26:	800007b7          	lui	a5,0x80000
20403f2a:	070a                	slli	a4,a4,0x2
20403f2c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403f30:	97ba                	add	a5,a5,a4
20403f32:	439c                	lw	a5,0(a5)
20403f34:	faf42623          	sw	a5,-84(s0)
20403f38:	fac42783          	lw	a5,-84(s0)
20403f3c:	c78d                	beqz	a5,20403f66 <metal_lc0_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403f3e:	fac42503          	lw	a0,-84(s0)
20403f42:	945ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20403f46:	faa42423          	sw	a0,-88(s0)
20403f4a:	fa842783          	lw	a5,-88(s0)
20403f4e:	2187a783          	lw	a5,536(a5)
20403f52:	faf42223          	sw	a5,-92(s0)
20403f56:	fa842783          	lw	a5,-88(s0)
20403f5a:	2107a783          	lw	a5,528(a5)
20403f5e:	fa442583          	lw	a1,-92(s0)
20403f62:	4541                	li	a0,16
20403f64:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403f66:	0001                	nop
20403f68:	40f6                	lw	ra,92(sp)
20403f6a:	42e6                	lw	t0,88(sp)
20403f6c:	4356                	lw	t1,84(sp)
20403f6e:	43c6                	lw	t2,80(sp)
20403f70:	4436                	lw	s0,76(sp)
20403f72:	4526                	lw	a0,72(sp)
20403f74:	4596                	lw	a1,68(sp)
20403f76:	4606                	lw	a2,64(sp)
20403f78:	56f2                	lw	a3,60(sp)
20403f7a:	5762                	lw	a4,56(sp)
20403f7c:	57d2                	lw	a5,52(sp)
20403f7e:	5842                	lw	a6,48(sp)
20403f80:	58b2                	lw	a7,44(sp)
20403f82:	5e22                	lw	t3,40(sp)
20403f84:	5e92                	lw	t4,36(sp)
20403f86:	5f02                	lw	t5,32(sp)
20403f88:	4ff2                	lw	t6,28(sp)
20403f8a:	6125                	addi	sp,sp,96
20403f8c:	30200073          	mret

20403f90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403f90:	711d                	addi	sp,sp,-96
20403f92:	ce86                	sw	ra,92(sp)
20403f94:	cc96                	sw	t0,88(sp)
20403f96:	ca9a                	sw	t1,84(sp)
20403f98:	c89e                	sw	t2,80(sp)
20403f9a:	c6a2                	sw	s0,76(sp)
20403f9c:	c4aa                	sw	a0,72(sp)
20403f9e:	c2ae                	sw	a1,68(sp)
20403fa0:	c0b2                	sw	a2,64(sp)
20403fa2:	de36                	sw	a3,60(sp)
20403fa4:	dc3a                	sw	a4,56(sp)
20403fa6:	da3e                	sw	a5,52(sp)
20403fa8:	d842                	sw	a6,48(sp)
20403faa:	d646                	sw	a7,44(sp)
20403fac:	d472                	sw	t3,40(sp)
20403fae:	d276                	sw	t4,36(sp)
20403fb0:	d07a                	sw	t5,32(sp)
20403fb2:	ce7e                	sw	t6,28(sp)
20403fb4:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403fb6:	94fff0ef          	jal	ra,20403904 <__metal_myhart_id>
20403fba:	872a                	mv	a4,a0
20403fbc:	800007b7          	lui	a5,0x80000
20403fc0:	070a                	slli	a4,a4,0x2
20403fc2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403fc6:	97ba                	add	a5,a5,a4
20403fc8:	439c                	lw	a5,0(a5)
20403fca:	faf42623          	sw	a5,-84(s0)
20403fce:	fac42783          	lw	a5,-84(s0)
20403fd2:	c78d                	beqz	a5,20403ffc <metal_lc1_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403fd4:	fac42503          	lw	a0,-84(s0)
20403fd8:	8afff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20403fdc:	faa42423          	sw	a0,-88(s0)
20403fe0:	fa842783          	lw	a5,-88(s0)
20403fe4:	2307a783          	lw	a5,560(a5)
20403fe8:	faf42223          	sw	a5,-92(s0)
20403fec:	fa842783          	lw	a5,-88(s0)
20403ff0:	2287a783          	lw	a5,552(a5)
20403ff4:	fa442583          	lw	a1,-92(s0)
20403ff8:	4545                	li	a0,17
20403ffa:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:221
}
20403ffc:	0001                	nop
20403ffe:	40f6                	lw	ra,92(sp)
20404000:	42e6                	lw	t0,88(sp)
20404002:	4356                	lw	t1,84(sp)
20404004:	43c6                	lw	t2,80(sp)
20404006:	4436                	lw	s0,76(sp)
20404008:	4526                	lw	a0,72(sp)
2040400a:	4596                	lw	a1,68(sp)
2040400c:	4606                	lw	a2,64(sp)
2040400e:	56f2                	lw	a3,60(sp)
20404010:	5762                	lw	a4,56(sp)
20404012:	57d2                	lw	a5,52(sp)
20404014:	5842                	lw	a6,48(sp)
20404016:	58b2                	lw	a7,44(sp)
20404018:	5e22                	lw	t3,40(sp)
2040401a:	5e92                	lw	t4,36(sp)
2040401c:	5f02                	lw	t5,32(sp)
2040401e:	4ff2                	lw	t6,28(sp)
20404020:	6125                	addi	sp,sp,96
20404022:	30200073          	mret

20404026 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20404026:	711d                	addi	sp,sp,-96
20404028:	ce86                	sw	ra,92(sp)
2040402a:	cc96                	sw	t0,88(sp)
2040402c:	ca9a                	sw	t1,84(sp)
2040402e:	c89e                	sw	t2,80(sp)
20404030:	c6a2                	sw	s0,76(sp)
20404032:	c4aa                	sw	a0,72(sp)
20404034:	c2ae                	sw	a1,68(sp)
20404036:	c0b2                	sw	a2,64(sp)
20404038:	de36                	sw	a3,60(sp)
2040403a:	dc3a                	sw	a4,56(sp)
2040403c:	da3e                	sw	a5,52(sp)
2040403e:	d842                	sw	a6,48(sp)
20404040:	d646                	sw	a7,44(sp)
20404042:	d472                	sw	t3,40(sp)
20404044:	d276                	sw	t4,36(sp)
20404046:	d07a                	sw	t5,32(sp)
20404048:	ce7e                	sw	t6,28(sp)
2040404a:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040404c:	8b9ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20404050:	872a                	mv	a4,a0
20404052:	800007b7          	lui	a5,0x80000
20404056:	070a                	slli	a4,a4,0x2
20404058:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040405c:	97ba                	add	a5,a5,a4
2040405e:	439c                	lw	a5,0(a5)
20404060:	faf42623          	sw	a5,-84(s0)
20404064:	fac42783          	lw	a5,-84(s0)
20404068:	c78d                	beqz	a5,20404092 <metal_lc2_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
2040406a:	fac42503          	lw	a0,-84(s0)
2040406e:	819ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404072:	faa42423          	sw	a0,-88(s0)
20404076:	fa842783          	lw	a5,-88(s0)
2040407a:	2487a783          	lw	a5,584(a5)
2040407e:	faf42223          	sw	a5,-92(s0)
20404082:	fa842783          	lw	a5,-88(s0)
20404086:	2407a783          	lw	a5,576(a5)
2040408a:	fa442583          	lw	a1,-92(s0)
2040408e:	4549                	li	a0,18
20404090:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:226
}
20404092:	0001                	nop
20404094:	40f6                	lw	ra,92(sp)
20404096:	42e6                	lw	t0,88(sp)
20404098:	4356                	lw	t1,84(sp)
2040409a:	43c6                	lw	t2,80(sp)
2040409c:	4436                	lw	s0,76(sp)
2040409e:	4526                	lw	a0,72(sp)
204040a0:	4596                	lw	a1,68(sp)
204040a2:	4606                	lw	a2,64(sp)
204040a4:	56f2                	lw	a3,60(sp)
204040a6:	5762                	lw	a4,56(sp)
204040a8:	57d2                	lw	a5,52(sp)
204040aa:	5842                	lw	a6,48(sp)
204040ac:	58b2                	lw	a7,44(sp)
204040ae:	5e22                	lw	t3,40(sp)
204040b0:	5e92                	lw	t4,36(sp)
204040b2:	5f02                	lw	t5,32(sp)
204040b4:	4ff2                	lw	t6,28(sp)
204040b6:	6125                	addi	sp,sp,96
204040b8:	30200073          	mret

204040bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204040bc:	711d                	addi	sp,sp,-96
204040be:	ce86                	sw	ra,92(sp)
204040c0:	cc96                	sw	t0,88(sp)
204040c2:	ca9a                	sw	t1,84(sp)
204040c4:	c89e                	sw	t2,80(sp)
204040c6:	c6a2                	sw	s0,76(sp)
204040c8:	c4aa                	sw	a0,72(sp)
204040ca:	c2ae                	sw	a1,68(sp)
204040cc:	c0b2                	sw	a2,64(sp)
204040ce:	de36                	sw	a3,60(sp)
204040d0:	dc3a                	sw	a4,56(sp)
204040d2:	da3e                	sw	a5,52(sp)
204040d4:	d842                	sw	a6,48(sp)
204040d6:	d646                	sw	a7,44(sp)
204040d8:	d472                	sw	t3,40(sp)
204040da:	d276                	sw	t4,36(sp)
204040dc:	d07a                	sw	t5,32(sp)
204040de:	ce7e                	sw	t6,28(sp)
204040e0:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204040e2:	823ff0ef          	jal	ra,20403904 <__metal_myhart_id>
204040e6:	872a                	mv	a4,a0
204040e8:	800007b7          	lui	a5,0x80000
204040ec:	070a                	slli	a4,a4,0x2
204040ee:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204040f2:	97ba                	add	a5,a5,a4
204040f4:	439c                	lw	a5,0(a5)
204040f6:	faf42623          	sw	a5,-84(s0)
204040fa:	fac42783          	lw	a5,-84(s0)
204040fe:	c78d                	beqz	a5,20404128 <metal_lc3_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20404100:	fac42503          	lw	a0,-84(s0)
20404104:	f82ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404108:	faa42423          	sw	a0,-88(s0)
2040410c:	fa842783          	lw	a5,-88(s0)
20404110:	2607a783          	lw	a5,608(a5)
20404114:	faf42223          	sw	a5,-92(s0)
20404118:	fa842783          	lw	a5,-88(s0)
2040411c:	2587a783          	lw	a5,600(a5)
20404120:	fa442583          	lw	a1,-92(s0)
20404124:	454d                	li	a0,19
20404126:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:231
}
20404128:	0001                	nop
2040412a:	40f6                	lw	ra,92(sp)
2040412c:	42e6                	lw	t0,88(sp)
2040412e:	4356                	lw	t1,84(sp)
20404130:	43c6                	lw	t2,80(sp)
20404132:	4436                	lw	s0,76(sp)
20404134:	4526                	lw	a0,72(sp)
20404136:	4596                	lw	a1,68(sp)
20404138:	4606                	lw	a2,64(sp)
2040413a:	56f2                	lw	a3,60(sp)
2040413c:	5762                	lw	a4,56(sp)
2040413e:	57d2                	lw	a5,52(sp)
20404140:	5842                	lw	a6,48(sp)
20404142:	58b2                	lw	a7,44(sp)
20404144:	5e22                	lw	t3,40(sp)
20404146:	5e92                	lw	t4,36(sp)
20404148:	5f02                	lw	t5,32(sp)
2040414a:	4ff2                	lw	t6,28(sp)
2040414c:	6125                	addi	sp,sp,96
2040414e:	30200073          	mret

20404152 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20404152:	711d                	addi	sp,sp,-96
20404154:	ce86                	sw	ra,92(sp)
20404156:	cc96                	sw	t0,88(sp)
20404158:	ca9a                	sw	t1,84(sp)
2040415a:	c89e                	sw	t2,80(sp)
2040415c:	c6a2                	sw	s0,76(sp)
2040415e:	c4aa                	sw	a0,72(sp)
20404160:	c2ae                	sw	a1,68(sp)
20404162:	c0b2                	sw	a2,64(sp)
20404164:	de36                	sw	a3,60(sp)
20404166:	dc3a                	sw	a4,56(sp)
20404168:	da3e                	sw	a5,52(sp)
2040416a:	d842                	sw	a6,48(sp)
2040416c:	d646                	sw	a7,44(sp)
2040416e:	d472                	sw	t3,40(sp)
20404170:	d276                	sw	t4,36(sp)
20404172:	d07a                	sw	t5,32(sp)
20404174:	ce7e                	sw	t6,28(sp)
20404176:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20404178:	f8cff0ef          	jal	ra,20403904 <__metal_myhart_id>
2040417c:	872a                	mv	a4,a0
2040417e:	800007b7          	lui	a5,0x80000
20404182:	070a                	slli	a4,a4,0x2
20404184:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20404188:	97ba                	add	a5,a5,a4
2040418a:	439c                	lw	a5,0(a5)
2040418c:	faf42623          	sw	a5,-84(s0)
20404190:	fac42783          	lw	a5,-84(s0)
20404194:	c78d                	beqz	a5,204041be <metal_lc4_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20404196:	fac42503          	lw	a0,-84(s0)
2040419a:	eecff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
2040419e:	faa42423          	sw	a0,-88(s0)
204041a2:	fa842783          	lw	a5,-88(s0)
204041a6:	2787a783          	lw	a5,632(a5)
204041aa:	faf42223          	sw	a5,-92(s0)
204041ae:	fa842783          	lw	a5,-88(s0)
204041b2:	2707a783          	lw	a5,624(a5)
204041b6:	fa442583          	lw	a1,-92(s0)
204041ba:	4551                	li	a0,20
204041bc:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:236
}
204041be:	0001                	nop
204041c0:	40f6                	lw	ra,92(sp)
204041c2:	42e6                	lw	t0,88(sp)
204041c4:	4356                	lw	t1,84(sp)
204041c6:	43c6                	lw	t2,80(sp)
204041c8:	4436                	lw	s0,76(sp)
204041ca:	4526                	lw	a0,72(sp)
204041cc:	4596                	lw	a1,68(sp)
204041ce:	4606                	lw	a2,64(sp)
204041d0:	56f2                	lw	a3,60(sp)
204041d2:	5762                	lw	a4,56(sp)
204041d4:	57d2                	lw	a5,52(sp)
204041d6:	5842                	lw	a6,48(sp)
204041d8:	58b2                	lw	a7,44(sp)
204041da:	5e22                	lw	t3,40(sp)
204041dc:	5e92                	lw	t4,36(sp)
204041de:	5f02                	lw	t5,32(sp)
204041e0:	4ff2                	lw	t6,28(sp)
204041e2:	6125                	addi	sp,sp,96
204041e4:	30200073          	mret

204041e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
204041e8:	711d                	addi	sp,sp,-96
204041ea:	ce86                	sw	ra,92(sp)
204041ec:	cc96                	sw	t0,88(sp)
204041ee:	ca9a                	sw	t1,84(sp)
204041f0:	c89e                	sw	t2,80(sp)
204041f2:	c6a2                	sw	s0,76(sp)
204041f4:	c4aa                	sw	a0,72(sp)
204041f6:	c2ae                	sw	a1,68(sp)
204041f8:	c0b2                	sw	a2,64(sp)
204041fa:	de36                	sw	a3,60(sp)
204041fc:	dc3a                	sw	a4,56(sp)
204041fe:	da3e                	sw	a5,52(sp)
20404200:	d842                	sw	a6,48(sp)
20404202:	d646                	sw	a7,44(sp)
20404204:	d472                	sw	t3,40(sp)
20404206:	d276                	sw	t4,36(sp)
20404208:	d07a                	sw	t5,32(sp)
2040420a:	ce7e                	sw	t6,28(sp)
2040420c:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040420e:	ef6ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20404212:	872a                	mv	a4,a0
20404214:	800007b7          	lui	a5,0x80000
20404218:	070a                	slli	a4,a4,0x2
2040421a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040421e:	97ba                	add	a5,a5,a4
20404220:	439c                	lw	a5,0(a5)
20404222:	faf42623          	sw	a5,-84(s0)
20404226:	fac42783          	lw	a5,-84(s0)
2040422a:	c78d                	beqz	a5,20404254 <metal_lc5_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040422c:	fac42503          	lw	a0,-84(s0)
20404230:	e56ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404234:	faa42423          	sw	a0,-88(s0)
20404238:	fa842783          	lw	a5,-88(s0)
2040423c:	2907a783          	lw	a5,656(a5)
20404240:	faf42223          	sw	a5,-92(s0)
20404244:	fa842783          	lw	a5,-88(s0)
20404248:	2887a783          	lw	a5,648(a5)
2040424c:	fa442583          	lw	a1,-92(s0)
20404250:	4555                	li	a0,21
20404252:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:241
}
20404254:	0001                	nop
20404256:	40f6                	lw	ra,92(sp)
20404258:	42e6                	lw	t0,88(sp)
2040425a:	4356                	lw	t1,84(sp)
2040425c:	43c6                	lw	t2,80(sp)
2040425e:	4436                	lw	s0,76(sp)
20404260:	4526                	lw	a0,72(sp)
20404262:	4596                	lw	a1,68(sp)
20404264:	4606                	lw	a2,64(sp)
20404266:	56f2                	lw	a3,60(sp)
20404268:	5762                	lw	a4,56(sp)
2040426a:	57d2                	lw	a5,52(sp)
2040426c:	5842                	lw	a6,48(sp)
2040426e:	58b2                	lw	a7,44(sp)
20404270:	5e22                	lw	t3,40(sp)
20404272:	5e92                	lw	t4,36(sp)
20404274:	5f02                	lw	t5,32(sp)
20404276:	4ff2                	lw	t6,28(sp)
20404278:	6125                	addi	sp,sp,96
2040427a:	30200073          	mret

2040427e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2040427e:	711d                	addi	sp,sp,-96
20404280:	ce86                	sw	ra,92(sp)
20404282:	cc96                	sw	t0,88(sp)
20404284:	ca9a                	sw	t1,84(sp)
20404286:	c89e                	sw	t2,80(sp)
20404288:	c6a2                	sw	s0,76(sp)
2040428a:	c4aa                	sw	a0,72(sp)
2040428c:	c2ae                	sw	a1,68(sp)
2040428e:	c0b2                	sw	a2,64(sp)
20404290:	de36                	sw	a3,60(sp)
20404292:	dc3a                	sw	a4,56(sp)
20404294:	da3e                	sw	a5,52(sp)
20404296:	d842                	sw	a6,48(sp)
20404298:	d646                	sw	a7,44(sp)
2040429a:	d472                	sw	t3,40(sp)
2040429c:	d276                	sw	t4,36(sp)
2040429e:	d07a                	sw	t5,32(sp)
204042a0:	ce7e                	sw	t6,28(sp)
204042a2:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
204042a4:	e60ff0ef          	jal	ra,20403904 <__metal_myhart_id>
204042a8:	872a                	mv	a4,a0
204042aa:	800007b7          	lui	a5,0x80000
204042ae:	070a                	slli	a4,a4,0x2
204042b0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204042b4:	97ba                	add	a5,a5,a4
204042b6:	439c                	lw	a5,0(a5)
204042b8:	faf42623          	sw	a5,-84(s0)
204042bc:	fac42783          	lw	a5,-84(s0)
204042c0:	c78d                	beqz	a5,204042ea <metal_lc6_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204042c2:	fac42503          	lw	a0,-84(s0)
204042c6:	dc0ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204042ca:	faa42423          	sw	a0,-88(s0)
204042ce:	fa842783          	lw	a5,-88(s0)
204042d2:	2a87a783          	lw	a5,680(a5)
204042d6:	faf42223          	sw	a5,-92(s0)
204042da:	fa842783          	lw	a5,-88(s0)
204042de:	2a07a783          	lw	a5,672(a5)
204042e2:	fa442583          	lw	a1,-92(s0)
204042e6:	4559                	li	a0,22
204042e8:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:246
}
204042ea:	0001                	nop
204042ec:	40f6                	lw	ra,92(sp)
204042ee:	42e6                	lw	t0,88(sp)
204042f0:	4356                	lw	t1,84(sp)
204042f2:	43c6                	lw	t2,80(sp)
204042f4:	4436                	lw	s0,76(sp)
204042f6:	4526                	lw	a0,72(sp)
204042f8:	4596                	lw	a1,68(sp)
204042fa:	4606                	lw	a2,64(sp)
204042fc:	56f2                	lw	a3,60(sp)
204042fe:	5762                	lw	a4,56(sp)
20404300:	57d2                	lw	a5,52(sp)
20404302:	5842                	lw	a6,48(sp)
20404304:	58b2                	lw	a7,44(sp)
20404306:	5e22                	lw	t3,40(sp)
20404308:	5e92                	lw	t4,36(sp)
2040430a:	5f02                	lw	t5,32(sp)
2040430c:	4ff2                	lw	t6,28(sp)
2040430e:	6125                	addi	sp,sp,96
20404310:	30200073          	mret

20404314 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404314:	711d                	addi	sp,sp,-96
20404316:	ce86                	sw	ra,92(sp)
20404318:	cc96                	sw	t0,88(sp)
2040431a:	ca9a                	sw	t1,84(sp)
2040431c:	c89e                	sw	t2,80(sp)
2040431e:	c6a2                	sw	s0,76(sp)
20404320:	c4aa                	sw	a0,72(sp)
20404322:	c2ae                	sw	a1,68(sp)
20404324:	c0b2                	sw	a2,64(sp)
20404326:	de36                	sw	a3,60(sp)
20404328:	dc3a                	sw	a4,56(sp)
2040432a:	da3e                	sw	a5,52(sp)
2040432c:	d842                	sw	a6,48(sp)
2040432e:	d646                	sw	a7,44(sp)
20404330:	d472                	sw	t3,40(sp)
20404332:	d276                	sw	t4,36(sp)
20404334:	d07a                	sw	t5,32(sp)
20404336:	ce7e                	sw	t6,28(sp)
20404338:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040433a:	dcaff0ef          	jal	ra,20403904 <__metal_myhart_id>
2040433e:	872a                	mv	a4,a0
20404340:	800007b7          	lui	a5,0x80000
20404344:	070a                	slli	a4,a4,0x2
20404346:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040434a:	97ba                	add	a5,a5,a4
2040434c:	439c                	lw	a5,0(a5)
2040434e:	faf42623          	sw	a5,-84(s0)
20404352:	fac42783          	lw	a5,-84(s0)
20404356:	c78d                	beqz	a5,20404380 <metal_lc7_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20404358:	fac42503          	lw	a0,-84(s0)
2040435c:	d2aff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404360:	faa42423          	sw	a0,-88(s0)
20404364:	fa842783          	lw	a5,-88(s0)
20404368:	2c07a783          	lw	a5,704(a5)
2040436c:	faf42223          	sw	a5,-92(s0)
20404370:	fa842783          	lw	a5,-88(s0)
20404374:	2b87a783          	lw	a5,696(a5)
20404378:	fa442583          	lw	a1,-92(s0)
2040437c:	455d                	li	a0,23
2040437e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404380:	0001                	nop
20404382:	40f6                	lw	ra,92(sp)
20404384:	42e6                	lw	t0,88(sp)
20404386:	4356                	lw	t1,84(sp)
20404388:	43c6                	lw	t2,80(sp)
2040438a:	4436                	lw	s0,76(sp)
2040438c:	4526                	lw	a0,72(sp)
2040438e:	4596                	lw	a1,68(sp)
20404390:	4606                	lw	a2,64(sp)
20404392:	56f2                	lw	a3,60(sp)
20404394:	5762                	lw	a4,56(sp)
20404396:	57d2                	lw	a5,52(sp)
20404398:	5842                	lw	a6,48(sp)
2040439a:	58b2                	lw	a7,44(sp)
2040439c:	5e22                	lw	t3,40(sp)
2040439e:	5e92                	lw	t4,36(sp)
204043a0:	5f02                	lw	t5,32(sp)
204043a2:	4ff2                	lw	t6,28(sp)
204043a4:	6125                	addi	sp,sp,96
204043a6:	30200073          	mret

204043aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204043aa:	711d                	addi	sp,sp,-96
204043ac:	ce86                	sw	ra,92(sp)
204043ae:	cc96                	sw	t0,88(sp)
204043b0:	ca9a                	sw	t1,84(sp)
204043b2:	c89e                	sw	t2,80(sp)
204043b4:	c6a2                	sw	s0,76(sp)
204043b6:	c4aa                	sw	a0,72(sp)
204043b8:	c2ae                	sw	a1,68(sp)
204043ba:	c0b2                	sw	a2,64(sp)
204043bc:	de36                	sw	a3,60(sp)
204043be:	dc3a                	sw	a4,56(sp)
204043c0:	da3e                	sw	a5,52(sp)
204043c2:	d842                	sw	a6,48(sp)
204043c4:	d646                	sw	a7,44(sp)
204043c6:	d472                	sw	t3,40(sp)
204043c8:	d276                	sw	t4,36(sp)
204043ca:	d07a                	sw	t5,32(sp)
204043cc:	ce7e                	sw	t6,28(sp)
204043ce:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204043d0:	d34ff0ef          	jal	ra,20403904 <__metal_myhart_id>
204043d4:	872a                	mv	a4,a0
204043d6:	800007b7          	lui	a5,0x80000
204043da:	070a                	slli	a4,a4,0x2
204043dc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204043e0:	97ba                	add	a5,a5,a4
204043e2:	439c                	lw	a5,0(a5)
204043e4:	faf42623          	sw	a5,-84(s0)
204043e8:	fac42783          	lw	a5,-84(s0)
204043ec:	c78d                	beqz	a5,20404416 <metal_lc8_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204043ee:	fac42503          	lw	a0,-84(s0)
204043f2:	c94ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204043f6:	faa42423          	sw	a0,-88(s0)
204043fa:	fa842783          	lw	a5,-88(s0)
204043fe:	2d87a783          	lw	a5,728(a5)
20404402:	faf42223          	sw	a5,-92(s0)
20404406:	fa842783          	lw	a5,-88(s0)
2040440a:	2d07a783          	lw	a5,720(a5)
2040440e:	fa442583          	lw	a1,-92(s0)
20404412:	4561                	li	a0,24
20404414:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404416:	0001                	nop
20404418:	40f6                	lw	ra,92(sp)
2040441a:	42e6                	lw	t0,88(sp)
2040441c:	4356                	lw	t1,84(sp)
2040441e:	43c6                	lw	t2,80(sp)
20404420:	4436                	lw	s0,76(sp)
20404422:	4526                	lw	a0,72(sp)
20404424:	4596                	lw	a1,68(sp)
20404426:	4606                	lw	a2,64(sp)
20404428:	56f2                	lw	a3,60(sp)
2040442a:	5762                	lw	a4,56(sp)
2040442c:	57d2                	lw	a5,52(sp)
2040442e:	5842                	lw	a6,48(sp)
20404430:	58b2                	lw	a7,44(sp)
20404432:	5e22                	lw	t3,40(sp)
20404434:	5e92                	lw	t4,36(sp)
20404436:	5f02                	lw	t5,32(sp)
20404438:	4ff2                	lw	t6,28(sp)
2040443a:	6125                	addi	sp,sp,96
2040443c:	30200073          	mret

20404440 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20404440:	711d                	addi	sp,sp,-96
20404442:	ce86                	sw	ra,92(sp)
20404444:	cc96                	sw	t0,88(sp)
20404446:	ca9a                	sw	t1,84(sp)
20404448:	c89e                	sw	t2,80(sp)
2040444a:	c6a2                	sw	s0,76(sp)
2040444c:	c4aa                	sw	a0,72(sp)
2040444e:	c2ae                	sw	a1,68(sp)
20404450:	c0b2                	sw	a2,64(sp)
20404452:	de36                	sw	a3,60(sp)
20404454:	dc3a                	sw	a4,56(sp)
20404456:	da3e                	sw	a5,52(sp)
20404458:	d842                	sw	a6,48(sp)
2040445a:	d646                	sw	a7,44(sp)
2040445c:	d472                	sw	t3,40(sp)
2040445e:	d276                	sw	t4,36(sp)
20404460:	d07a                	sw	t5,32(sp)
20404462:	ce7e                	sw	t6,28(sp)
20404464:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20404466:	c9eff0ef          	jal	ra,20403904 <__metal_myhart_id>
2040446a:	872a                	mv	a4,a0
2040446c:	800007b7          	lui	a5,0x80000
20404470:	070a                	slli	a4,a4,0x2
20404472:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20404476:	97ba                	add	a5,a5,a4
20404478:	439c                	lw	a5,0(a5)
2040447a:	faf42623          	sw	a5,-84(s0)
2040447e:	fac42783          	lw	a5,-84(s0)
20404482:	c78d                	beqz	a5,204044ac <metal_lc9_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404484:	fac42503          	lw	a0,-84(s0)
20404488:	bfeff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
2040448c:	faa42423          	sw	a0,-88(s0)
20404490:	fa842783          	lw	a5,-88(s0)
20404494:	2f07a783          	lw	a5,752(a5)
20404498:	faf42223          	sw	a5,-92(s0)
2040449c:	fa842783          	lw	a5,-88(s0)
204044a0:	2e87a783          	lw	a5,744(a5)
204044a4:	fa442583          	lw	a1,-92(s0)
204044a8:	4565                	li	a0,25
204044aa:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:261
}
204044ac:	0001                	nop
204044ae:	40f6                	lw	ra,92(sp)
204044b0:	42e6                	lw	t0,88(sp)
204044b2:	4356                	lw	t1,84(sp)
204044b4:	43c6                	lw	t2,80(sp)
204044b6:	4436                	lw	s0,76(sp)
204044b8:	4526                	lw	a0,72(sp)
204044ba:	4596                	lw	a1,68(sp)
204044bc:	4606                	lw	a2,64(sp)
204044be:	56f2                	lw	a3,60(sp)
204044c0:	5762                	lw	a4,56(sp)
204044c2:	57d2                	lw	a5,52(sp)
204044c4:	5842                	lw	a6,48(sp)
204044c6:	58b2                	lw	a7,44(sp)
204044c8:	5e22                	lw	t3,40(sp)
204044ca:	5e92                	lw	t4,36(sp)
204044cc:	5f02                	lw	t5,32(sp)
204044ce:	4ff2                	lw	t6,28(sp)
204044d0:	6125                	addi	sp,sp,96
204044d2:	30200073          	mret

204044d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204044d6:	711d                	addi	sp,sp,-96
204044d8:	ce86                	sw	ra,92(sp)
204044da:	cc96                	sw	t0,88(sp)
204044dc:	ca9a                	sw	t1,84(sp)
204044de:	c89e                	sw	t2,80(sp)
204044e0:	c6a2                	sw	s0,76(sp)
204044e2:	c4aa                	sw	a0,72(sp)
204044e4:	c2ae                	sw	a1,68(sp)
204044e6:	c0b2                	sw	a2,64(sp)
204044e8:	de36                	sw	a3,60(sp)
204044ea:	dc3a                	sw	a4,56(sp)
204044ec:	da3e                	sw	a5,52(sp)
204044ee:	d842                	sw	a6,48(sp)
204044f0:	d646                	sw	a7,44(sp)
204044f2:	d472                	sw	t3,40(sp)
204044f4:	d276                	sw	t4,36(sp)
204044f6:	d07a                	sw	t5,32(sp)
204044f8:	ce7e                	sw	t6,28(sp)
204044fa:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204044fc:	c08ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20404500:	872a                	mv	a4,a0
20404502:	800007b7          	lui	a5,0x80000
20404506:	070a                	slli	a4,a4,0x2
20404508:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040450c:	97ba                	add	a5,a5,a4
2040450e:	439c                	lw	a5,0(a5)
20404510:	faf42623          	sw	a5,-84(s0)
20404514:	fac42783          	lw	a5,-84(s0)
20404518:	c78d                	beqz	a5,20404542 <metal_lc10_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040451a:	fac42503          	lw	a0,-84(s0)
2040451e:	b68ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404522:	faa42423          	sw	a0,-88(s0)
20404526:	fa842783          	lw	a5,-88(s0)
2040452a:	3087a783          	lw	a5,776(a5)
2040452e:	faf42223          	sw	a5,-92(s0)
20404532:	fa842783          	lw	a5,-88(s0)
20404536:	3007a783          	lw	a5,768(a5)
2040453a:	fa442583          	lw	a1,-92(s0)
2040453e:	4569                	li	a0,26
20404540:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:267
}
20404542:	0001                	nop
20404544:	40f6                	lw	ra,92(sp)
20404546:	42e6                	lw	t0,88(sp)
20404548:	4356                	lw	t1,84(sp)
2040454a:	43c6                	lw	t2,80(sp)
2040454c:	4436                	lw	s0,76(sp)
2040454e:	4526                	lw	a0,72(sp)
20404550:	4596                	lw	a1,68(sp)
20404552:	4606                	lw	a2,64(sp)
20404554:	56f2                	lw	a3,60(sp)
20404556:	5762                	lw	a4,56(sp)
20404558:	57d2                	lw	a5,52(sp)
2040455a:	5842                	lw	a6,48(sp)
2040455c:	58b2                	lw	a7,44(sp)
2040455e:	5e22                	lw	t3,40(sp)
20404560:	5e92                	lw	t4,36(sp)
20404562:	5f02                	lw	t5,32(sp)
20404564:	4ff2                	lw	t6,28(sp)
20404566:	6125                	addi	sp,sp,96
20404568:	30200073          	mret

2040456c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2040456c:	711d                	addi	sp,sp,-96
2040456e:	ce86                	sw	ra,92(sp)
20404570:	cc96                	sw	t0,88(sp)
20404572:	ca9a                	sw	t1,84(sp)
20404574:	c89e                	sw	t2,80(sp)
20404576:	c6a2                	sw	s0,76(sp)
20404578:	c4aa                	sw	a0,72(sp)
2040457a:	c2ae                	sw	a1,68(sp)
2040457c:	c0b2                	sw	a2,64(sp)
2040457e:	de36                	sw	a3,60(sp)
20404580:	dc3a                	sw	a4,56(sp)
20404582:	da3e                	sw	a5,52(sp)
20404584:	d842                	sw	a6,48(sp)
20404586:	d646                	sw	a7,44(sp)
20404588:	d472                	sw	t3,40(sp)
2040458a:	d276                	sw	t4,36(sp)
2040458c:	d07a                	sw	t5,32(sp)
2040458e:	ce7e                	sw	t6,28(sp)
20404590:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404592:	b72ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20404596:	872a                	mv	a4,a0
20404598:	800007b7          	lui	a5,0x80000
2040459c:	070a                	slli	a4,a4,0x2
2040459e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204045a2:	97ba                	add	a5,a5,a4
204045a4:	439c                	lw	a5,0(a5)
204045a6:	faf42623          	sw	a5,-84(s0)
204045aa:	fac42783          	lw	a5,-84(s0)
204045ae:	c78d                	beqz	a5,204045d8 <metal_lc11_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204045b0:	fac42503          	lw	a0,-84(s0)
204045b4:	ad2ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204045b8:	faa42423          	sw	a0,-88(s0)
204045bc:	fa842783          	lw	a5,-88(s0)
204045c0:	3207a783          	lw	a5,800(a5)
204045c4:	faf42223          	sw	a5,-92(s0)
204045c8:	fa842783          	lw	a5,-88(s0)
204045cc:	3187a783          	lw	a5,792(a5)
204045d0:	fa442583          	lw	a1,-92(s0)
204045d4:	456d                	li	a0,27
204045d6:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:273
}
204045d8:	0001                	nop
204045da:	40f6                	lw	ra,92(sp)
204045dc:	42e6                	lw	t0,88(sp)
204045de:	4356                	lw	t1,84(sp)
204045e0:	43c6                	lw	t2,80(sp)
204045e2:	4436                	lw	s0,76(sp)
204045e4:	4526                	lw	a0,72(sp)
204045e6:	4596                	lw	a1,68(sp)
204045e8:	4606                	lw	a2,64(sp)
204045ea:	56f2                	lw	a3,60(sp)
204045ec:	5762                	lw	a4,56(sp)
204045ee:	57d2                	lw	a5,52(sp)
204045f0:	5842                	lw	a6,48(sp)
204045f2:	58b2                	lw	a7,44(sp)
204045f4:	5e22                	lw	t3,40(sp)
204045f6:	5e92                	lw	t4,36(sp)
204045f8:	5f02                	lw	t5,32(sp)
204045fa:	4ff2                	lw	t6,28(sp)
204045fc:	6125                	addi	sp,sp,96
204045fe:	30200073          	mret

20404602 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404602:	711d                	addi	sp,sp,-96
20404604:	ce86                	sw	ra,92(sp)
20404606:	cc96                	sw	t0,88(sp)
20404608:	ca9a                	sw	t1,84(sp)
2040460a:	c89e                	sw	t2,80(sp)
2040460c:	c6a2                	sw	s0,76(sp)
2040460e:	c4aa                	sw	a0,72(sp)
20404610:	c2ae                	sw	a1,68(sp)
20404612:	c0b2                	sw	a2,64(sp)
20404614:	de36                	sw	a3,60(sp)
20404616:	dc3a                	sw	a4,56(sp)
20404618:	da3e                	sw	a5,52(sp)
2040461a:	d842                	sw	a6,48(sp)
2040461c:	d646                	sw	a7,44(sp)
2040461e:	d472                	sw	t3,40(sp)
20404620:	d276                	sw	t4,36(sp)
20404622:	d07a                	sw	t5,32(sp)
20404624:	ce7e                	sw	t6,28(sp)
20404626:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20404628:	adcff0ef          	jal	ra,20403904 <__metal_myhart_id>
2040462c:	872a                	mv	a4,a0
2040462e:	800007b7          	lui	a5,0x80000
20404632:	070a                	slli	a4,a4,0x2
20404634:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20404638:	97ba                	add	a5,a5,a4
2040463a:	439c                	lw	a5,0(a5)
2040463c:	faf42623          	sw	a5,-84(s0)
20404640:	fac42783          	lw	a5,-84(s0)
20404644:	c78d                	beqz	a5,2040466e <metal_lc12_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20404646:	fac42503          	lw	a0,-84(s0)
2040464a:	a3cff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
2040464e:	faa42423          	sw	a0,-88(s0)
20404652:	fa842783          	lw	a5,-88(s0)
20404656:	3387a783          	lw	a5,824(a5)
2040465a:	faf42223          	sw	a5,-92(s0)
2040465e:	fa842783          	lw	a5,-88(s0)
20404662:	3307a783          	lw	a5,816(a5)
20404666:	fa442583          	lw	a1,-92(s0)
2040466a:	4571                	li	a0,28
2040466c:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:279
}
2040466e:	0001                	nop
20404670:	40f6                	lw	ra,92(sp)
20404672:	42e6                	lw	t0,88(sp)
20404674:	4356                	lw	t1,84(sp)
20404676:	43c6                	lw	t2,80(sp)
20404678:	4436                	lw	s0,76(sp)
2040467a:	4526                	lw	a0,72(sp)
2040467c:	4596                	lw	a1,68(sp)
2040467e:	4606                	lw	a2,64(sp)
20404680:	56f2                	lw	a3,60(sp)
20404682:	5762                	lw	a4,56(sp)
20404684:	57d2                	lw	a5,52(sp)
20404686:	5842                	lw	a6,48(sp)
20404688:	58b2                	lw	a7,44(sp)
2040468a:	5e22                	lw	t3,40(sp)
2040468c:	5e92                	lw	t4,36(sp)
2040468e:	5f02                	lw	t5,32(sp)
20404690:	4ff2                	lw	t6,28(sp)
20404692:	6125                	addi	sp,sp,96
20404694:	30200073          	mret

20404698 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404698:	711d                	addi	sp,sp,-96
2040469a:	ce86                	sw	ra,92(sp)
2040469c:	cc96                	sw	t0,88(sp)
2040469e:	ca9a                	sw	t1,84(sp)
204046a0:	c89e                	sw	t2,80(sp)
204046a2:	c6a2                	sw	s0,76(sp)
204046a4:	c4aa                	sw	a0,72(sp)
204046a6:	c2ae                	sw	a1,68(sp)
204046a8:	c0b2                	sw	a2,64(sp)
204046aa:	de36                	sw	a3,60(sp)
204046ac:	dc3a                	sw	a4,56(sp)
204046ae:	da3e                	sw	a5,52(sp)
204046b0:	d842                	sw	a6,48(sp)
204046b2:	d646                	sw	a7,44(sp)
204046b4:	d472                	sw	t3,40(sp)
204046b6:	d276                	sw	t4,36(sp)
204046b8:	d07a                	sw	t5,32(sp)
204046ba:	ce7e                	sw	t6,28(sp)
204046bc:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
204046be:	a46ff0ef          	jal	ra,20403904 <__metal_myhart_id>
204046c2:	872a                	mv	a4,a0
204046c4:	800007b7          	lui	a5,0x80000
204046c8:	070a                	slli	a4,a4,0x2
204046ca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204046ce:	97ba                	add	a5,a5,a4
204046d0:	439c                	lw	a5,0(a5)
204046d2:	faf42623          	sw	a5,-84(s0)
204046d6:	fac42783          	lw	a5,-84(s0)
204046da:	c78d                	beqz	a5,20404704 <metal_lc13_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
204046dc:	fac42503          	lw	a0,-84(s0)
204046e0:	9a6ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204046e4:	faa42423          	sw	a0,-88(s0)
204046e8:	fa842783          	lw	a5,-88(s0)
204046ec:	3507a783          	lw	a5,848(a5)
204046f0:	faf42223          	sw	a5,-92(s0)
204046f4:	fa842783          	lw	a5,-88(s0)
204046f8:	3487a783          	lw	a5,840(a5)
204046fc:	fa442583          	lw	a1,-92(s0)
20404700:	4575                	li	a0,29
20404702:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404704:	0001                	nop
20404706:	40f6                	lw	ra,92(sp)
20404708:	42e6                	lw	t0,88(sp)
2040470a:	4356                	lw	t1,84(sp)
2040470c:	43c6                	lw	t2,80(sp)
2040470e:	4436                	lw	s0,76(sp)
20404710:	4526                	lw	a0,72(sp)
20404712:	4596                	lw	a1,68(sp)
20404714:	4606                	lw	a2,64(sp)
20404716:	56f2                	lw	a3,60(sp)
20404718:	5762                	lw	a4,56(sp)
2040471a:	57d2                	lw	a5,52(sp)
2040471c:	5842                	lw	a6,48(sp)
2040471e:	58b2                	lw	a7,44(sp)
20404720:	5e22                	lw	t3,40(sp)
20404722:	5e92                	lw	t4,36(sp)
20404724:	5f02                	lw	t5,32(sp)
20404726:	4ff2                	lw	t6,28(sp)
20404728:	6125                	addi	sp,sp,96
2040472a:	30200073          	mret

2040472e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2040472e:	711d                	addi	sp,sp,-96
20404730:	ce86                	sw	ra,92(sp)
20404732:	cc96                	sw	t0,88(sp)
20404734:	ca9a                	sw	t1,84(sp)
20404736:	c89e                	sw	t2,80(sp)
20404738:	c6a2                	sw	s0,76(sp)
2040473a:	c4aa                	sw	a0,72(sp)
2040473c:	c2ae                	sw	a1,68(sp)
2040473e:	c0b2                	sw	a2,64(sp)
20404740:	de36                	sw	a3,60(sp)
20404742:	dc3a                	sw	a4,56(sp)
20404744:	da3e                	sw	a5,52(sp)
20404746:	d842                	sw	a6,48(sp)
20404748:	d646                	sw	a7,44(sp)
2040474a:	d472                	sw	t3,40(sp)
2040474c:	d276                	sw	t4,36(sp)
2040474e:	d07a                	sw	t5,32(sp)
20404750:	ce7e                	sw	t6,28(sp)
20404752:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404754:	9b0ff0ef          	jal	ra,20403904 <__metal_myhart_id>
20404758:	872a                	mv	a4,a0
2040475a:	800007b7          	lui	a5,0x80000
2040475e:	070a                	slli	a4,a4,0x2
20404760:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20404764:	97ba                	add	a5,a5,a4
20404766:	439c                	lw	a5,0(a5)
20404768:	faf42623          	sw	a5,-84(s0)
2040476c:	fac42783          	lw	a5,-84(s0)
20404770:	c78d                	beqz	a5,2040479a <metal_lc14_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404772:	fac42503          	lw	a0,-84(s0)
20404776:	910ff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
2040477a:	faa42423          	sw	a0,-88(s0)
2040477e:	fa842783          	lw	a5,-88(s0)
20404782:	3687a783          	lw	a5,872(a5)
20404786:	faf42223          	sw	a5,-92(s0)
2040478a:	fa842783          	lw	a5,-88(s0)
2040478e:	3607a783          	lw	a5,864(a5)
20404792:	fa442583          	lw	a1,-92(s0)
20404796:	4579                	li	a0,30
20404798:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040479a:	0001                	nop
2040479c:	40f6                	lw	ra,92(sp)
2040479e:	42e6                	lw	t0,88(sp)
204047a0:	4356                	lw	t1,84(sp)
204047a2:	43c6                	lw	t2,80(sp)
204047a4:	4436                	lw	s0,76(sp)
204047a6:	4526                	lw	a0,72(sp)
204047a8:	4596                	lw	a1,68(sp)
204047aa:	4606                	lw	a2,64(sp)
204047ac:	56f2                	lw	a3,60(sp)
204047ae:	5762                	lw	a4,56(sp)
204047b0:	57d2                	lw	a5,52(sp)
204047b2:	5842                	lw	a6,48(sp)
204047b4:	58b2                	lw	a7,44(sp)
204047b6:	5e22                	lw	t3,40(sp)
204047b8:	5e92                	lw	t4,36(sp)
204047ba:	5f02                	lw	t5,32(sp)
204047bc:	4ff2                	lw	t6,28(sp)
204047be:	6125                	addi	sp,sp,96
204047c0:	30200073          	mret

204047c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
204047c4:	711d                	addi	sp,sp,-96
204047c6:	ce86                	sw	ra,92(sp)
204047c8:	cc96                	sw	t0,88(sp)
204047ca:	ca9a                	sw	t1,84(sp)
204047cc:	c89e                	sw	t2,80(sp)
204047ce:	c6a2                	sw	s0,76(sp)
204047d0:	c4aa                	sw	a0,72(sp)
204047d2:	c2ae                	sw	a1,68(sp)
204047d4:	c0b2                	sw	a2,64(sp)
204047d6:	de36                	sw	a3,60(sp)
204047d8:	dc3a                	sw	a4,56(sp)
204047da:	da3e                	sw	a5,52(sp)
204047dc:	d842                	sw	a6,48(sp)
204047de:	d646                	sw	a7,44(sp)
204047e0:	d472                	sw	t3,40(sp)
204047e2:	d276                	sw	t4,36(sp)
204047e4:	d07a                	sw	t5,32(sp)
204047e6:	ce7e                	sw	t6,28(sp)
204047e8:	1080                	addi	s0,sp,96
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
204047ea:	91aff0ef          	jal	ra,20403904 <__metal_myhart_id>
204047ee:	872a                	mv	a4,a0
204047f0:	800007b7          	lui	a5,0x80000
204047f4:	070a                	slli	a4,a4,0x2
204047f6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204047fa:	97ba                	add	a5,a5,a4
204047fc:	439c                	lw	a5,0(a5)
204047fe:	faf42623          	sw	a5,-84(s0)
20404802:	fac42783          	lw	a5,-84(s0)
20404806:	c78d                	beqz	a5,20404830 <metal_lc15_interrupt_vector_handler+0x6c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404808:	fac42503          	lw	a0,-84(s0)
2040480c:	87aff0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404810:	faa42423          	sw	a0,-88(s0)
20404814:	fa842783          	lw	a5,-88(s0)
20404818:	3807a783          	lw	a5,896(a5)
2040481c:	faf42223          	sw	a5,-92(s0)
20404820:	fa842783          	lw	a5,-88(s0)
20404824:	3787a783          	lw	a5,888(a5)
20404828:	fa442583          	lw	a1,-92(s0)
2040482c:	457d                	li	a0,31
2040482e:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404830:	0001                	nop
20404832:	40f6                	lw	ra,92(sp)
20404834:	42e6                	lw	t0,88(sp)
20404836:	4356                	lw	t1,84(sp)
20404838:	43c6                	lw	t2,80(sp)
2040483a:	4436                	lw	s0,76(sp)
2040483c:	4526                	lw	a0,72(sp)
2040483e:	4596                	lw	a1,68(sp)
20404840:	4606                	lw	a2,64(sp)
20404842:	56f2                	lw	a3,60(sp)
20404844:	5762                	lw	a4,56(sp)
20404846:	57d2                	lw	a5,52(sp)
20404848:	5842                	lw	a6,48(sp)
2040484a:	58b2                	lw	a7,44(sp)
2040484c:	5e22                	lw	t3,40(sp)
2040484e:	5e92                	lw	t4,36(sp)
20404850:	5f02                	lw	t5,32(sp)
20404852:	4ff2                	lw	t6,28(sp)
20404854:	6125                	addi	sp,sp,96
20404856:	30200073          	mret

2040485a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2040485a:	1101                	addi	sp,sp,-32
2040485c:	ce22                	sw	s0,28(sp)
2040485e:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404860:	305027f3          	csrr	a5,mtvec
20404864:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404868:	fec42783          	lw	a5,-20(s0)
2040486c:	03f7f793          	andi	a5,a5,63
20404870:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404874:	fec42703          	lw	a4,-20(s0)
20404878:	478d                	li	a5,3
2040487a:	02f70363          	beq	a4,a5,204048a0 <__metal_controller_interrupt_vector_mode+0x46>
2040487e:	fec42703          	lw	a4,-20(s0)
20404882:	478d                	li	a5,3
20404884:	02e7e263          	bltu	a5,a4,204048a8 <__metal_controller_interrupt_vector_mode+0x4e>
20404888:	fec42703          	lw	a4,-20(s0)
2040488c:	4785                	li	a5,1
2040488e:	00f70b63          	beq	a4,a5,204048a4 <__metal_controller_interrupt_vector_mode+0x4a>
20404892:	fec42703          	lw	a4,-20(s0)
20404896:	4789                	li	a5,2
20404898:	00f71863          	bne	a4,a5,204048a8 <__metal_controller_interrupt_vector_mode+0x4e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040489c:	478d                	li	a5,3
2040489e:	a031                	j	204048aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
204048a0:	4791                	li	a5,4
204048a2:	a021                	j	204048aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204048a4:	4785                	li	a5,1
204048a6:	a011                	j	204048aa <__metal_controller_interrupt_vector_mode+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204048a8:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:314
}
204048aa:	853e                	mv	a0,a5
204048ac:	4472                	lw	s0,28(sp)
204048ae:	6105                	addi	sp,sp,32
204048b0:	8082                	ret

204048b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204048b2:	7179                	addi	sp,sp,-48
204048b4:	d622                	sw	s0,44(sp)
204048b6:	1800                	addi	s0,sp,48
204048b8:	fca42e23          	sw	a0,-36(s0)
204048bc:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204048c0:	305027f3          	csrr	a5,mtvec
204048c4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204048c8:	fec42783          	lw	a5,-20(s0)
204048cc:	fc07f793          	andi	a5,a5,-64
204048d0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
204048d4:	fd842783          	lw	a5,-40(s0)
204048d8:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
204048dc:	fdc42703          	lw	a4,-36(s0)
204048e0:	4791                	li	a5,4
204048e2:	04f70563          	beq	a4,a5,2040492c <__metal_controller_interrupt_vector+0x7a>
204048e6:	fdc42703          	lw	a4,-36(s0)
204048ea:	4791                	li	a5,4
204048ec:	06e7e863          	bltu	a5,a4,2040495c <__metal_controller_interrupt_vector+0xaa>
204048f0:	fdc42703          	lw	a4,-36(s0)
204048f4:	478d                	li	a5,3
204048f6:	06e7e363          	bltu	a5,a4,2040495c <__metal_controller_interrupt_vector+0xaa>
204048fa:	fdc42703          	lw	a4,-36(s0)
204048fe:	4789                	li	a5,2
20404900:	00f77b63          	bgeu	a4,a5,20404916 <__metal_controller_interrupt_vector+0x64>
20404904:	fdc42783          	lw	a5,-36(s0)
20404908:	c7a1                	beqz	a5,20404950 <__metal_controller_interrupt_vector+0x9e>
2040490a:	fdc42703          	lw	a4,-36(s0)
2040490e:	4785                	li	a5,1
20404910:	02f70963          	beq	a4,a5,20404942 <__metal_controller_interrupt_vector+0x90>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404914:	a0a1                	j	2040495c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404916:	fe842783          	lw	a5,-24(s0)
2040491a:	30779073          	csrw	mtvt,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040491e:	fec42783          	lw	a5,-20(s0)
20404922:	0027e793          	ori	a5,a5,2
20404926:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2040492a:	a80d                	j	2040495c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040492c:	fe842783          	lw	a5,-24(s0)
20404930:	30779073          	csrw	mtvt,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404934:	fec42783          	lw	a5,-20(s0)
20404938:	0037e793          	ori	a5,a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2040493c:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404940:	a831                	j	2040495c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404942:	fe842783          	lw	a5,-24(s0)
20404946:	0017e793          	ori	a5,a5,1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2040494a:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2040494e:	a039                	j	2040495c <__metal_controller_interrupt_vector+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404950:	fe842783          	lw	a5,-24(s0)
20404954:	9bf1                	andi	a5,a5,-4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404956:	30579073          	csrw	mtvec,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2040495a:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:344
}
2040495c:	0001                	nop
2040495e:	5432                	lw	s0,44(sp)
20404960:	6145                	addi	sp,sp,48
20404962:	8082                	ret

20404964 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404964:	1101                	addi	sp,sp,-32
20404966:	ce22                	sw	s0,28(sp)
20404968:	1000                	addi	s0,sp,32
2040496a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040496e:	fec42703          	lw	a4,-20(s0)
20404972:	47fd                	li	a5,31
20404974:	02e7c663          	blt	a5,a4,204049a0 <__metal_valid_interrupt_id+0x3c>
20404978:	fec42703          	lw	a4,-20(s0)
2040497c:	478d                	li	a5,3
2040497e:	02f74963          	blt	a4,a5,204049b0 <__metal_valid_interrupt_id+0x4c>
20404982:	fec42783          	lw	a5,-20(s0)
20404986:	4705                	li	a4,1
20404988:	00f71733          	sll	a4,a4,a5
2040498c:	77c5                	lui	a5,0xffff1
2040498e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef418>
20404992:	8ff9                	and	a5,a5,a4
20404994:	00f037b3          	snez	a5,a5
20404998:	0ff7f793          	zext.b	a5,a5
2040499c:	eb81                	bnez	a5,204049ac <__metal_valid_interrupt_id+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040499e:	a809                	j	204049b0 <__metal_valid_interrupt_id+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204049a0:	fec42703          	lw	a4,-20(s0)
204049a4:	08000793          	li	a5,128
204049a8:	00f71463          	bne	a4,a5,204049b0 <__metal_valid_interrupt_id+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204049ac:	4785                	li	a5,1
204049ae:	a019                	j	204049b4 <__metal_valid_interrupt_id+0x50>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204049b0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204049b2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:374
}
204049b4:	853e                	mv	a0,a5
204049b6:	4472                	lw	s0,28(sp)
204049b8:	6105                	addi	sp,sp,32
204049ba:	8082                	ret

204049bc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204049bc:	7179                	addi	sp,sp,-48
204049be:	d606                	sw	ra,44(sp)
204049c0:	d422                	sw	s0,40(sp)
204049c2:	1800                	addi	s0,sp,48
204049c4:	fca42e23          	sw	a0,-36(s0)
204049c8:	fcb42c23          	sw	a1,-40(s0)
204049cc:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204049d0:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204049d4:	fdc42783          	lw	a5,-36(s0)
204049d8:	e399                	bnez	a5,204049de <__metal_local_interrupt_enable+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204049da:	57fd                	li	a5,-1
204049dc:	a849                	j	20404a6e <__metal_local_interrupt_enable+0xb2>
204049de:	fd842703          	lw	a4,-40(s0)
204049e2:	47fd                	li	a5,31
204049e4:	08e7e063          	bltu	a5,a4,20404a64 <__metal_local_interrupt_enable+0xa8>
204049e8:	fd842783          	lw	a5,-40(s0)
204049ec:	00279713          	slli	a4,a5,0x2
204049f0:	204017b7          	lui	a5,0x20401
204049f4:	ac878793          	addi	a5,a5,-1336 # 20400ac8 <__metal_driver_vtable_riscv_clint0+0x64>
204049f8:	97ba                	add	a5,a5,a4
204049fa:	439c                	lw	a5,0(a5)
204049fc:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204049fe:	fd442783          	lw	a5,-44(s0)
20404a02:	c781                	beqz	a5,20404a0a <__metal_local_interrupt_enable+0x4e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404a04:	f1bfe0ef          	jal	ra,2040391e <__metal_interrupt_global_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404a08:	a08d                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20404a0a:	f2dfe0ef          	jal	ra,20403936 <__metal_interrupt_global_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20404a0e:	a8b1                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404a10:	fd442783          	lw	a5,-44(s0)
20404a14:	c781                	beqz	a5,20404a1c <__metal_local_interrupt_enable+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404a16:	f39fe0ef          	jal	ra,2040394e <__metal_interrupt_software_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20404a1a:	a881                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20404a1c:	f4bfe0ef          	jal	ra,20403966 <__metal_interrupt_software_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404a20:	a0a9                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404a22:	fd442783          	lw	a5,-44(s0)
20404a26:	c781                	beqz	a5,20404a2e <__metal_local_interrupt_enable+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404a28:	f57fe0ef          	jal	ra,2040397e <__metal_interrupt_timer_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20404a2c:	a83d                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20404a2e:	f6bfe0ef          	jal	ra,20403998 <__metal_interrupt_timer_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404a32:	a825                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404a34:	fd442783          	lw	a5,-44(s0)
20404a38:	c781                	beqz	a5,20404a40 <__metal_local_interrupt_enable+0x84>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20404a3a:	f79fe0ef          	jal	ra,204039b2 <__metal_interrupt_external_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20404a3e:	a035                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404a40:	f8ffe0ef          	jal	ra,204039ce <__metal_interrupt_external_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404a44:	a01d                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404a46:	fd442783          	lw	a5,-44(s0)
20404a4a:	c799                	beqz	a5,20404a58 <__metal_local_interrupt_enable+0x9c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20404a4c:	fd842783          	lw	a5,-40(s0)
20404a50:	853e                	mv	a0,a5
20404a52:	f99fe0ef          	jal	ra,204039ea <__metal_interrupt_local_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404a56:	a811                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404a58:	fd842783          	lw	a5,-40(s0)
20404a5c:	853e                	mv	a0,a5
20404a5e:	fb9fe0ef          	jal	ra,20403a16 <__metal_interrupt_local_disable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404a62:	a021                	j	20404a6a <__metal_local_interrupt_enable+0xae>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404a64:	57fd                	li	a5,-1
20404a66:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20404a6a:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:439
}
20404a6e:	853e                	mv	a0,a5
20404a70:	50b2                	lw	ra,44(sp)
20404a72:	5422                	lw	s0,40(sp)
20404a74:	6145                	addi	sp,sp,48
20404a76:	8082                	ret

20404a78 <__metal_exception_register>:
__metal_exception_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404a78:	7179                	addi	sp,sp,-48
20404a7a:	d622                	sw	s0,44(sp)
20404a7c:	1800                	addi	s0,sp,48
20404a7e:	fca42e23          	sw	a0,-36(s0)
20404a82:	fcb42c23          	sw	a1,-40(s0)
20404a86:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404a8a:	fdc42783          	lw	a5,-36(s0)
20404a8e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404a92:	fd842703          	lw	a4,-40(s0)
20404a96:	47ad                	li	a5,11
20404a98:	02e7c263          	blt	a5,a4,20404abc <__metal_exception_register+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20404a9c:	fd442783          	lw	a5,-44(s0)
20404aa0:	cf91                	beqz	a5,20404abc <__metal_exception_register+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404aa2:	fec42703          	lw	a4,-20(s0)
20404aa6:	fd842783          	lw	a5,-40(s0)
20404aaa:	0e878793          	addi	a5,a5,232
20404aae:	078a                	slli	a5,a5,0x2
20404ab0:	97ba                	add	a5,a5,a4
20404ab2:	fd442703          	lw	a4,-44(s0)
20404ab6:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20404ab8:	4781                	li	a5,0
20404aba:	a011                	j	20404abe <__metal_exception_register+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20404abc:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:450
}
20404abe:	853e                	mv	a0,a5
20404ac0:	5432                	lw	s0,44(sp)
20404ac2:	6145                	addi	sp,sp,48
20404ac4:	8082                	ret

20404ac6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20404ac6:	7179                	addi	sp,sp,-48
20404ac8:	d606                	sw	ra,44(sp)
20404aca:	d422                	sw	s0,40(sp)
20404acc:	1800                	addi	s0,sp,48
20404ace:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404ad2:	fdc42783          	lw	a5,-36(s0)
20404ad6:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20404ada:	fe442783          	lw	a5,-28(s0)
20404ade:	43dc                	lw	a5,4(a5)
20404ae0:	efdd                	bnez	a5,20404b9e <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404ae2:	fe042623          	sw	zero,-20(s0)
20404ae6:	a0b9                	j	20404b34 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20404ae8:	fe442683          	lw	a3,-28(s0)
20404aec:	fec42703          	lw	a4,-20(s0)
20404af0:	87ba                	mv	a5,a4
20404af2:	0786                	slli	a5,a5,0x1
20404af4:	97ba                	add	a5,a5,a4
20404af6:	078e                	slli	a5,a5,0x3
20404af8:	97b6                	add	a5,a5,a3
20404afa:	0807a823          	sw	zero,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20404afe:	fe442683          	lw	a3,-28(s0)
20404b02:	fec42703          	lw	a4,-20(s0)
20404b06:	87ba                	mv	a5,a4
20404b08:	0786                	slli	a5,a5,0x1
20404b0a:	97ba                	add	a5,a5,a4
20404b0c:	078e                	slli	a5,a5,0x3
20404b0e:	97b6                	add	a5,a5,a3
20404b10:	0807aa23          	sw	zero,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404b14:	fe442683          	lw	a3,-28(s0)
20404b18:	fec42703          	lw	a4,-20(s0)
20404b1c:	87ba                	mv	a5,a4
20404b1e:	0786                	slli	a5,a5,0x1
20404b20:	97ba                	add	a5,a5,a4
20404b22:	078e                	slli	a5,a5,0x3
20404b24:	97b6                	add	a5,a5,a3
20404b26:	0807ac23          	sw	zero,152(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404b2a:	fec42783          	lw	a5,-20(s0)
20404b2e:	0785                	addi	a5,a5,1
20404b30:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404b34:	fec42703          	lw	a4,-20(s0)
20404b38:	47fd                	li	a5,31
20404b3a:	fae7d7e3          	bge	a5,a4,20404ae8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20404b3e:	fe042423          	sw	zero,-24(s0)
20404b42:	a01d                	j	20404b68 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404b44:	fe442703          	lw	a4,-28(s0)
20404b48:	fe842783          	lw	a5,-24(s0)
20404b4c:	0e878793          	addi	a5,a5,232
20404b50:	078a                	slli	a5,a5,0x2
20404b52:	97ba                	add	a5,a5,a4
20404b54:	20404737          	lui	a4,0x20404
20404b58:	a4270713          	addi	a4,a4,-1470 # 20403a42 <__metal_default_exception_handler>
20404b5c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20404b5e:	fe842783          	lw	a5,-24(s0)
20404b62:	0785                	addi	a5,a5,1
20404b64:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404b68:	fe842703          	lw	a4,-24(s0)
20404b6c:	47ad                	li	a5,11
20404b6e:	fce7dbe3          	bge	a5,a4,20404b44 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404b72:	305027f3          	csrr	a5,mtvec
20404b76:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20404b7a:	204007b7          	lui	a5,0x20400
20404b7e:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20404b82:	fe042703          	lw	a4,-32(s0)
20404b86:	00f71863          	bne	a4,a5,20404b96 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20404b8a:	204047b7          	lui	a5,0x20404
20404b8e:	d0078593          	addi	a1,a5,-768 # 20403d00 <__metal_exception_handler>
20404b92:	4501                	li	a0,0
20404b94:	3b39                	jal	204048b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404b96:	fe442783          	lw	a5,-28(s0)
20404b9a:	4705                	li	a4,1
20404b9c:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404b9e:	0001                	nop
20404ba0:	50b2                	lw	ra,44(sp)
20404ba2:	5422                	lw	s0,40(sp)
20404ba4:	6145                	addi	sp,sp,48
20404ba6:	8082                	ret

20404ba8 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20404ba8:	7179                	addi	sp,sp,-48
20404baa:	d606                	sw	ra,44(sp)
20404bac:	d422                	sw	s0,40(sp)
20404bae:	1800                	addi	s0,sp,48
20404bb0:	fca42e23          	sw	a0,-36(s0)
20404bb4:	fcb42c23          	sw	a1,-40(s0)
20404bb8:	fcc42a23          	sw	a2,-44(s0)
20404bbc:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404bc0:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404bc4:	fdc42783          	lw	a5,-36(s0)
20404bc8:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20404bcc:	fd842503          	lw	a0,-40(s0)
20404bd0:	3b51                	jal	20404964 <__metal_valid_interrupt_id>
20404bd2:	87aa                	mv	a5,a0
20404bd4:	e399                	bnez	a5,20404bda <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20404bd6:	57d5                	li	a5,-11
20404bd8:	a25d                	j	20404d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404bda:	fd842703          	lw	a4,-40(s0)
20404bde:	08000793          	li	a5,128
20404be2:	00f71763          	bne	a4,a5,20404bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20404be6:	3995                	jal	2040485a <__metal_controller_interrupt_vector_mode>
20404be8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404bea:	c399                	beqz	a5,20404bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404bec:	57cd                	li	a5,-13
20404bee:	aa41                	j	20404d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404bf0:	fd442783          	lw	a5,-44(s0)
20404bf4:	cfb9                	beqz	a5,20404c52 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20404bf6:	fd842703          	lw	a4,-40(s0)
20404bfa:	08000793          	li	a5,128
20404bfe:	00f71f63          	bne	a4,a5,20404c1c <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404c02:	fe842783          	lw	a5,-24(s0)
20404c06:	fd442703          	lw	a4,-44(s0)
20404c0a:	38e7a823          	sw	a4,912(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404c0e:	fe842783          	lw	a5,-24(s0)
20404c12:	fd042703          	lw	a4,-48(s0)
20404c16:	38e7ac23          	sw	a4,920(a5)
20404c1a:	a285                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404c1c:	fe842683          	lw	a3,-24(s0)
20404c20:	fd842703          	lw	a4,-40(s0)
20404c24:	87ba                	mv	a5,a4
20404c26:	0786                	slli	a5,a5,0x1
20404c28:	97ba                	add	a5,a5,a4
20404c2a:	078e                	slli	a5,a5,0x3
20404c2c:	97b6                	add	a5,a5,a3
20404c2e:	fd442703          	lw	a4,-44(s0)
20404c32:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404c36:	fe842683          	lw	a3,-24(s0)
20404c3a:	fd842703          	lw	a4,-40(s0)
20404c3e:	87ba                	mv	a5,a4
20404c40:	0786                	slli	a5,a5,0x1
20404c42:	97ba                	add	a5,a5,a4
20404c44:	078e                	slli	a5,a5,0x3
20404c46:	97b6                	add	a5,a5,a3
20404c48:	fd042703          	lw	a4,-48(s0)
20404c4c:	08e7ac23          	sw	a4,152(a5)
20404c50:	a22d                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404c52:	fd842703          	lw	a4,-40(s0)
20404c56:	08000793          	li	a5,128
20404c5a:	0cf70163          	beq	a4,a5,20404d1c <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
20404c5e:	fd842703          	lw	a4,-40(s0)
20404c62:	08000793          	li	a5,128
20404c66:	10e7c763          	blt	a5,a4,20404d74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20404c6a:	fd842703          	lw	a4,-40(s0)
20404c6e:	47fd                	li	a5,31
20404c70:	10e7c263          	blt	a5,a4,20404d74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20404c74:	fd842703          	lw	a4,-40(s0)
20404c78:	47c1                	li	a5,16
20404c7a:	0cf75063          	bge	a4,a5,20404d3a <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20404c7e:	fd842703          	lw	a4,-40(s0)
20404c82:	47ad                	li	a5,11
20404c84:	0af70b63          	beq	a4,a5,20404d3a <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20404c88:	fd842703          	lw	a4,-40(s0)
20404c8c:	47ad                	li	a5,11
20404c8e:	0ee7c363          	blt	a5,a4,20404d74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20404c92:	fd842703          	lw	a4,-40(s0)
20404c96:	478d                	li	a5,3
20404c98:	00f70863          	beq	a4,a5,20404ca8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
20404c9c:	fd842703          	lw	a4,-40(s0)
20404ca0:	479d                	li	a5,7
20404ca2:	04f70063          	beq	a4,a5,20404ce2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20404ca6:	a0f9                	j	20404d74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404ca8:	fe842683          	lw	a3,-24(s0)
20404cac:	fd842703          	lw	a4,-40(s0)
20404cb0:	87ba                	mv	a5,a4
20404cb2:	0786                	slli	a5,a5,0x1
20404cb4:	97ba                	add	a5,a5,a4
20404cb6:	078e                	slli	a5,a5,0x3
20404cb8:	97b6                	add	a5,a5,a3
20404cba:	20404737          	lui	a4,0x20404
20404cbe:	b3270713          	addi	a4,a4,-1230 # 20403b32 <__metal_default_sw_handler>
20404cc2:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404cc6:	fe842683          	lw	a3,-24(s0)
20404cca:	fd842703          	lw	a4,-40(s0)
20404cce:	87ba                	mv	a5,a4
20404cd0:	0786                	slli	a5,a5,0x1
20404cd2:	97ba                	add	a5,a5,a4
20404cd4:	078e                	slli	a5,a5,0x3
20404cd6:	97b6                	add	a5,a5,a3
20404cd8:	fd042703          	lw	a4,-48(s0)
20404cdc:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404ce0:	a869                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404ce2:	fe842683          	lw	a3,-24(s0)
20404ce6:	fd842703          	lw	a4,-40(s0)
20404cea:	87ba                	mv	a5,a4
20404cec:	0786                	slli	a5,a5,0x1
20404cee:	97ba                	add	a5,a5,a4
20404cf0:	078e                	slli	a5,a5,0x3
20404cf2:	97b6                	add	a5,a5,a3
20404cf4:	20404737          	lui	a4,0x20404
20404cf8:	c4270713          	addi	a4,a4,-958 # 20403c42 <__metal_default_timer_handler>
20404cfc:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404d00:	fe842683          	lw	a3,-24(s0)
20404d04:	fd842703          	lw	a4,-40(s0)
20404d08:	87ba                	mv	a5,a4
20404d0a:	0786                	slli	a5,a5,0x1
20404d0c:	97ba                	add	a5,a5,a4
20404d0e:	078e                	slli	a5,a5,0x3
20404d10:	97b6                	add	a5,a5,a3
20404d12:	fd042703          	lw	a4,-48(s0)
20404d16:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20404d1a:	a085                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20404d1c:	fe842783          	lw	a5,-24(s0)
20404d20:	20404737          	lui	a4,0x20404
20404d24:	c2c70713          	addi	a4,a4,-980 # 20403c2c <__metal_default_beu_handler>
20404d28:	38e7a823          	sw	a4,912(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20404d2c:	fe842783          	lw	a5,-24(s0)
20404d30:	fd042703          	lw	a4,-48(s0)
20404d34:	38e7ac23          	sw	a4,920(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404d38:	a089                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20404d3a:	fe842683          	lw	a3,-24(s0)
20404d3e:	fd842703          	lw	a4,-40(s0)
20404d42:	87ba                	mv	a5,a4
20404d44:	0786                	slli	a5,a5,0x1
20404d46:	97ba                	add	a5,a5,a4
20404d48:	078e                	slli	a5,a5,0x3
20404d4a:	97b6                	add	a5,a5,a3
20404d4c:	20404737          	lui	a4,0x20404
20404d50:	a5a70713          	addi	a4,a4,-1446 # 20403a5a <__metal_default_interrupt_handler>
20404d54:	08e7a823          	sw	a4,144(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404d58:	fe842683          	lw	a3,-24(s0)
20404d5c:	fd842703          	lw	a4,-40(s0)
20404d60:	87ba                	mv	a5,a4
20404d62:	0786                	slli	a5,a5,0x1
20404d64:	97ba                	add	a5,a5,a4
20404d66:	078e                	slli	a5,a5,0x3
20404d68:	97b6                	add	a5,a5,a3
20404d6a:	fd042703          	lw	a4,-48(s0)
20404d6e:	08e7aa23          	sw	a4,148(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404d72:	a021                	j	20404d7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404d74:	57d1                	li	a5,-12
20404d76:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404d7a:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404d7e:	853e                	mv	a0,a5
20404d80:	50b2                	lw	ra,44(sp)
20404d82:	5422                	lw	s0,40(sp)
20404d84:	6145                	addi	sp,sp,48
20404d86:	8082                	ret

20404d88 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404d88:	1101                	addi	sp,sp,-32
20404d8a:	ce06                	sw	ra,28(sp)
20404d8c:	cc22                	sw	s0,24(sp)
20404d8e:	1000                	addi	s0,sp,32
20404d90:	fea42623          	sw	a0,-20(s0)
20404d94:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404d98:	fe842783          	lw	a5,-24(s0)
20404d9c:	4605                	li	a2,1
20404d9e:	85be                	mv	a1,a5
20404da0:	fec42503          	lw	a0,-20(s0)
20404da4:	c19ff0ef          	jal	ra,204049bc <__metal_local_interrupt_enable>
20404da8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404daa:	853e                	mv	a0,a5
20404dac:	40f2                	lw	ra,28(sp)
20404dae:	4462                	lw	s0,24(sp)
20404db0:	6105                	addi	sp,sp,32
20404db2:	8082                	ret

20404db4 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404db4:	1101                	addi	sp,sp,-32
20404db6:	ce06                	sw	ra,28(sp)
20404db8:	cc22                	sw	s0,24(sp)
20404dba:	1000                	addi	s0,sp,32
20404dbc:	fea42623          	sw	a0,-20(s0)
20404dc0:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404dc4:	fe842783          	lw	a5,-24(s0)
20404dc8:	4601                	li	a2,0
20404dca:	85be                	mv	a1,a5
20404dcc:	fec42503          	lw	a0,-20(s0)
20404dd0:	bedff0ef          	jal	ra,204049bc <__metal_local_interrupt_enable>
20404dd4:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404dd6:	853e                	mv	a0,a5
20404dd8:	40f2                	lw	ra,28(sp)
20404dda:	4462                	lw	s0,24(sp)
20404ddc:	6105                	addi	sp,sp,32
20404dde:	8082                	ret

20404de0 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404de0:	1101                	addi	sp,sp,-32
20404de2:	ce06                	sw	ra,28(sp)
20404de4:	cc22                	sw	s0,24(sp)
20404de6:	1000                	addi	s0,sp,32
20404de8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404dec:	a6fff0ef          	jal	ra,2040485a <__metal_controller_interrupt_vector_mode>
20404df0:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404df2:	853e                	mv	a0,a5
20404df4:	40f2                	lw	ra,28(sp)
20404df6:	4462                	lw	s0,24(sp)
20404df8:	6105                	addi	sp,sp,32
20404dfa:	8082                	ret

20404dfc <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404dfc:	1101                	addi	sp,sp,-32
20404dfe:	ce06                	sw	ra,28(sp)
20404e00:	cc22                	sw	s0,24(sp)
20404e02:	1000                	addi	s0,sp,32
20404e04:	fea42623          	sw	a0,-20(s0)
20404e08:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404e0c:	fe842783          	lw	a5,-24(s0)
20404e10:	eb99                	bnez	a5,20404e26 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404e12:	204047b7          	lui	a5,0x20404
20404e16:	d0078593          	addi	a1,a5,-768 # 20403d00 <__metal_exception_handler>
20404e1a:	fe842503          	lw	a0,-24(s0)
20404e1e:	a95ff0ef          	jal	ra,204048b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404e22:	4781                	li	a5,0
20404e24:	a00d                	j	20404e46 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404e26:	fe842703          	lw	a4,-24(s0)
20404e2a:	4785                	li	a5,1
20404e2c:	00f71c63          	bne	a4,a5,20404e44 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404e30:	204077b7          	lui	a5,0x20407
20404e34:	68078593          	addi	a1,a5,1664 # 20407680 <__metal_vector_table>
20404e38:	fe842503          	lw	a0,-24(s0)
20404e3c:	a77ff0ef          	jal	ra,204048b2 <__metal_controller_interrupt_vector>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404e40:	4781                	li	a5,0
20404e42:	a011                	j	20404e46 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404e44:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404e46:	853e                	mv	a0,a5
20404e48:	40f2                	lw	ra,28(sp)
20404e4a:	4462                	lw	s0,24(sp)
20404e4c:	6105                	addi	sp,sp,32
20404e4e:	8082                	ret

20404e50 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404e50:	1101                	addi	sp,sp,-32
20404e52:	ce22                	sw	s0,28(sp)
20404e54:	1000                	addi	s0,sp,32
20404e56:	fea42623          	sw	a0,-20(s0)
20404e5a:	feb42423          	sw	a1,-24(s0)
20404e5e:	fec42223          	sw	a2,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404e62:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404e64:	853e                	mv	a0,a5
20404e66:	4472                	lw	s0,28(sp)
20404e68:	6105                	addi	sp,sp,32
20404e6a:	8082                	ret

20404e6c <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404e6c:	7139                	addi	sp,sp,-64
20404e6e:	de22                	sw	s0,60(sp)
20404e70:	0080                	addi	s0,sp,64
20404e72:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404e76:	4501                	li	a0,0
20404e78:	4581                	li	a1,0
20404e7a:	fea42423          	sw	a0,-24(s0)
20404e7e:	feb42623          	sw	a1,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404e82:	b80025f3          	csrr	a1,mcycleh
20404e86:	feb42223          	sw	a1,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404e8a:	b00025f3          	csrr	a1,mcycle
20404e8e:	feb42023          	sw	a1,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404e92:	b80025f3          	csrr	a1,mcycleh
20404e96:	fcb42e23          	sw	a1,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404e9a:	fe442503          	lw	a0,-28(s0)
20404e9e:	fdc42583          	lw	a1,-36(s0)
20404ea2:	feb510e3          	bne	a0,a1,20404e82 <__metal_driver_cpu_mcycle_get+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404ea6:	fe442583          	lw	a1,-28(s0)
20404eaa:	882e                	mv	a6,a1
20404eac:	4881                	li	a7,0
20404eae:	00081793          	slli	a5,a6,0x0
20404eb2:	4701                	li	a4,0
20404eb4:	fe042583          	lw	a1,-32(s0)
20404eb8:	862e                	mv	a2,a1
20404eba:	4681                	li	a3,0
20404ebc:	00c765b3          	or	a1,a4,a2
20404ec0:	feb42423          	sw	a1,-24(s0)
20404ec4:	8fd5                	or	a5,a5,a3
20404ec6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404eca:	fe842703          	lw	a4,-24(s0)
20404ece:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404ed2:	853a                	mv	a0,a4
20404ed4:	85be                	mv	a1,a5
20404ed6:	5472                	lw	s0,60(sp)
20404ed8:	6121                	addi	sp,sp,64
20404eda:	8082                	ret

20404edc <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404edc:	7179                	addi	sp,sp,-48
20404ede:	d606                	sw	ra,44(sp)
20404ee0:	d422                	sw	s0,40(sp)
20404ee2:	d24a                	sw	s2,36(sp)
20404ee4:	d04e                	sw	s3,32(sp)
20404ee6:	1800                	addi	s0,sp,48
20404ee8:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404eec:	fdc42783          	lw	a5,-36(s0)
20404ef0:	e781                	bnez	a5,20404ef8 <__metal_driver_cpu_timebase_get+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404ef2:	4901                	li	s2,0
20404ef4:	4981                	li	s3,0
20404ef6:	a821                	j	20404f0e <__metal_driver_cpu_timebase_get+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404ef8:	fdc42503          	lw	a0,-36(s0)
20404efc:	961fe0ef          	jal	ra,2040385c <__metal_driver_cpu_timebase>
20404f00:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404f04:	fec42783          	lw	a5,-20(s0)
20404f08:	893e                	mv	s2,a5
20404f0a:	87fd                	srai	a5,a5,0x1f
20404f0c:	89be                	mv	s3,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404f0e:	874a                	mv	a4,s2
20404f10:	87ce                	mv	a5,s3
20404f12:	853a                	mv	a0,a4
20404f14:	85be                	mv	a1,a5
20404f16:	50b2                	lw	ra,44(sp)
20404f18:	5422                	lw	s0,40(sp)
20404f1a:	5912                	lw	s2,36(sp)
20404f1c:	5982                	lw	s3,32(sp)
20404f1e:	6145                	addi	sp,sp,48
20404f20:	8082                	ret

20404f22 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404f22:	7179                	addi	sp,sp,-48
20404f24:	d606                	sw	ra,44(sp)
20404f26:	d422                	sw	s0,40(sp)
20404f28:	1800                	addi	s0,sp,48
20404f2a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404f2e:	4781                	li	a5,0
20404f30:	4801                	li	a6,0
20404f32:	fef42023          	sw	a5,-32(s0)
20404f36:	ff042223          	sw	a6,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404f3a:	fdc42503          	lw	a0,-36(s0)
20404f3e:	949fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404f42:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404f46:	fec42783          	lw	a5,-20(s0)
20404f4a:	c78d                	beqz	a5,20404f74 <__metal_driver_cpu_mtime_get+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404f4c:	fec42783          	lw	a5,-20(s0)
20404f50:	13c7a783          	lw	a5,316(a5)
20404f54:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404f58:	fe842783          	lw	a5,-24(s0)
20404f5c:	cf81                	beqz	a5,20404f74 <__metal_driver_cpu_mtime_get+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404f5e:	fe842783          	lw	a5,-24(s0)
20404f62:	439c                	lw	a5,0(a5)
20404f64:	47f8                	lw	a4,76(a5)
20404f66:	fe040793          	addi	a5,s0,-32
20404f6a:	863e                	mv	a2,a5
20404f6c:	4585                	li	a1,1
20404f6e:	fe842503          	lw	a0,-24(s0)
20404f72:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404f74:	fe042703          	lw	a4,-32(s0)
20404f78:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404f7c:	853a                	mv	a0,a4
20404f7e:	85be                	mv	a1,a5
20404f80:	50b2                	lw	ra,44(sp)
20404f82:	5422                	lw	s0,40(sp)
20404f84:	6145                	addi	sp,sp,48
20404f86:	8082                	ret

20404f88 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404f88:	7179                	addi	sp,sp,-48
20404f8a:	d606                	sw	ra,44(sp)
20404f8c:	d422                	sw	s0,40(sp)
20404f8e:	d226                	sw	s1,36(sp)
20404f90:	1800                	addi	s0,sp,48
20404f92:	fca42e23          	sw	a0,-36(s0)
20404f96:	fcb42823          	sw	a1,-48(s0)
20404f9a:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404f9e:	57fd                	li	a5,-1
20404fa0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404fa4:	fdc42503          	lw	a0,-36(s0)
20404fa8:	8dffe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20404fac:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404fb0:	fe842783          	lw	a5,-24(s0)
20404fb4:	cf8d                	beqz	a5,20404fee <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404fb6:	fe842783          	lw	a5,-24(s0)
20404fba:	13c7a783          	lw	a5,316(a5)
20404fbe:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20404fc2:	fe442783          	lw	a5,-28(s0)
20404fc6:	c785                	beqz	a5,20404fee <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404fc8:	fe442783          	lw	a5,-28(s0)
20404fcc:	439c                	lw	a5,0(a5)
20404fce:	4ba4                	lw	s1,80(a5)
20404fd0:	fdc42503          	lw	a0,-36(s0)
20404fd4:	865fe0ef          	jal	ra,20403838 <__metal_driver_cpu_hartid>
20404fd8:	87aa                	mv	a5,a0
20404fda:	fd042603          	lw	a2,-48(s0)
20404fde:	fd442683          	lw	a3,-44(s0)
20404fe2:	85be                	mv	a1,a5
20404fe4:	fe442503          	lw	a0,-28(s0)
20404fe8:	9482                	jalr	s1
20404fea:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404fee:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:685
}
20404ff2:	853e                	mv	a0,a5
20404ff4:	50b2                	lw	ra,44(sp)
20404ff6:	5422                	lw	s0,40(sp)
20404ff8:	5492                	lw	s1,36(sp)
20404ffa:	6145                	addi	sp,sp,48
20404ffc:	8082                	ret

20404ffe <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404ffe:	1101                	addi	sp,sp,-32
20405000:	ce22                	sw	s0,28(sp)
20405002:	1000                	addi	s0,sp,32
20405004:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20405008:	800007b7          	lui	a5,0x80000
2040500c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20405010:	853e                	mv	a0,a5
20405012:	4472                	lw	s0,28(sp)
20405014:	6105                	addi	sp,sp,32
20405016:	8082                	ret

20405018 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20405018:	1101                	addi	sp,sp,-32
2040501a:	ce22                	sw	s0,28(sp)
2040501c:	1000                	addi	s0,sp,32
2040501e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20405022:	479d                	li	a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:703
}
20405024:	853e                	mv	a0,a5
20405026:	4472                	lw	s0,28(sp)
20405028:	6105                	addi	sp,sp,32
2040502a:	8082                	ret

2040502c <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
2040502c:	1101                	addi	sp,sp,-32
2040502e:	ce22                	sw	s0,28(sp)
20405030:	1000                	addi	s0,sp,32
20405032:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20405036:	800007b7          	lui	a5,0x80000
2040503a:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
2040503e:	853e                	mv	a0,a5
20405040:	4472                	lw	s0,28(sp)
20405042:	6105                	addi	sp,sp,32
20405044:	8082                	ret

20405046 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20405046:	1101                	addi	sp,sp,-32
20405048:	ce22                	sw	s0,28(sp)
2040504a:	1000                	addi	s0,sp,32
2040504c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20405050:	478d                	li	a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:721
}
20405052:	853e                	mv	a0,a5
20405054:	4472                	lw	s0,28(sp)
20405056:	6105                	addi	sp,sp,32
20405058:	8082                	ret

2040505a <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2040505a:	7179                	addi	sp,sp,-48
2040505c:	d606                	sw	ra,44(sp)
2040505e:	d422                	sw	s0,40(sp)
20405060:	1800                	addi	s0,sp,48
20405062:	fca42e23          	sw	a0,-36(s0)
20405066:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2040506a:	57fd                	li	a5,-1
2040506c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405070:	fdc42503          	lw	a0,-36(s0)
20405074:	813fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20405078:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2040507c:	fe842783          	lw	a5,-24(s0)
20405080:	c79d                	beqz	a5,204050ae <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405082:	fe842783          	lw	a5,-24(s0)
20405086:	0dc7a783          	lw	a5,220(a5)
2040508a:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
2040508e:	fe442783          	lw	a5,-28(s0)
20405092:	cf91                	beqz	a5,204050ae <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20405094:	fe442783          	lw	a5,-28(s0)
20405098:	439c                	lw	a5,0(a5)
2040509a:	47f8                	lw	a4,76(a5)
2040509c:	fd840793          	addi	a5,s0,-40
204050a0:	863e                	mv	a2,a5
204050a2:	458d                	li	a1,3
204050a4:	fe442503          	lw	a0,-28(s0)
204050a8:	9702                	jalr	a4
204050aa:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204050ae:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:738
}
204050b2:	853e                	mv	a0,a5
204050b4:	50b2                	lw	ra,44(sp)
204050b6:	5422                	lw	s0,40(sp)
204050b8:	6145                	addi	sp,sp,48
204050ba:	8082                	ret

204050bc <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204050bc:	7179                	addi	sp,sp,-48
204050be:	d606                	sw	ra,44(sp)
204050c0:	d422                	sw	s0,40(sp)
204050c2:	1800                	addi	s0,sp,48
204050c4:	fca42e23          	sw	a0,-36(s0)
204050c8:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204050cc:	57fd                	li	a5,-1
204050ce:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204050d2:	fdc42503          	lw	a0,-36(s0)
204050d6:	fb0fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204050da:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204050de:	fe842783          	lw	a5,-24(s0)
204050e2:	c79d                	beqz	a5,20405110 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204050e4:	fe842783          	lw	a5,-24(s0)
204050e8:	0dc7a783          	lw	a5,220(a5)
204050ec:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
204050f0:	fe442783          	lw	a5,-28(s0)
204050f4:	cf91                	beqz	a5,20405110 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
204050f6:	fe442783          	lw	a5,-28(s0)
204050fa:	439c                	lw	a5,0(a5)
204050fc:	47f8                	lw	a4,76(a5)
204050fe:	fd840793          	addi	a5,s0,-40
20405102:	863e                	mv	a2,a5
20405104:	4589                	li	a1,2
20405106:	fe442503          	lw	a0,-28(s0)
2040510a:	9702                	jalr	a4
2040510c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20405110:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:755
}
20405114:	853e                	mv	a0,a5
20405116:	50b2                	lw	ra,44(sp)
20405118:	5422                	lw	s0,40(sp)
2040511a:	6145                	addi	sp,sp,48
2040511c:	8082                	ret

2040511e <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
2040511e:	7179                	addi	sp,sp,-48
20405120:	d606                	sw	ra,44(sp)
20405122:	d422                	sw	s0,40(sp)
20405124:	1800                	addi	s0,sp,48
20405126:	fca42e23          	sw	a0,-36(s0)
2040512a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
2040512e:	fe042623          	sw	zero,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405132:	fdc42503          	lw	a0,-36(s0)
20405136:	f50fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
2040513a:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
2040513e:	fe842783          	lw	a5,-24(s0)
20405142:	c79d                	beqz	a5,20405170 <__metal_driver_cpu_get_msip+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405144:	fe842783          	lw	a5,-24(s0)
20405148:	0dc7a783          	lw	a5,220(a5)
2040514c:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20405150:	fe442783          	lw	a5,-28(s0)
20405154:	cf91                	beqz	a5,20405170 <__metal_driver_cpu_get_msip+0x52>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20405156:	fe442783          	lw	a5,-28(s0)
2040515a:	439c                	lw	a5,0(a5)
2040515c:	47f8                	lw	a4,76(a5)
2040515e:	fd840793          	addi	a5,s0,-40
20405162:	863e                	mv	a2,a5
20405164:	4591                	li	a1,4
20405166:	fe442503          	lw	a0,-28(s0)
2040516a:	9702                	jalr	a4
2040516c:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20405170:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:772
}
20405174:	853e                	mv	a0,a5
20405176:	50b2                	lw	ra,44(sp)
20405178:	5422                	lw	s0,40(sp)
2040517a:	6145                	addi	sp,sp,48
2040517c:	8082                	ret

2040517e <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
2040517e:	1101                	addi	sp,sp,-32
20405180:	ce06                	sw	ra,28(sp)
20405182:	cc22                	sw	s0,24(sp)
20405184:	1000                	addi	s0,sp,32
20405186:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2040518a:	fec42503          	lw	a0,-20(s0)
2040518e:	ef8fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
20405192:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:777
}
20405194:	853e                	mv	a0,a5
20405196:	40f2                	lw	ra,28(sp)
20405198:	4462                	lw	s0,24(sp)
2040519a:	6105                	addi	sp,sp,32
2040519c:	8082                	ret

2040519e <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
2040519e:	7179                	addi	sp,sp,-48
204051a0:	d606                	sw	ra,44(sp)
204051a2:	d422                	sw	s0,40(sp)
204051a4:	1800                	addi	s0,sp,48
204051a6:	fca42e23          	sw	a0,-36(s0)
204051aa:	fcb42c23          	sw	a1,-40(s0)
204051ae:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204051b2:	fdc42503          	lw	a0,-36(s0)
204051b6:	ed0fe0ef          	jal	ra,20403886 <__metal_driver_cpu_interrupt_controller>
204051ba:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
204051be:	fec42783          	lw	a5,-20(s0)
204051c2:	cb99                	beqz	a5,204051d8 <__metal_driver_cpu_exception_register+0x3a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
204051c4:	fd442603          	lw	a2,-44(s0)
204051c8:	fd842583          	lw	a1,-40(s0)
204051cc:	fec42503          	lw	a0,-20(s0)
204051d0:	8a9ff0ef          	jal	ra,20404a78 <__metal_exception_register>
204051d4:	87aa                	mv	a5,a0
204051d6:	a011                	j	204051da <__metal_driver_cpu_exception_register+0x3c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
204051d8:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:808
}
204051da:	853e                	mv	a0,a5
204051dc:	50b2                	lw	ra,44(sp)
204051de:	5422                	lw	s0,40(sp)
204051e0:	6145                	addi	sp,sp,48
204051e2:	8082                	ret

204051e4 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
204051e4:	1101                	addi	sp,sp,-32
204051e6:	ce22                	sw	s0,28(sp)
204051e8:	1000                	addi	s0,sp,32
204051ea:	fea42623          	sw	a0,-20(s0)
204051ee:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
204051f2:	fe842783          	lw	a5,-24(s0)
204051f6:	0007d783          	lhu	a5,0(a5)
204051fa:	0037f713          	andi	a4,a5,3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
204051fe:	478d                	li	a5,3
20405200:	00f71463          	bne	a4,a5,20405208 <__metal_driver_cpu_get_instruction_length+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20405204:	4791                	li	a5,4
20405206:	a011                	j	2040520a <__metal_driver_cpu_get_instruction_length+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20405208:	4789                	li	a5,2
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040520a:	853e                	mv	a0,a5
2040520c:	4472                	lw	s0,28(sp)
2040520e:	6105                	addi	sp,sp,32
20405210:	8082                	ret

20405212 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405212:	7179                	addi	sp,sp,-48
20405214:	d622                	sw	s0,44(sp)
20405216:	1800                	addi	s0,sp,48
20405218:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2040521c:	341027f3          	csrr	a5,mepc
20405220:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20405224:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:827
}
20405228:	853e                	mv	a0,a5
2040522a:	5432                	lw	s0,44(sp)
2040522c:	6145                	addi	sp,sp,48
2040522e:	8082                	ret

20405230 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20405230:	1101                	addi	sp,sp,-32
20405232:	ce22                	sw	s0,28(sp)
20405234:	1000                	addi	s0,sp,32
20405236:	fea42623          	sw	a0,-20(s0)
2040523a:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
2040523e:	fe842783          	lw	a5,-24(s0)
20405242:	34179073          	csrw	mepc,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20405246:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:832
}
20405248:	853e                	mv	a0,a5
2040524a:	4472                	lw	s0,28(sp)
2040524c:	6105                	addi	sp,sp,32
2040524e:	8082                	ret

20405250 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20405250:	1101                	addi	sp,sp,-32
20405252:	ce06                	sw	ra,28(sp)
20405254:	cc22                	sw	s0,24(sp)
20405256:	1000                	addi	s0,sp,32
20405258:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
2040525c:	fec42503          	lw	a0,-20(s0)
20405260:	e50fe0ef          	jal	ra,204038b0 <__metal_driver_cpu_buserror>
20405264:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_cpu.c:836
}
20405266:	853e                	mv	a0,a5
20405268:	40f2                	lw	ra,28(sp)
2040526a:	4462                	lw	s0,24(sp)
2040526c:	6105                	addi	sp,sp,32
2040526e:	8082                	ret

20405270 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20405270:	1101                	addi	sp,sp,-32
20405272:	ce22                	sw	s0,28(sp)
20405274:	1000                	addi	s0,sp,32
20405276:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040527a:	fec42703          	lw	a4,-20(s0)
2040527e:	800007b7          	lui	a5,0x80000
20405282:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20405286:	00f71563          	bne	a4,a5,20405290 <__metal_driver_sifive_plic0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040528a:	0c0007b7          	lui	a5,0xc000
2040528e:	a011                	j	20405292 <__metal_driver_sifive_plic0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:319
	}
	else {
		return 0;
20405290:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:321
	}
}
20405292:	853e                	mv	a0,a5
20405294:	4472                	lw	s0,28(sp)
20405296:	6105                	addi	sp,sp,32
20405298:	8082                	ret

2040529a <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040529a:	1101                	addi	sp,sp,-32
2040529c:	ce22                	sw	s0,28(sp)
2040529e:	1000                	addi	s0,sp,32
204052a0:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204052a4:	fec42703          	lw	a4,-20(s0)
204052a8:	800007b7          	lui	a5,0x80000
204052ac:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204052b0:	00f71463          	bne	a4,a5,204052b8 <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204052b4:	47ed                	li	a5,27
204052b6:	a011                	j	204052ba <__metal_driver_sifive_plic0_num_interrupts+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:339
	}
	else {
		return 0;
204052b8:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:341
	}
}
204052ba:	853e                	mv	a0,a5
204052bc:	4472                	lw	s0,28(sp)
204052be:	6105                	addi	sp,sp,32
204052c0:	8082                	ret

204052c2 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204052c2:	1101                	addi	sp,sp,-32
204052c4:	ce22                	sw	s0,28(sp)
204052c6:	1000                	addi	s0,sp,32
204052c8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204052cc:	fec42703          	lw	a4,-20(s0)
204052d0:	800007b7          	lui	a5,0x80000
204052d4:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204052d8:	00f71463          	bne	a4,a5,204052e0 <__metal_driver_sifive_plic0_max_priority+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204052dc:	479d                	li	a5,7
204052de:	a011                	j	204052e2 <__metal_driver_sifive_plic0_max_priority+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:349
	}
	else {
		return 0;
204052e0:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:351
	}
}
204052e2:	853e                	mv	a0,a5
204052e4:	4472                	lw	s0,28(sp)
204052e6:	6105                	addi	sp,sp,32
204052e8:	8082                	ret

204052ea <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204052ea:	1101                	addi	sp,sp,-32
204052ec:	ce22                	sw	s0,28(sp)
204052ee:	1000                	addi	s0,sp,32
204052f0:	fea42623          	sw	a0,-20(s0)
204052f4:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:355
	if (idx == 0) {
204052f8:	fe842783          	lw	a5,-24(s0)
204052fc:	e791                	bnez	a5,20405308 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204052fe:	800007b7          	lui	a5,0x80000
20405302:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20405306:	a011                	j	2040530a <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:359
	}
	else {
		return NULL;
20405308:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:361
	}
}
2040530a:	853e                	mv	a0,a5
2040530c:	4472                	lw	s0,28(sp)
2040530e:	6105                	addi	sp,sp,32
20405310:	8082                	ret

20405312 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405312:	1101                	addi	sp,sp,-32
20405314:	ce22                	sw	s0,28(sp)
20405316:	1000                	addi	s0,sp,32
20405318:	fea42623          	sw	a0,-20(s0)
2040531c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:365
	if (idx == 0) {
20405320:	fe842783          	lw	a5,-24(s0)
20405324:	e399                	bnez	a5,2040532a <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:366
		return 11;
20405326:	47ad                	li	a5,11
20405328:	a011                	j	2040532c <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:369
	}
	else {
		return 0;
2040532a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:371
	}
}
2040532c:	853e                	mv	a0,a5
2040532e:	4472                	lw	s0,28(sp)
20405330:	6105                	addi	sp,sp,32
20405332:	8082                	ret

20405334 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20405334:	1101                	addi	sp,sp,-32
20405336:	ce22                	sw	s0,28(sp)
20405338:	1000                	addi	s0,sp,32
2040533a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:375
	if (hartid == 0) {
2040533e:	fec42783          	lw	a5,-20(s0)
20405342:	e399                	bnez	a5,20405348 <__metal_driver_sifive_plic0_context_ids+0x14>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:376
		return 0;
20405344:	4781                	li	a5,0
20405346:	a011                	j	2040534a <__metal_driver_sifive_plic0_context_ids+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:379
	}
	else {
		return -1;
20405348:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:381
	}
}
2040534a:	853e                	mv	a0,a5
2040534c:	4472                	lw	s0,28(sp)
2040534e:	6105                	addi	sp,sp,32
20405350:	8082                	ret

20405352 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20405352:	7179                	addi	sp,sp,-48
20405354:	d606                	sw	ra,44(sp)
20405356:	d422                	sw	s0,40(sp)
20405358:	1800                	addi	s0,sp,48
2040535a:	fca42e23          	sw	a0,-36(s0)
2040535e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405362:	fdc42503          	lw	a0,-36(s0)
20405366:	3729                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
20405368:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
2040536c:	fd842783          	lw	a5,-40(s0)
20405370:	00c79713          	slli	a4,a5,0xc
20405374:	fec42783          	lw	a5,-20(s0)
20405378:	973e                	add	a4,a4,a5
2040537a:	002007b7          	lui	a5,0x200
2040537e:	0791                	addi	a5,a5,4
20405380:	97ba                	add	a5,a5,a4
20405382:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405384:	853e                	mv	a0,a5
20405386:	50b2                	lw	ra,44(sp)
20405388:	5422                	lw	s0,40(sp)
2040538a:	6145                	addi	sp,sp,48
2040538c:	8082                	ret

2040538e <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
2040538e:	7179                	addi	sp,sp,-48
20405390:	d606                	sw	ra,44(sp)
20405392:	d422                	sw	s0,40(sp)
20405394:	1800                	addi	s0,sp,48
20405396:	fca42e23          	sw	a0,-36(s0)
2040539a:	fcb42c23          	sw	a1,-40(s0)
2040539e:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204053a2:	fdc42503          	lw	a0,-36(s0)
204053a6:	35e9                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
204053a8:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204053ac:	fd842783          	lw	a5,-40(s0)
204053b0:	00c79713          	slli	a4,a5,0xc
204053b4:	fec42783          	lw	a5,-20(s0)
204053b8:	973e                	add	a4,a4,a5
204053ba:	002007b7          	lui	a5,0x200
204053be:	0791                	addi	a5,a5,4
204053c0:	97ba                	add	a5,a5,a4
204053c2:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204053c4:	fd442783          	lw	a5,-44(s0)
204053c8:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:35
}
204053ca:	0001                	nop
204053cc:	50b2                	lw	ra,44(sp)
204053ce:	5422                	lw	s0,40(sp)
204053d0:	6145                	addi	sp,sp,48
204053d2:	8082                	ret

204053d4 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204053d4:	7179                	addi	sp,sp,-48
204053d6:	d606                	sw	ra,44(sp)
204053d8:	d422                	sw	s0,40(sp)
204053da:	1800                	addi	s0,sp,48
204053dc:	fca42e23          	sw	a0,-36(s0)
204053e0:	fcb42c23          	sw	a1,-40(s0)
204053e4:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204053e8:	fdc42503          	lw	a0,-36(s0)
204053ec:	3551                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
204053ee:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204053f2:	fd842783          	lw	a5,-40(s0)
204053f6:	00c79713          	slli	a4,a5,0xc
204053fa:	fec42783          	lw	a5,-20(s0)
204053fe:	973e                	add	a4,a4,a5
20405400:	002007b7          	lui	a5,0x200
20405404:	97ba                	add	a5,a5,a4
20405406:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20405408:	fd442783          	lw	a5,-44(s0)
2040540c:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
2040540e:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405410:	853e                	mv	a0,a5
20405412:	50b2                	lw	ra,44(sp)
20405414:	5422                	lw	s0,40(sp)
20405416:	6145                	addi	sp,sp,48
20405418:	8082                	ret

2040541a <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040541a:	7179                	addi	sp,sp,-48
2040541c:	d606                	sw	ra,44(sp)
2040541e:	d422                	sw	s0,40(sp)
20405420:	1800                	addi	s0,sp,48
20405422:	fca42e23          	sw	a0,-36(s0)
20405426:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040542a:	fdc42503          	lw	a0,-36(s0)
2040542e:	3589                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
20405430:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20405434:	fd842783          	lw	a5,-40(s0)
20405438:	00c79713          	slli	a4,a5,0xc
2040543c:	fec42783          	lw	a5,-20(s0)
20405440:	973e                	add	a4,a4,a5
20405442:	002007b7          	lui	a5,0x200
20405446:	97ba                	add	a5,a5,a4
20405448:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2040544a:	853e                	mv	a0,a5
2040544c:	50b2                	lw	ra,44(sp)
2040544e:	5422                	lw	s0,40(sp)
20405450:	6145                	addi	sp,sp,48
20405452:	8082                	ret

20405454 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20405454:	7179                	addi	sp,sp,-48
20405456:	d606                	sw	ra,44(sp)
20405458:	d422                	sw	s0,40(sp)
2040545a:	1800                	addi	s0,sp,48
2040545c:	fca42e23          	sw	a0,-36(s0)
20405460:	fcb42c23          	sw	a1,-40(s0)
20405464:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405468:	fdc42503          	lw	a0,-36(s0)
2040546c:	3511                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
2040546e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20405472:	fdc42503          	lw	a0,-36(s0)
20405476:	35b1                	jal	204052c2 <__metal_driver_sifive_plic0_max_priority>
20405478:	87aa                	mv	a5,a0
2040547a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
2040547e:	fe842783          	lw	a5,-24(s0)
20405482:	c785                	beqz	a5,204054aa <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405484:	fd442703          	lw	a4,-44(s0)
20405488:	fe842783          	lw	a5,-24(s0)
2040548c:	00f77f63          	bgeu	a4,a5,204054aa <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405490:	fd842783          	lw	a5,-40(s0)
20405494:	078a                	slli	a5,a5,0x2
20405496:	873e                	mv	a4,a5
20405498:	fec42783          	lw	a5,-20(s0)
2040549c:	97ba                	add	a5,a5,a4
2040549e:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
204054a0:	fd442783          	lw	a5,-44(s0)
204054a4:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204054a6:	4781                	li	a5,0
204054a8:	a011                	j	204054ac <__metal_driver_riscv_plic0_set_priority+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204054aa:	57fd                	li	a5,-1
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:72
}
204054ac:	853e                	mv	a0,a5
204054ae:	50b2                	lw	ra,44(sp)
204054b0:	5422                	lw	s0,40(sp)
204054b2:	6145                	addi	sp,sp,48
204054b4:	8082                	ret

204054b6 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204054b6:	7179                	addi	sp,sp,-48
204054b8:	d606                	sw	ra,44(sp)
204054ba:	d422                	sw	s0,40(sp)
204054bc:	1800                	addi	s0,sp,48
204054be:	fca42e23          	sw	a0,-36(s0)
204054c2:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204054c6:	fdc42503          	lw	a0,-36(s0)
204054ca:	335d                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
204054cc:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204054d0:	fd842783          	lw	a5,-40(s0)
204054d4:	078a                	slli	a5,a5,0x2
204054d6:	873e                	mv	a4,a5
204054d8:	fec42783          	lw	a5,-20(s0)
204054dc:	97ba                	add	a5,a5,a4
204054de:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204054e0:	853e                	mv	a0,a5
204054e2:	50b2                	lw	ra,44(sp)
204054e4:	5422                	lw	s0,40(sp)
204054e6:	6145                	addi	sp,sp,48
204054e8:	8082                	ret

204054ea <__metal_plic0_enable>:
__metal_plic0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204054ea:	7179                	addi	sp,sp,-48
204054ec:	d606                	sw	ra,44(sp)
204054ee:	d422                	sw	s0,40(sp)
204054f0:	1800                	addi	s0,sp,48
204054f2:	fca42e23          	sw	a0,-36(s0)
204054f6:	fcb42c23          	sw	a1,-40(s0)
204054fa:	fcc42a23          	sw	a2,-44(s0)
204054fe:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405502:	fdc42503          	lw	a0,-36(s0)
20405506:	33ad                	jal	20405270 <__metal_driver_sifive_plic0_control_base>
20405508:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2040550c:	fd842783          	lw	a5,-40(s0)
20405510:	00779713          	slli	a4,a5,0x7
20405514:	fec42783          	lw	a5,-20(s0)
20405518:	97ba                	add	a5,a5,a4
2040551a:	fd442703          	lw	a4,-44(s0)
2040551e:	8715                	srai	a4,a4,0x5
20405520:	070a                	slli	a4,a4,0x2
20405522:	973e                	add	a4,a4,a5
20405524:	6789                	lui	a5,0x2
20405526:	97ba                	add	a5,a5,a4
20405528:	439c                	lw	a5,0(a5)
2040552a:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2040552e:	fd042783          	lw	a5,-48(s0)
20405532:	cf81                	beqz	a5,2040554a <__metal_plic0_enable+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20405534:	fd442783          	lw	a5,-44(s0)
20405538:	8bfd                	andi	a5,a5,31
2040553a:	4705                	li	a4,1
2040553c:	00f717b3          	sll	a5,a4,a5
20405540:	873e                	mv	a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405542:	fe842783          	lw	a5,-24(s0)
20405546:	8fd9                	or	a5,a5,a4
20405548:	a829                	j	20405562 <__metal_plic0_enable+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2040554a:	fd442783          	lw	a5,-44(s0)
2040554e:	8bfd                	andi	a5,a5,31
20405550:	4705                	li	a4,1
20405552:	00f717b3          	sll	a5,a4,a5
20405556:	fff7c793          	not	a5,a5
2040555a:	873e                	mv	a4,a5
2040555c:	fe842783          	lw	a5,-24(s0)
20405560:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20405562:	fd842703          	lw	a4,-40(s0)
20405566:	00771693          	slli	a3,a4,0x7
2040556a:	fec42703          	lw	a4,-20(s0)
2040556e:	9736                	add	a4,a4,a3
20405570:	fd442683          	lw	a3,-44(s0)
20405574:	8695                	srai	a3,a3,0x5
20405576:	068a                	slli	a3,a3,0x2
20405578:	96ba                	add	a3,a3,a4
2040557a:	6709                	lui	a4,0x2
2040557c:	9736                	add	a4,a4,a3
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
2040557e:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405580:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405582:	853e                	mv	a0,a5
20405584:	50b2                	lw	ra,44(sp)
20405586:	5422                	lw	s0,40(sp)
20405588:	6145                	addi	sp,sp,48
2040558a:	8082                	ret

2040558c <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2040558c:	1101                	addi	sp,sp,-32
2040558e:	ce06                	sw	ra,28(sp)
20405590:	cc22                	sw	s0,24(sp)
20405592:	1000                	addi	s0,sp,32
20405594:	fea42623          	sw	a0,-20(s0)
20405598:	feb42423          	sw	a1,-24(s0)
2040559c:	12c00513          	li	a0,300
204055a0:	aa3fd0ef          	jal	ra,20403042 <metal_shutdown>

204055a4 <__metal_plic0_handler>:
__metal_plic0_handler():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204055a4:	7179                	addi	sp,sp,-48
204055a6:	d606                	sw	ra,44(sp)
204055a8:	d422                	sw	s0,40(sp)
204055aa:	1800                	addi	s0,sp,48
204055ac:	fca42e23          	sw	a0,-36(s0)
204055b0:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204055b4:	fd842783          	lw	a5,-40(s0)
204055b8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204055bc:	b48fe0ef          	jal	ra,20403904 <__metal_myhart_id>
204055c0:	87aa                	mv	a5,a0
204055c2:	853e                	mv	a0,a5
204055c4:	3b85                	jal	20405334 <__metal_driver_sifive_plic0_context_ids>
204055c6:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204055ca:	fe842583          	lw	a1,-24(s0)
204055ce:	fec42503          	lw	a0,-20(s0)
204055d2:	3341                	jal	20405352 <__metal_plic0_claim_interrupt>
204055d4:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
204055d8:	fec42503          	lw	a0,-20(s0)
204055dc:	397d                	jal	2040529a <__metal_driver_sifive_plic0_num_interrupts>
204055de:	87aa                	mv	a5,a0
204055e0:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
204055e4:	fe442703          	lw	a4,-28(s0)
204055e8:	fe042783          	lw	a5,-32(s0)
204055ec:	04f77263          	bgeu	a4,a5,20405630 <__metal_plic0_handler+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204055f0:	fec42703          	lw	a4,-20(s0)
204055f4:	fe442783          	lw	a5,-28(s0)
204055f8:	078a                	slli	a5,a5,0x2
204055fa:	97ba                	add	a5,a5,a4
204055fc:	479c                	lw	a5,8(a5)
204055fe:	cb8d                	beqz	a5,20405630 <__metal_plic0_handler+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20405600:	fec42703          	lw	a4,-20(s0)
20405604:	fe442783          	lw	a5,-28(s0)
20405608:	078a                	slli	a5,a5,0x2
2040560a:	97ba                	add	a5,a5,a4
2040560c:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20405610:	fe442603          	lw	a2,-28(s0)
20405614:	fec42683          	lw	a3,-20(s0)
20405618:	fe442703          	lw	a4,-28(s0)
2040561c:	87ba                	mv	a5,a4
2040561e:	0786                	slli	a5,a5,0x1
20405620:	97ba                	add	a5,a5,a4
20405622:	078e                	slli	a5,a5,0x3
20405624:	97b6                	add	a5,a5,a3
20405626:	0887a783          	lw	a5,136(a5)
2040562a:	85be                	mv	a1,a5
2040562c:	8532                	mv	a0,a2
2040562e:	9802                	jalr	a6
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20405630:	fe442603          	lw	a2,-28(s0)
20405634:	fe842583          	lw	a1,-24(s0)
20405638:	fec42503          	lw	a0,-20(s0)
2040563c:	3b89                	jal	2040538e <__metal_plic0_complete_interrupt>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:121
}
2040563e:	0001                	nop
20405640:	50b2                	lw	ra,44(sp)
20405642:	5422                	lw	s0,40(sp)
20405644:	6145                	addi	sp,sp,48
20405646:	8082                	ret

20405648 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20405648:	7139                	addi	sp,sp,-64
2040564a:	de06                	sw	ra,60(sp)
2040564c:	dc22                	sw	s0,56(sp)
2040564e:	0080                	addi	s0,sp,64
20405650:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405654:	fcc42783          	lw	a5,-52(s0)
20405658:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
2040565c:	fe442783          	lw	a5,-28(s0)
20405660:	43dc                	lw	a5,4(a5)
20405662:	12079a63          	bnez	a5,20405796 <__metal_driver_riscv_plic0_init+0x14e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405666:	fe042623          	sw	zero,-20(s0)
2040566a:	aa31                	j	20405786 <__metal_driver_riscv_plic0_init+0x13e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
2040566c:	fcc42503          	lw	a0,-52(s0)
20405670:	c2bff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
20405674:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405678:	fec42583          	lw	a1,-20(s0)
2040567c:	fcc42503          	lw	a0,-52(s0)
20405680:	c6bff0ef          	jal	ra,204052ea <__metal_driver_sifive_plic0_interrupt_parents>
20405684:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20405688:	fec42583          	lw	a1,-20(s0)
2040568c:	fcc42503          	lw	a0,-52(s0)
20405690:	c83ff0ef          	jal	ra,20405312 <__metal_driver_sifive_plic0_interrupt_lines>
20405694:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20405698:	fdc42783          	lw	a5,-36(s0)
2040569c:	439c                	lw	a5,0(a5)
2040569e:	439c                	lw	a5,0(a5)
204056a0:	fdc42503          	lw	a0,-36(s0)
204056a4:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204056a6:	fe042423          	sw	zero,-24(s0)
204056aa:	a885                	j	2040571a <__metal_driver_riscv_plic0_init+0xd2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204056ac:	4681                	li	a3,0
204056ae:	fe842603          	lw	a2,-24(s0)
204056b2:	fec42583          	lw	a1,-20(s0)
204056b6:	fe442503          	lw	a0,-28(s0)
204056ba:	3d05                	jal	204054ea <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204056bc:	fe842703          	lw	a4,-24(s0)
204056c0:	fe042783          	lw	a5,-32(s0)
204056c4:	04f75663          	bge	a4,a5,20405710 <__metal_driver_riscv_plic0_init+0xc8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204056c8:	4601                	li	a2,0
204056ca:	fe842583          	lw	a1,-24(s0)
204056ce:	fcc42503          	lw	a0,-52(s0)
204056d2:	3349                	jal	20405454 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
204056d4:	fe442703          	lw	a4,-28(s0)
204056d8:	fe842783          	lw	a5,-24(s0)
204056dc:	078a                	slli	a5,a5,0x2
204056de:	97ba                	add	a5,a5,a4
204056e0:	0007a423          	sw	zero,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
204056e4:	fe442683          	lw	a3,-28(s0)
204056e8:	fe842703          	lw	a4,-24(s0)
204056ec:	87ba                	mv	a5,a4
204056ee:	0786                	slli	a5,a5,0x1
204056f0:	97ba                	add	a5,a5,a4
204056f2:	078e                	slli	a5,a5,0x3
204056f4:	97b6                	add	a5,a5,a3
204056f6:	0807a223          	sw	zero,132(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
204056fa:	fe442683          	lw	a3,-28(s0)
204056fe:	fe842703          	lw	a4,-24(s0)
20405702:	87ba                	mv	a5,a4
20405704:	0786                	slli	a5,a5,0x1
20405706:	97ba                	add	a5,a5,a4
20405708:	078e                	slli	a5,a5,0x3
2040570a:	97b6                	add	a5,a5,a3
2040570c:	0807a423          	sw	zero,136(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405710:	fe842783          	lw	a5,-24(s0)
20405714:	0785                	addi	a5,a5,1
20405716:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040571a:	fe842703          	lw	a4,-24(s0)
2040571e:	3ff00793          	li	a5,1023
20405722:	f8e7d5e3          	bge	a5,a4,204056ac <__metal_driver_riscv_plic0_init+0x64>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20405726:	4601                	li	a2,0
20405728:	fec42583          	lw	a1,-20(s0)
2040572c:	fcc42503          	lw	a0,-52(s0)
20405730:	ca5ff0ef          	jal	ra,204053d4 <__metal_plic0_set_threshold>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405734:	fdc42783          	lw	a5,-36(s0)
20405738:	439c                	lw	a5,0(a5)
2040573a:	4fdc                	lw	a5,28(a5)
2040573c:	fe442683          	lw	a3,-28(s0)
20405740:	4601                	li	a2,0
20405742:	fd842583          	lw	a1,-40(s0)
20405746:	fdc42503          	lw	a0,-36(s0)
2040574a:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2040574c:	fdc42783          	lw	a5,-36(s0)
20405750:	439c                	lw	a5,0(a5)
20405752:	4fd8                	lw	a4,28(a5)
20405754:	fe442683          	lw	a3,-28(s0)
20405758:	204057b7          	lui	a5,0x20405
2040575c:	5a478613          	addi	a2,a5,1444 # 204055a4 <__metal_plic0_handler>
20405760:	fd842583          	lw	a1,-40(s0)
20405764:	fdc42503          	lw	a0,-36(s0)
20405768:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2040576a:	fdc42783          	lw	a5,-36(s0)
2040576e:	439c                	lw	a5,0(a5)
20405770:	53dc                	lw	a5,36(a5)
20405772:	fd842583          	lw	a1,-40(s0)
20405776:	fdc42503          	lw	a0,-36(s0)
2040577a:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040577c:	fec42783          	lw	a5,-20(s0)
20405780:	0785                	addi	a5,a5,1
20405782:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405786:	fec42783          	lw	a5,-20(s0)
2040578a:	eef051e3          	blez	a5,2040566c <__metal_driver_riscv_plic0_init+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040578e:	fe442783          	lw	a5,-28(s0)
20405792:	4705                	li	a4,1
20405794:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405796:	0001                	nop
20405798:	50f2                	lw	ra,60(sp)
2040579a:	5462                	lw	s0,56(sp)
2040579c:	6121                	addi	sp,sp,64
2040579e:	8082                	ret

204057a0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
204057a0:	7179                	addi	sp,sp,-48
204057a2:	d606                	sw	ra,44(sp)
204057a4:	d422                	sw	s0,40(sp)
204057a6:	1800                	addi	s0,sp,48
204057a8:	fca42e23          	sw	a0,-36(s0)
204057ac:	fcb42c23          	sw	a1,-40(s0)
204057b0:	fcc42a23          	sw	a2,-44(s0)
204057b4:	fcd42823          	sw	a3,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204057b8:	fdc42783          	lw	a5,-36(s0)
204057bc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204057c0:	fdc42503          	lw	a0,-36(s0)
204057c4:	ad7ff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
204057c8:	872a                	mv	a4,a0
204057ca:	fd842783          	lw	a5,-40(s0)
204057ce:	00e7c463          	blt	a5,a4,204057d6 <__metal_driver_riscv_plic0_register+0x36>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
204057d2:	57fd                	li	a5,-1
204057d4:	a051                	j	20405858 <__metal_driver_riscv_plic0_register+0xb8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
204057d6:	fd442783          	lw	a5,-44(s0)
204057da:	cf9d                	beqz	a5,20405818 <__metal_driver_riscv_plic0_register+0x78>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
204057dc:	4609                	li	a2,2
204057de:	fd842583          	lw	a1,-40(s0)
204057e2:	fdc42503          	lw	a0,-36(s0)
204057e6:	c6fff0ef          	jal	ra,20405454 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
204057ea:	fec42703          	lw	a4,-20(s0)
204057ee:	fd842783          	lw	a5,-40(s0)
204057f2:	078a                	slli	a5,a5,0x2
204057f4:	97ba                	add	a5,a5,a4
204057f6:	fd442703          	lw	a4,-44(s0)
204057fa:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
204057fc:	fec42683          	lw	a3,-20(s0)
20405800:	fd842703          	lw	a4,-40(s0)
20405804:	87ba                	mv	a5,a4
20405806:	0786                	slli	a5,a5,0x1
20405808:	97ba                	add	a5,a5,a4
2040580a:	078e                	slli	a5,a5,0x3
2040580c:	97b6                	add	a5,a5,a3
2040580e:	fd042703          	lw	a4,-48(s0)
20405812:	08e7a423          	sw	a4,136(a5)
20405816:	a081                	j	20405856 <__metal_driver_riscv_plic0_register+0xb6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20405818:	4605                	li	a2,1
2040581a:	fd842583          	lw	a1,-40(s0)
2040581e:	fdc42503          	lw	a0,-36(s0)
20405822:	c33ff0ef          	jal	ra,20405454 <__metal_driver_riscv_plic0_set_priority>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20405826:	fec42703          	lw	a4,-20(s0)
2040582a:	fd842783          	lw	a5,-40(s0)
2040582e:	078a                	slli	a5,a5,0x2
20405830:	97ba                	add	a5,a5,a4
20405832:	20405737          	lui	a4,0x20405
20405836:	58c70713          	addi	a4,a4,1420 # 2040558c <__metal_plic0_default_handler>
2040583a:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2040583c:	fec42683          	lw	a3,-20(s0)
20405840:	fd842703          	lw	a4,-40(s0)
20405844:	87ba                	mv	a5,a4
20405846:	0786                	slli	a5,a5,0x1
20405848:	97ba                	add	a5,a5,a4
2040584a:	078e                	slli	a5,a5,0x3
2040584c:	97b6                	add	a5,a5,a3
2040584e:	fd042703          	lw	a4,-48(s0)
20405852:	08e7a223          	sw	a4,132(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20405856:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:185
}
20405858:	853e                	mv	a0,a5
2040585a:	50b2                	lw	ra,44(sp)
2040585c:	5422                	lw	s0,40(sp)
2040585e:	6145                	addi	sp,sp,48
20405860:	8082                	ret

20405862 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405862:	7179                	addi	sp,sp,-48
20405864:	d606                	sw	ra,44(sp)
20405866:	d422                	sw	s0,40(sp)
20405868:	1800                	addi	s0,sp,48
2040586a:	fca42e23          	sw	a0,-36(s0)
2040586e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405872:	fdc42783          	lw	a5,-36(s0)
20405876:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040587a:	fdc42503          	lw	a0,-36(s0)
2040587e:	a1dff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
20405882:	872a                	mv	a4,a0
20405884:	fd842783          	lw	a5,-40(s0)
20405888:	00e7c463          	blt	a5,a4,20405890 <__metal_driver_riscv_plic0_enable+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040588c:	57fd                	li	a5,-1
2040588e:	a829                	j	204058a8 <__metal_driver_riscv_plic0_enable+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405890:	874fe0ef          	jal	ra,20403904 <__metal_myhart_id>
20405894:	87aa                	mv	a5,a0
20405896:	4685                	li	a3,1
20405898:	fd842603          	lw	a2,-40(s0)
2040589c:	85be                	mv	a1,a5
2040589e:	fec42503          	lw	a0,-20(s0)
204058a2:	c49ff0ef          	jal	ra,204054ea <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204058a6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:197
}
204058a8:	853e                	mv	a0,a5
204058aa:	50b2                	lw	ra,44(sp)
204058ac:	5422                	lw	s0,40(sp)
204058ae:	6145                	addi	sp,sp,48
204058b0:	8082                	ret

204058b2 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204058b2:	7179                	addi	sp,sp,-48
204058b4:	d606                	sw	ra,44(sp)
204058b6:	d422                	sw	s0,40(sp)
204058b8:	1800                	addi	s0,sp,48
204058ba:	fca42e23          	sw	a0,-36(s0)
204058be:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204058c2:	fdc42783          	lw	a5,-36(s0)
204058c6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204058ca:	fdc42503          	lw	a0,-36(s0)
204058ce:	9cdff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
204058d2:	872a                	mv	a4,a0
204058d4:	fd842783          	lw	a5,-40(s0)
204058d8:	00e7c463          	blt	a5,a4,204058e0 <__metal_driver_riscv_plic0_disable+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
204058dc:	57fd                	li	a5,-1
204058de:	a829                	j	204058f8 <__metal_driver_riscv_plic0_disable+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
204058e0:	824fe0ef          	jal	ra,20403904 <__metal_myhart_id>
204058e4:	87aa                	mv	a5,a0
204058e6:	4681                	li	a3,0
204058e8:	fd842603          	lw	a2,-40(s0)
204058ec:	85be                	mv	a1,a5
204058ee:	fec42503          	lw	a0,-20(s0)
204058f2:	bf9ff0ef          	jal	ra,204054ea <__metal_plic0_enable>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
204058f6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:208
}
204058f8:	853e                	mv	a0,a5
204058fa:	50b2                	lw	ra,44(sp)
204058fc:	5422                	lw	s0,40(sp)
204058fe:	6145                	addi	sp,sp,48
20405900:	8082                	ret

20405902 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405902:	1101                	addi	sp,sp,-32
20405904:	ce06                	sw	ra,28(sp)
20405906:	cc22                	sw	s0,24(sp)
20405908:	1000                	addi	s0,sp,32
2040590a:	fea42623          	sw	a0,-20(s0)
2040590e:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405912:	ff3fd0ef          	jal	ra,20403904 <__metal_myhart_id>
20405916:	87aa                	mv	a5,a0
20405918:	fe842603          	lw	a2,-24(s0)
2040591c:	85be                	mv	a1,a5
2040591e:	fec42503          	lw	a0,-20(s0)
20405922:	ab3ff0ef          	jal	ra,204053d4 <__metal_plic0_set_threshold>
20405926:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20405928:	853e                	mv	a0,a5
2040592a:	40f2                	lw	ra,28(sp)
2040592c:	4462                	lw	s0,24(sp)
2040592e:	6105                	addi	sp,sp,32
20405930:	8082                	ret

20405932 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405932:	1101                	addi	sp,sp,-32
20405934:	ce06                	sw	ra,28(sp)
20405936:	cc22                	sw	s0,24(sp)
20405938:	1000                	addi	s0,sp,32
2040593a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2040593e:	fc7fd0ef          	jal	ra,20403904 <__metal_myhart_id>
20405942:	87aa                	mv	a5,a0
20405944:	85be                	mv	a1,a5
20405946:	fec42503          	lw	a0,-20(s0)
2040594a:	ad1ff0ef          	jal	ra,2040541a <__metal_plic0_get_threshold>
2040594e:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405950:	853e                	mv	a0,a5
20405952:	40f2                	lw	ra,28(sp)
20405954:	4462                	lw	s0,24(sp)
20405956:	6105                	addi	sp,sp,32
20405958:	8082                	ret

2040595a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2040595a:	7179                	addi	sp,sp,-48
2040595c:	d606                	sw	ra,44(sp)
2040595e:	d422                	sw	s0,40(sp)
20405960:	1800                	addi	s0,sp,48
20405962:	fca42e23          	sw	a0,-36(s0)
20405966:	fcb42c23          	sw	a1,-40(s0)
2040596a:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2040596e:	fe042223          	sw	zero,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405972:	fdc42783          	lw	a5,-36(s0)
20405976:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040597a:	fdc42503          	lw	a0,-36(s0)
2040597e:	91dff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
20405982:	872a                	mv	a4,a0
20405984:	fd442783          	lw	a5,-44(s0)
20405988:	00e7c863          	blt	a5,a4,20405998 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040598c:	57fd                	li	a5,-1
2040598e:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405992:	fe442783          	lw	a5,-28(s0)
20405996:	a899                	j	204059ec <__metal_driver_riscv_plic0_affinity_enable+0x92>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405998:	fe042623          	sw	zero,-20(s0)
2040599c:	a099                	j	204059e2 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2040599e:	fec42783          	lw	a5,-20(s0)
204059a2:	c795                	beqz	a5,204059ce <__metal_driver_riscv_plic0_affinity_enable+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204059a4:	4685                	li	a3,1
204059a6:	fd442603          	lw	a2,-44(s0)
204059aa:	fec42583          	lw	a1,-20(s0)
204059ae:	fe842503          	lw	a0,-24(s0)
204059b2:	b39ff0ef          	jal	ra,204054ea <__metal_plic0_enable>
204059b6:	87aa                	mv	a5,a0
204059b8:	0017f713          	andi	a4,a5,1
204059bc:	fec42783          	lw	a5,-20(s0)
204059c0:	00f71733          	sll	a4,a4,a5
204059c4:	fe442783          	lw	a5,-28(s0)
204059c8:	8fd9                	or	a5,a5,a4
204059ca:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204059ce:	fec42783          	lw	a5,-20(s0)
204059d2:	0785                	addi	a5,a5,1
204059d4:	fef42623          	sw	a5,-20(s0)
204059d8:	fd842783          	lw	a5,-40(s0)
204059dc:	8385                	srli	a5,a5,0x1
204059de:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
204059e2:	fd842783          	lw	a5,-40(s0)
204059e6:	ffc5                	bnez	a5,2040599e <__metal_driver_riscv_plic0_affinity_enable+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
204059e8:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
204059ec:	853e                	mv	a0,a5
204059ee:	50b2                	lw	ra,44(sp)
204059f0:	5422                	lw	s0,40(sp)
204059f2:	6145                	addi	sp,sp,48
204059f4:	8082                	ret

204059f6 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
204059f6:	7179                	addi	sp,sp,-48
204059f8:	d606                	sw	ra,44(sp)
204059fa:	d422                	sw	s0,40(sp)
204059fc:	1800                	addi	s0,sp,48
204059fe:	fca42e23          	sw	a0,-36(s0)
20405a02:	fcb42c23          	sw	a1,-40(s0)
20405a06:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20405a0a:	fe042223          	sw	zero,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405a0e:	fdc42783          	lw	a5,-36(s0)
20405a12:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405a16:	fdc42503          	lw	a0,-36(s0)
20405a1a:	881ff0ef          	jal	ra,2040529a <__metal_driver_sifive_plic0_num_interrupts>
20405a1e:	872a                	mv	a4,a0
20405a20:	fd442783          	lw	a5,-44(s0)
20405a24:	00e7c863          	blt	a5,a4,20405a34 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20405a28:	57fd                	li	a5,-1
20405a2a:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20405a2e:	fe442783          	lw	a5,-28(s0)
20405a32:	a899                	j	20405a88 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405a34:	fe042623          	sw	zero,-20(s0)
20405a38:	a099                	j	20405a7e <__metal_driver_riscv_plic0_affinity_disable+0x88>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20405a3a:	fec42783          	lw	a5,-20(s0)
20405a3e:	c795                	beqz	a5,20405a6a <__metal_driver_riscv_plic0_affinity_disable+0x74>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405a40:	4681                	li	a3,0
20405a42:	fd442603          	lw	a2,-44(s0)
20405a46:	fec42583          	lw	a1,-20(s0)
20405a4a:	fe842503          	lw	a0,-24(s0)
20405a4e:	a9dff0ef          	jal	ra,204054ea <__metal_plic0_enable>
20405a52:	87aa                	mv	a5,a0
20405a54:	0017f713          	andi	a4,a5,1
20405a58:	fec42783          	lw	a5,-20(s0)
20405a5c:	00f71733          	sll	a4,a4,a5
20405a60:	fe442783          	lw	a5,-28(s0)
20405a64:	8fd9                	or	a5,a5,a4
20405a66:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405a6a:	fec42783          	lw	a5,-20(s0)
20405a6e:	0785                	addi	a5,a5,1
20405a70:	fef42623          	sw	a5,-20(s0)
20405a74:	fd842783          	lw	a5,-40(s0)
20405a78:	8385                	srli	a5,a5,0x1
20405a7a:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20405a7e:	fd842783          	lw	a5,-40(s0)
20405a82:	ffc5                	bnez	a5,20405a3a <__metal_driver_riscv_plic0_affinity_disable+0x44>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405a84:	fe442783          	lw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405a88:	853e                	mv	a0,a5
20405a8a:	50b2                	lw	ra,44(sp)
20405a8c:	5422                	lw	s0,40(sp)
20405a8e:	6145                	addi	sp,sp,48
20405a90:	8082                	ret

20405a92 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405a92:	7179                	addi	sp,sp,-48
20405a94:	d606                	sw	ra,44(sp)
20405a96:	d422                	sw	s0,40(sp)
20405a98:	1800                	addi	s0,sp,48
20405a9a:	fca42e23          	sw	a0,-36(s0)
20405a9e:	fcb42c23          	sw	a1,-40(s0)
20405aa2:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20405aa6:	fe042423          	sw	zero,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20405aaa:	fe042623          	sw	zero,-20(s0)
20405aae:	a091                	j	20405af2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405ab0:	fec42783          	lw	a5,-20(s0)
20405ab4:	c78d                	beqz	a5,20405ade <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20405ab6:	fd442603          	lw	a2,-44(s0)
20405aba:	fec42583          	lw	a1,-20(s0)
20405abe:	fdc42503          	lw	a0,-36(s0)
20405ac2:	913ff0ef          	jal	ra,204053d4 <__metal_plic0_set_threshold>
20405ac6:	87aa                	mv	a5,a0
20405ac8:	0017f713          	andi	a4,a5,1
20405acc:	fec42783          	lw	a5,-20(s0)
20405ad0:	00f71733          	sll	a4,a4,a5
20405ad4:	fe842783          	lw	a5,-24(s0)
20405ad8:	8fd9                	or	a5,a5,a4
20405ada:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405ade:	fec42783          	lw	a5,-20(s0)
20405ae2:	0785                	addi	a5,a5,1
20405ae4:	fef42623          	sw	a5,-20(s0)
20405ae8:	fd842783          	lw	a5,-40(s0)
20405aec:	8385                	srli	a5,a5,0x1
20405aee:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405af2:	fd842783          	lw	a5,-40(s0)
20405af6:	ffcd                	bnez	a5,20405ab0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405af8:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:281
}
20405afc:	853e                	mv	a0,a5
20405afe:	50b2                	lw	ra,44(sp)
20405b00:	5422                	lw	s0,40(sp)
20405b02:	6145                	addi	sp,sp,48
20405b04:	8082                	ret

20405b06 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405b06:	1101                	addi	sp,sp,-32
20405b08:	ce06                	sw	ra,28(sp)
20405b0a:	cc22                	sw	s0,24(sp)
20405b0c:	1000                	addi	s0,sp,32
20405b0e:	fea42623          	sw	a0,-20(s0)
20405b12:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20405b16:	fe842583          	lw	a1,-24(s0)
20405b1a:	fec42503          	lw	a0,-20(s0)
20405b1e:	8fdff0ef          	jal	ra,2040541a <__metal_plic0_get_threshold>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405b22:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405b24:	853e                	mv	a0,a5
20405b26:	40f2                	lw	ra,28(sp)
20405b28:	4462                	lw	s0,24(sp)
20405b2a:	6105                	addi	sp,sp,32
20405b2c:	8082                	ret

20405b2e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20405b2e:	1101                	addi	sp,sp,-32
20405b30:	ce22                	sw	s0,28(sp)
20405b32:	1000                	addi	s0,sp,32
20405b34:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405b38:	800007b7          	lui	a5,0x80000
20405b3c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1039
}
20405b40:	853e                	mv	a0,a5
20405b42:	4472                	lw	s0,28(sp)
20405b44:	6105                	addi	sp,sp,32
20405b46:	8082                	ret

20405b48 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405b48:	1101                	addi	sp,sp,-32
20405b4a:	ce22                	sw	s0,28(sp)
20405b4c:	1000                	addi	s0,sp,32
20405b4e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405b52:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1044
}
20405b56:	853e                	mv	a0,a5
20405b58:	4472                	lw	s0,28(sp)
20405b5a:	6105                	addi	sp,sp,32
20405b5c:	8082                	ret

20405b5e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20405b5e:	1101                	addi	sp,sp,-32
20405b60:	ce22                	sw	s0,28(sp)
20405b62:	1000                	addi	s0,sp,32
20405b64:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405b68:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1054
}
20405b6a:	853e                	mv	a0,a5
20405b6c:	4472                	lw	s0,28(sp)
20405b6e:	6105                	addi	sp,sp,32
20405b70:	8082                	ret

20405b72 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405b72:	1141                	addi	sp,sp,-16
20405b74:	c622                	sw	s0,12(sp)
20405b76:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405b78:	204017b7          	lui	a5,0x20401
20405b7c:	5b478793          	addi	a5,a5,1460 # 204015b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405b80:	853e                	mv	a0,a5
20405b82:	4432                	lw	s0,12(sp)
20405b84:	0141                	addi	sp,sp,16
20405b86:	8082                	ret

20405b88 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405b88:	7139                	addi	sp,sp,-64
20405b8a:	de06                	sw	ra,60(sp)
20405b8c:	dc22                	sw	s0,56(sp)
20405b8e:	0080                	addi	s0,sp,64
20405b90:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405b94:	fcc42503          	lw	a0,-52(s0)
20405b98:	3f59                	jal	20405b2e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20405b9a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20405b9e:	fcc42503          	lw	a0,-52(s0)
20405ba2:	3f75                	jal	20405b5e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405ba4:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405ba8:	fcc42503          	lw	a0,-52(s0)
20405bac:	3f71                	jal	20405b48 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20405bae:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405bb2:	37c1                	jal	20405b72 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405bb4:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405bb8:	fe042783          	lw	a5,-32(s0)
20405bbc:	439c                	lw	a5,0(a5)
20405bbe:	fe842583          	lw	a1,-24(s0)
20405bc2:	fe442503          	lw	a0,-28(s0)
20405bc6:	9782                	jalr	a5
20405bc8:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20405bcc:	fdc42703          	lw	a4,-36(s0)
20405bd0:	400007b7          	lui	a5,0x40000
20405bd4:	8ff9                	and	a5,a5,a4
20405bd6:	e399                	bnez	a5,20405bdc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405bd8:	57fd                	li	a5,-1
20405bda:	a025                	j	20405c02 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20405bdc:	fdc42783          	lw	a5,-36(s0)
20405be0:	0007c463          	bltz	a5,20405be8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405be4:	57fd                	li	a5,-1
20405be6:	a831                	j	20405c02 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405be8:	fec42503          	lw	a0,-20(s0)
20405bec:	0e9010ef          	jal	ra,204074d4 <metal_clock_get_rate_hz>
20405bf0:	87aa                	mv	a5,a0
20405bf2:	873e                	mv	a4,a5
20405bf4:	fdc42783          	lw	a5,-36(s0)
20405bf8:	03f7f793          	andi	a5,a5,63
20405bfc:	0785                	addi	a5,a5,1
20405bfe:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405c02:	853e                	mv	a0,a5
20405c04:	50f2                	lw	ra,60(sp)
20405c06:	5462                	lw	s0,56(sp)
20405c08:	6121                	addi	sp,sp,64
20405c0a:	8082                	ret

20405c0c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405c0c:	1101                	addi	sp,sp,-32
20405c0e:	ce06                	sw	ra,28(sp)
20405c10:	cc22                	sw	s0,24(sp)
20405c12:	1000                	addi	s0,sp,32
20405c14:	fea42623          	sw	a0,-20(s0)
20405c18:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405c1c:	fec42503          	lw	a0,-20(s0)
20405c20:	37a5                	jal	20405b88 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405c22:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405c24:	853e                	mv	a0,a5
20405c26:	40f2                	lw	ra,28(sp)
20405c28:	4462                	lw	s0,24(sp)
20405c2a:	6105                	addi	sp,sp,32
20405c2c:	8082                	ret

20405c2e <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1060
{
20405c2e:	1101                	addi	sp,sp,-32
20405c30:	ce22                	sw	s0,28(sp)
20405c32:	1000                	addi	s0,sp,32
20405c34:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405c38:	800007b7          	lui	a5,0x80000
20405c3c:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1062
}
20405c40:	853e                	mv	a0,a5
20405c42:	4472                	lw	s0,28(sp)
20405c44:	6105                	addi	sp,sp,32
20405c46:	8082                	ret

20405c48 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1065
{
20405c48:	1101                	addi	sp,sp,-32
20405c4a:	ce22                	sw	s0,28(sp)
20405c4c:	1000                	addi	s0,sp,32
20405c4e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405c52:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1067
}
20405c56:	853e                	mv	a0,a5
20405c58:	4472                	lw	s0,28(sp)
20405c5a:	6105                	addi	sp,sp,32
20405c5c:	8082                	ret

20405c5e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1070
{
20405c5e:	1101                	addi	sp,sp,-32
20405c60:	ce22                	sw	s0,28(sp)
20405c62:	1000                	addi	s0,sp,32
20405c64:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405c68:	4791                	li	a5,4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1072
}
20405c6a:	853e                	mv	a0,a5
20405c6c:	4472                	lw	s0,28(sp)
20405c6e:	6105                	addi	sp,sp,32
20405c70:	8082                	ret

20405c72 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
20405c72:	1141                	addi	sp,sp,-16
20405c74:	c622                	sw	s0,12(sp)
20405c76:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405c78:	204017b7          	lui	a5,0x20401
20405c7c:	5b478793          	addi	a5,a5,1460 # 204015b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405c80:	853e                	mv	a0,a5
20405c82:	4432                	lw	s0,12(sp)
20405c84:	0141                	addi	sp,sp,16
20405c86:	8082                	ret

20405c88 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405c88:	7139                	addi	sp,sp,-64
20405c8a:	de06                	sw	ra,60(sp)
20405c8c:	dc22                	sw	s0,56(sp)
20405c8e:	0080                	addi	s0,sp,64
20405c90:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405c94:	fcc42503          	lw	a0,-52(s0)
20405c98:	3f59                	jal	20405c2e <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405c9a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405c9e:	fcc42503          	lw	a0,-52(s0)
20405ca2:	3f75                	jal	20405c5e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405ca4:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405ca8:	fcc42503          	lw	a0,-52(s0)
20405cac:	3f71                	jal	20405c48 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405cae:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405cb2:	37c1                	jal	20405c72 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405cb4:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405cb8:	fe042783          	lw	a5,-32(s0)
20405cbc:	439c                	lw	a5,0(a5)
20405cbe:	fe842583          	lw	a1,-24(s0)
20405cc2:	fe442503          	lw	a0,-28(s0)
20405cc6:	9782                	jalr	a5
20405cc8:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405ccc:	fdc42703          	lw	a4,-36(s0)
20405cd0:	400007b7          	lui	a5,0x40000
20405cd4:	8ff9                	and	a5,a5,a4
20405cd6:	e399                	bnez	a5,20405cdc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405cd8:	57fd                	li	a5,-1
20405cda:	a821                	j	20405cf2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405cdc:	fdc42783          	lw	a5,-36(s0)
20405ce0:	0007c463          	bltz	a5,20405ce8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20405ce4:	57fd                	li	a5,-1
20405ce6:	a031                	j	20405cf2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405ce8:	fec42503          	lw	a0,-20(s0)
20405cec:	7e8010ef          	jal	ra,204074d4 <metal_clock_get_rate_hz>
20405cf0:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20405cf2:	853e                	mv	a0,a5
20405cf4:	50f2                	lw	ra,60(sp)
20405cf6:	5462                	lw	s0,56(sp)
20405cf8:	6121                	addi	sp,sp,64
20405cfa:	8082                	ret

20405cfc <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405cfc:	1101                	addi	sp,sp,-32
20405cfe:	ce06                	sw	ra,28(sp)
20405d00:	cc22                	sw	s0,24(sp)
20405d02:	1000                	addi	s0,sp,32
20405d04:	fea42623          	sw	a0,-20(s0)
20405d08:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405d0c:	fec42503          	lw	a0,-20(s0)
20405d10:	3fa5                	jal	20405c88 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405d12:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405d14:	853e                	mv	a0,a5
20405d16:	40f2                	lw	ra,28(sp)
20405d18:	4462                	lw	s0,24(sp)
20405d1a:	6105                	addi	sp,sp,32
20405d1c:	8082                	ret

20405d1e <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1121
{
20405d1e:	1101                	addi	sp,sp,-32
20405d20:	ce22                	sw	s0,28(sp)
20405d22:	1000                	addi	s0,sp,32
20405d24:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405d28:	800007b7          	lui	a5,0x80000
20405d2c:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xfffff308>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1123
}
20405d30:	853e                	mv	a0,a5
20405d32:	4472                	lw	s0,28(sp)
20405d34:	6105                	addi	sp,sp,32
20405d36:	8082                	ret

20405d38 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1126
{
20405d38:	1101                	addi	sp,sp,-32
20405d3a:	ce22                	sw	s0,28(sp)
20405d3c:	1000                	addi	s0,sp,32
20405d3e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405d42:	800007b7          	lui	a5,0x80000
20405d46:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xfffff314>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1128
}
20405d4a:	853e                	mv	a0,a5
20405d4c:	4472                	lw	s0,28(sp)
20405d4e:	6105                	addi	sp,sp,32
20405d50:	8082                	ret

20405d52 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1131
{
20405d52:	1101                	addi	sp,sp,-32
20405d54:	ce22                	sw	s0,28(sp)
20405d56:	1000                	addi	s0,sp,32
20405d58:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405d5c:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1133
}
20405d60:	853e                	mv	a0,a5
20405d62:	4472                	lw	s0,28(sp)
20405d64:	6105                	addi	sp,sp,32
20405d66:	8082                	ret

20405d68 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1136
{
20405d68:	1101                	addi	sp,sp,-32
20405d6a:	ce22                	sw	s0,28(sp)
20405d6c:	1000                	addi	s0,sp,32
20405d6e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405d72:	47b1                	li	a5,12
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1138
}
20405d74:	853e                	mv	a0,a5
20405d76:	4472                	lw	s0,28(sp)
20405d78:	6105                	addi	sp,sp,32
20405d7a:	8082                	ret

20405d7c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1141
{
20405d7c:	1141                	addi	sp,sp,-16
20405d7e:	c622                	sw	s0,12(sp)
20405d80:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405d82:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1143
}
20405d86:	853e                	mv	a0,a5
20405d88:	4432                	lw	s0,12(sp)
20405d8a:	0141                	addi	sp,sp,16
20405d8c:	8082                	ret

20405d8e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1146
{
20405d8e:	1141                	addi	sp,sp,-16
20405d90:	c622                	sw	s0,12(sp)
20405d92:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405d94:	47a1                	li	a5,8
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1148
}
20405d96:	853e                	mv	a0,a5
20405d98:	4432                	lw	s0,12(sp)
20405d9a:	0141                	addi	sp,sp,16
20405d9c:	8082                	ret

20405d9e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1151
{
20405d9e:	1141                	addi	sp,sp,-16
20405da0:	c622                	sw	s0,12(sp)
20405da2:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1152
		return 16000000;
20405da4:	00f427b7          	lui	a5,0xf42
20405da8:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1153
}
20405dac:	853e                	mv	a0,a5
20405dae:	4432                	lw	s0,12(sp)
20405db0:	0141                	addi	sp,sp,16
20405db2:	8082                	ret

20405db4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1159
{
20405db4:	1141                	addi	sp,sp,-16
20405db6:	c622                	sw	s0,12(sp)
20405db8:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405dba:	100087b7          	lui	a5,0x10008
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1161
}
20405dbe:	853e                	mv	a0,a5
20405dc0:	4432                	lw	s0,12(sp)
20405dc2:	0141                	addi	sp,sp,16
20405dc4:	8082                	ret

20405dc6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1169
{
20405dc6:	1141                	addi	sp,sp,-16
20405dc8:	c622                	sw	s0,12(sp)
20405dca:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405dcc:	204017b7          	lui	a5,0x20401
20405dd0:	5b478793          	addi	a5,a5,1460 # 204015b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1171
}
20405dd4:	853e                	mv	a0,a5
20405dd6:	4432                	lw	s0,12(sp)
20405dd8:	0141                	addi	sp,sp,16
20405dda:	8082                	ret

20405ddc <get_pll_config_freq>:
get_pll_config_freq():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405ddc:	1101                	addi	sp,sp,-32
20405dde:	ce22                	sw	s0,28(sp)
20405de0:	1000                	addi	s0,sp,32
20405de2:	fea42623          	sw	a0,-20(s0)
20405de6:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405dea:	fe842783          	lw	a5,-24(s0)
20405dee:	479c                	lw	a5,8(a5)
20405df0:	fec42703          	lw	a4,-20(s0)
20405df4:	00f76963          	bltu	a4,a5,20405e06 <get_pll_config_freq+0x2a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405df8:	fe842783          	lw	a5,-24(s0)
20405dfc:	47dc                	lw	a5,12(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405dfe:	fec42703          	lw	a4,-20(s0)
20405e02:	00e7f463          	bgeu	a5,a4,20405e0a <get_pll_config_freq+0x2e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405e06:	57fd                	li	a5,-1
20405e08:	a829                	j	20405e22 <get_pll_config_freq+0x46>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405e0a:	fe842783          	lw	a5,-24(s0)
20405e0e:	4398                	lw	a4,0(a5)
20405e10:	fec42783          	lw	a5,-20(s0)
20405e14:	02f70733          	mul	a4,a4,a5
20405e18:	fe842783          	lw	a5,-24(s0)
20405e1c:	43dc                	lw	a5,4(a5)
20405e1e:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405e22:	853e                	mv	a0,a5
20405e24:	4472                	lw	s0,28(sp)
20405e26:	6105                	addi	sp,sp,32
20405e28:	8082                	ret

20405e2a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405e2a:	7139                	addi	sp,sp,-64
20405e2c:	de06                	sw	ra,60(sp)
20405e2e:	dc22                	sw	s0,56(sp)
20405e30:	0080                	addi	s0,sp,64
20405e32:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405e36:	fcc42783          	lw	a5,-52(s0)
20405e3a:	853e                	mv	a0,a5
20405e3c:	3df5                	jal	20405d38 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405e3e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405e42:	3fb1                	jal	20405d9e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405e44:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405e48:	3799                	jal	20405d8e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405e4a:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405e4e:	379d                	jal	20405db4 <__metal_driver_sifive_fe310_g000_prci_base>
20405e50:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405e54:	fe042703          	lw	a4,-32(s0)
20405e58:	fe442783          	lw	a5,-28(s0)
20405e5c:	97ba                	add	a5,a5,a4
20405e5e:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405e62:	fcc42783          	lw	a5,-52(s0)
20405e66:	43dc                	lw	a5,4(a5)
20405e68:	853e                	mv	a0,a5
20405e6a:	5d4010ef          	jal	ra,2040743e <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405e6e:	fdc42783          	lw	a5,-36(s0)
20405e72:	4398                	lw	a4,0(a5)
20405e74:	67c1                	lui	a5,0x10
20405e76:	8ff9                	and	a5,a5,a4
20405e78:	cb91                	beqz	a5,20405e8c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405e7a:	fdc42783          	lw	a5,-36(s0)
20405e7e:	4398                	lw	a4,0(a5)
20405e80:	77c1                	lui	a5,0xffff0
20405e82:	17fd                	addi	a5,a5,-1
20405e84:	8f7d                	and	a4,a4,a5
20405e86:	fdc42783          	lw	a5,-36(s0)
20405e8a:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405e8c:	fec42783          	lw	a5,-20(s0)
20405e90:	cb91                	beqz	a5,20405ea4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405e92:	fdc42783          	lw	a5,-36(s0)
20405e96:	4398                	lw	a4,0(a5)
20405e98:	000207b7          	lui	a5,0x20
20405e9c:	8f5d                	or	a4,a4,a5
20405e9e:	fdc42783          	lw	a5,-36(s0)
20405ea2:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405ea4:	fcc42783          	lw	a5,-52(s0)
20405ea8:	439c                	lw	a5,0(a5)
20405eaa:	43d8                	lw	a4,4(a5)
20405eac:	fcc42783          	lw	a5,-52(s0)
20405eb0:	fe842583          	lw	a1,-24(s0)
20405eb4:	853e                	mv	a0,a5
20405eb6:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405eb8:	fcc42783          	lw	a5,-52(s0)
20405ebc:	479c                	lw	a5,8(a5)
20405ebe:	853e                	mv	a0,a5
20405ec0:	57e010ef          	jal	ra,2040743e <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405ec4:	0001                	nop
20405ec6:	50f2                	lw	ra,60(sp)
20405ec8:	5462                	lw	s0,56(sp)
20405eca:	6121                	addi	sp,sp,64
20405ecc:	8082                	ret

20405ece <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405ece:	711d                	addi	sp,sp,-96
20405ed0:	ce86                	sw	ra,92(sp)
20405ed2:	cca2                	sw	s0,88(sp)
20405ed4:	1080                	addi	s0,sp,96
20405ed6:	faa42623          	sw	a0,-84(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405eda:	fac42503          	lw	a0,-84(s0)
20405ede:	3da9                	jal	20405d38 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405ee0:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405ee4:	fac42503          	lw	a0,-84(s0)
20405ee8:	3d1d                	jal	20405d1e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405eea:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405eee:	fac42503          	lw	a0,-84(s0)
20405ef2:	3d71                	jal	20405d8e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405ef4:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405ef8:	fac42503          	lw	a0,-84(s0)
20405efc:	3541                	jal	20405d7c <__metal_driver_sifive_fe310_g000_pll_config_base>
20405efe:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405f02:	fac42503          	lw	a0,-84(s0)
20405f06:	358d                	jal	20405d68 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405f08:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405f0c:	fac42503          	lw	a0,-84(s0)
20405f10:	3589                	jal	20405d52 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405f12:	fca42c23          	sw	a0,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405f16:	3d45                	jal	20405dc6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405f18:	fca42a23          	sw	a0,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405f1c:	fd442783          	lw	a5,-44(s0)
20405f20:	439c                	lw	a5,0(a5)
20405f22:	fe442583          	lw	a1,-28(s0)
20405f26:	fe042503          	lw	a0,-32(s0)
20405f2a:	9782                	jalr	a5
20405f2c:	fca42823          	sw	a0,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405f30:	fd442783          	lw	a5,-44(s0)
20405f34:	439c                	lw	a5,0(a5)
20405f36:	fdc42583          	lw	a1,-36(s0)
20405f3a:	fd842503          	lw	a0,-40(s0)
20405f3e:	9782                	jalr	a5
20405f40:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405f44:	fd042703          	lw	a4,-48(s0)
20405f48:	67c1                	lui	a5,0x10
20405f4a:	8f7d                	and	a4,a4,a5
20405f4c:	67c1                	lui	a5,0x10
20405f4e:	00f77863          	bgeu	a4,a5,20405f5e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405f52:	fe842503          	lw	a0,-24(s0)
20405f56:	57e010ef          	jal	ra,204074d4 <metal_clock_get_rate_hz>
20405f5a:	87aa                	mv	a5,a0
20405f5c:	a8e1                	j	20406034 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405f5e:	fd042703          	lw	a4,-48(s0)
20405f62:	000207b7          	lui	a5,0x20
20405f66:	8f7d                	and	a4,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405f68:	000207b7          	lui	a5,0x20
20405f6c:	00f76563          	bltu	a4,a5,20405f76 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405f70:	fec42783          	lw	a5,-20(s0)
20405f74:	a019                	j	20405f7a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405f76:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405f7a:	853e                	mv	a0,a5
20405f7c:	558010ef          	jal	ra,204074d4 <metal_clock_get_rate_hz>
20405f80:	fca42423          	sw	a0,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405f84:	fd042703          	lw	a4,-48(s0)
20405f88:	000407b7          	lui	a5,0x40
20405f8c:	8f7d                	and	a4,a4,a5
20405f8e:	000407b7          	lui	a5,0x40
20405f92:	00f76563          	bltu	a4,a5,20405f9c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405f96:	fc842783          	lw	a5,-56(s0)
20405f9a:	a869                	j	20406034 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405f9c:	fd042783          	lw	a5,-48(s0)
20405fa0:	8b9d                	andi	a5,a5,7
20405fa2:	0785                	addi	a5,a5,1
20405fa4:	fcf42223          	sw	a5,-60(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405fa8:	fd042783          	lw	a5,-48(s0)
20405fac:	3f07f793          	andi	a5,a5,1008
20405fb0:	8391                	srli	a5,a5,0x4
20405fb2:	0785                	addi	a5,a5,1
20405fb4:	0786                	slli	a5,a5,0x1
20405fb6:	fcf42023          	sw	a5,-64(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405fba:	fd042703          	lw	a4,-48(s0)
20405fbe:	6785                	lui	a5,0x1
20405fc0:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405fc4:	8f7d                	and	a4,a4,a5
20405fc6:	3ff00793          	li	a5,1023
20405fca:	00e7e463          	bltu	a5,a4,20405fd2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405fce:	57fd                	li	a5,-1
20405fd0:	a095                	j	20406034 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405fd2:	fd042703          	lw	a4,-48(s0)
20405fd6:	6785                	lui	a5,0x1
20405fd8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405fdc:	8ff9                	and	a5,a5,a4
20405fde:	83a9                	srli	a5,a5,0xa
20405fe0:	4705                	li	a4,1
20405fe2:	00f717b3          	sll	a5,a4,a5
20405fe6:	faf42e23          	sw	a5,-68(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20405fea:	fc842703          	lw	a4,-56(s0)
20405fee:	fc442783          	lw	a5,-60(s0)
20405ff2:	02f74733          	div	a4,a4,a5
20405ff6:	fc042783          	lw	a5,-64(s0)
20405ffa:	02f70733          	mul	a4,a4,a5
20405ffe:	fbc42783          	lw	a5,-68(s0)
20406002:	02f747b3          	div	a5,a4,a5
20406006:	faf42c23          	sw	a5,-72(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2040600a:	fcc42783          	lw	a5,-52(s0)
2040600e:	1007f713          	andi	a4,a5,256
20406012:	0ff00793          	li	a5,255
20406016:	00e7f563          	bgeu	a5,a4,20406020 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2040601a:	fb842783          	lw	a5,-72(s0)
2040601e:	a819                	j	20406034 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20406020:	fb842703          	lw	a4,-72(s0)
20406024:	fcc42783          	lw	a5,-52(s0)
20406028:	03f7f793          	andi	a5,a5,63
2040602c:	0785                	addi	a5,a5,1
2040602e:	0786                	slli	a5,a5,0x1
20406030:	02f757b3          	divu	a5,a4,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20406034:	853e                	mv	a0,a5
20406036:	40f6                	lw	ra,92(sp)
20406038:	4466                	lw	s0,88(sp)
2040603a:	6125                	addi	sp,sp,96
2040603c:	8082                	ret

2040603e <find_closest_config>:
find_closest_config():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2040603e:	7139                	addi	sp,sp,-64
20406040:	de06                	sw	ra,60(sp)
20406042:	dc22                	sw	s0,56(sp)
20406044:	0080                	addi	s0,sp,64
20406046:	fca42623          	sw	a0,-52(s0)
2040604a:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2040604e:	57fd                	li	a5,-1
20406050:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20406054:	800007b7          	lui	a5,0x80000
20406058:	fff7c793          	not	a5,a5
2040605c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20406060:	04300793          	li	a5,67
20406064:	fef42223          	sw	a5,-28(s0)
20406068:	a0b5                	j	204060d4 <find_closest_config+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2040606a:	fcc42683          	lw	a3,-52(s0)
2040606e:	fe442783          	lw	a5,-28(s0)
20406072:	00579713          	slli	a4,a5,0x5
20406076:	204017b7          	lui	a5,0x20401
2040607a:	c5478793          	addi	a5,a5,-940 # 20400c54 <pll_configs>
2040607e:	97ba                	add	a5,a5,a4
20406080:	85be                	mv	a1,a5
20406082:	8536                	mv	a0,a3
20406084:	d59ff0ef          	jal	ra,20405ddc <get_pll_config_freq>
20406088:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2040608c:	fe042703          	lw	a4,-32(s0)
20406090:	57fd                	li	a5,-1
20406092:	02f70c63          	beq	a4,a5,204060ca <find_closest_config+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20406096:	fe042703          	lw	a4,-32(s0)
2040609a:	fc842783          	lw	a5,-56(s0)
2040609e:	8f1d                	sub	a4,a4,a5
204060a0:	41f75793          	srai	a5,a4,0x1f
204060a4:	8f3d                	xor	a4,a4,a5
204060a6:	40f707b3          	sub	a5,a4,a5
204060aa:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
204060ae:	fdc42703          	lw	a4,-36(s0)
204060b2:	fe842783          	lw	a5,-24(s0)
204060b6:	00f75a63          	bge	a4,a5,204060ca <find_closest_config+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
204060ba:	fe442783          	lw	a5,-28(s0)
204060be:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
204060c2:	fdc42783          	lw	a5,-36(s0)
204060c6:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204060ca:	fe442783          	lw	a5,-28(s0)
204060ce:	17fd                	addi	a5,a5,-1
204060d0:	fef42223          	sw	a5,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204060d4:	fe442783          	lw	a5,-28(s0)
204060d8:	f807d9e3          	bgez	a5,2040606a <find_closest_config+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
204060dc:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
204060e0:	853e                	mv	a0,a5
204060e2:	50f2                	lw	ra,60(sp)
204060e4:	5462                	lw	s0,56(sp)
204060e6:	6121                	addi	sp,sp,64
204060e8:	8082                	ret

204060ea <configure_pll>:
configure_pll():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
204060ea:	7179                	addi	sp,sp,-48
204060ec:	d606                	sw	ra,44(sp)
204060ee:	d422                	sw	s0,40(sp)
204060f0:	1800                	addi	s0,sp,48
204060f2:	fca42e23          	sw	a0,-36(s0)
204060f6:	fcb42c23          	sw	a1,-40(s0)
204060fa:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
204060fe:	fdc42783          	lw	a5,-36(s0)
20406102:	439c                	lw	a5,0(a5)
20406104:	ff87f713          	andi	a4,a5,-8
20406108:	fdc42783          	lw	a5,-36(s0)
2040610c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2040610e:	fdc42783          	lw	a5,-36(s0)
20406112:	4398                	lw	a4,0(a5)
20406114:	fd442783          	lw	a5,-44(s0)
20406118:	4b9c                	lw	a5,16(a5)
2040611a:	8b9d                	andi	a5,a5,7
2040611c:	8f5d                	or	a4,a4,a5
2040611e:	fdc42783          	lw	a5,-36(s0)
20406122:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20406124:	fdc42783          	lw	a5,-36(s0)
20406128:	439c                	lw	a5,0(a5)
2040612a:	c0f7f713          	andi	a4,a5,-1009
2040612e:	fdc42783          	lw	a5,-36(s0)
20406132:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20406134:	fdc42783          	lw	a5,-36(s0)
20406138:	4398                	lw	a4,0(a5)
2040613a:	fd442783          	lw	a5,-44(s0)
2040613e:	4bdc                	lw	a5,20(a5)
20406140:	0792                	slli	a5,a5,0x4
20406142:	3f07f793          	andi	a5,a5,1008
20406146:	8f5d                	or	a4,a4,a5
20406148:	fdc42783          	lw	a5,-36(s0)
2040614c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2040614e:	fdc42783          	lw	a5,-36(s0)
20406152:	4398                	lw	a4,0(a5)
20406154:	77fd                	lui	a5,0xfffff
20406156:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdf8f>
2040615a:	8f7d                	and	a4,a4,a5
2040615c:	fdc42783          	lw	a5,-36(s0)
20406160:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20406162:	fdc42783          	lw	a5,-36(s0)
20406166:	4398                	lw	a4,0(a5)
20406168:	fd442783          	lw	a5,-44(s0)
2040616c:	4f9c                	lw	a5,24(a5)
2040616e:	00a79693          	slli	a3,a5,0xa
20406172:	6785                	lui	a5,0x1
20406174:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406178:	8ff5                	and	a5,a5,a3
2040617a:	8f5d                	or	a4,a4,a5
2040617c:	fdc42783          	lw	a5,-36(s0)
20406180:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20406182:	fd442783          	lw	a5,-44(s0)
20406186:	4fdc                	lw	a5,28(a5)
20406188:	0207db63          	bgez	a5,204061be <configure_pll+0xd4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2040618c:	fd842783          	lw	a5,-40(s0)
20406190:	439c                	lw	a5,0(a5)
20406192:	1007e713          	ori	a4,a5,256
20406196:	fd842783          	lw	a5,-40(s0)
2040619a:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2040619c:	fd842783          	lw	a5,-40(s0)
204061a0:	439c                	lw	a5,0(a5)
204061a2:	fc07f713          	andi	a4,a5,-64
204061a6:	fd842783          	lw	a5,-40(s0)
204061aa:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
204061ac:	fd842783          	lw	a5,-40(s0)
204061b0:	439c                	lw	a5,0(a5)
204061b2:	0017e713          	ori	a4,a5,1
204061b6:	fd842783          	lw	a5,-40(s0)
204061ba:	c398                	sw	a4,0(a5)
204061bc:	a82d                	j	204061f6 <configure_pll+0x10c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
204061be:	fd842783          	lw	a5,-40(s0)
204061c2:	439c                	lw	a5,0(a5)
204061c4:	eff7f713          	andi	a4,a5,-257
204061c8:	fd842783          	lw	a5,-40(s0)
204061cc:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204061ce:	fd842783          	lw	a5,-40(s0)
204061d2:	439c                	lw	a5,0(a5)
204061d4:	fc07f713          	andi	a4,a5,-64
204061d8:	fd842783          	lw	a5,-40(s0)
204061dc:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
204061de:	fd842783          	lw	a5,-40(s0)
204061e2:	4398                	lw	a4,0(a5)
204061e4:	fd442783          	lw	a5,-44(s0)
204061e8:	4fdc                	lw	a5,28(a5)
204061ea:	03f7f793          	andi	a5,a5,63
204061ee:	8f5d                	or	a4,a4,a5
204061f0:	fd842783          	lw	a5,-40(s0)
204061f4:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
204061f6:	fdc42783          	lw	a5,-36(s0)
204061fa:	4398                	lw	a4,0(a5)
204061fc:	fffc07b7          	lui	a5,0xfffc0
20406200:	17fd                	addi	a5,a5,-1
20406202:	8f7d                	and	a4,a4,a5
20406204:	fdc42783          	lw	a5,-36(s0)
20406208:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040620a:	fe040793          	addi	a5,s0,-32
2040620e:	863e                	mv	a2,a5
20406210:	4585                	li	a1,1
20406212:	800007b7          	lui	a5,0x80000
20406216:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
2040621a:	c76fd0ef          	jal	ra,20403690 <__metal_driver_riscv_clint0_command_request>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2040621e:	fe042603          	lw	a2,-32(s0)
20406222:	fe442683          	lw	a3,-28(s0)
20406226:	4511                	li	a0,4
20406228:	4581                	li	a1,0
2040622a:	00a60733          	add	a4,a2,a0
2040622e:	883a                	mv	a6,a4
20406230:	00c83833          	sltu	a6,a6,a2
20406234:	00b687b3          	add	a5,a3,a1
20406238:	00f806b3          	add	a3,a6,a5
2040623c:	87b6                	mv	a5,a3
2040623e:	fee42423          	sw	a4,-24(s0)
20406242:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406246:	a819                	j	2040625c <configure_pll+0x172>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20406248:	fe040793          	addi	a5,s0,-32
2040624c:	863e                	mv	a2,a5
2040624e:	4585                	li	a1,1
20406250:	800007b7          	lui	a5,0x80000
20406254:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
20406258:	c38fd0ef          	jal	ra,20403690 <__metal_driver_riscv_clint0_command_request>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2040625c:	fe042703          	lw	a4,-32(s0)
20406260:	fe442783          	lw	a5,-28(s0)
20406264:	fec42683          	lw	a3,-20(s0)
20406268:	863e                	mv	a2,a5
2040626a:	00c6ec63          	bltu	a3,a2,20406282 <configure_pll+0x198>
2040626e:	fec42683          	lw	a3,-20(s0)
20406272:	863e                	mv	a2,a5
20406274:	fcc69ae3          	bne	a3,a2,20406248 <configure_pll+0x15e>
20406278:	fe842683          	lw	a3,-24(s0)
2040627c:	87ba                	mv	a5,a4
2040627e:	fcf6f5e3          	bgeu	a3,a5,20406248 <configure_pll+0x15e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20406282:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20406284:	fdc42783          	lw	a5,-36(s0)
20406288:	439c                	lw	a5,0(a5)
2040628a:	fe07dde3          	bgez	a5,20406284 <configure_pll+0x19a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2040628e:	0001                	nop
20406290:	0001                	nop
20406292:	50b2                	lw	ra,44(sp)
20406294:	5422                	lw	s0,40(sp)
20406296:	6145                	addi	sp,sp,48
20406298:	8082                	ret

2040629a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2040629a:	715d                	addi	sp,sp,-80
2040629c:	c686                	sw	ra,76(sp)
2040629e:	c4a2                	sw	s0,72(sp)
204062a0:	0880                	addi	s0,sp,80
204062a2:	faa42e23          	sw	a0,-68(s0)
204062a6:	fab42c23          	sw	a1,-72(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204062aa:	fbc42503          	lw	a0,-68(s0)
204062ae:	a8bff0ef          	jal	ra,20405d38 <__metal_driver_sifive_fe310_g000_pll_pllref>
204062b2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204062b6:	fbc42503          	lw	a0,-68(s0)
204062ba:	a65ff0ef          	jal	ra,20405d1e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204062be:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204062c2:	fbc42503          	lw	a0,-68(s0)
204062c6:	ac9ff0ef          	jal	ra,20405d8e <__metal_driver_sifive_fe310_g000_pll_config_offset>
204062ca:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204062ce:	fbc42503          	lw	a0,-68(s0)
204062d2:	a97ff0ef          	jal	ra,20405d68 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204062d6:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204062da:	adbff0ef          	jal	ra,20405db4 <__metal_driver_sifive_fe310_g000_prci_base>
204062de:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204062e2:	fdc42703          	lw	a4,-36(s0)
204062e6:	fe442783          	lw	a5,-28(s0)
204062ea:	97ba                	add	a5,a5,a4
204062ec:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
204062f0:	fdc42703          	lw	a4,-36(s0)
204062f4:	fe042783          	lw	a5,-32(s0)
204062f8:	97ba                	add	a5,a5,a4
204062fa:	fcf42a23          	sw	a5,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
204062fe:	fd842783          	lw	a5,-40(s0)
20406302:	4398                	lw	a4,0(a5)
20406304:	67c1                	lui	a5,0x10
20406306:	8ff9                	and	a5,a5,a4
20406308:	cb91                	beqz	a5,2040631c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040630a:	fd842783          	lw	a5,-40(s0)
2040630e:	4398                	lw	a4,0(a5)
20406310:	77c1                	lui	a5,0xffff0
20406312:	17fd                	addi	a5,a5,-1
20406314:	8f7d                	and	a4,a4,a5
20406316:	fd842783          	lw	a5,-40(s0)
2040631a:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2040631c:	fd842783          	lw	a5,-40(s0)
20406320:	4398                	lw	a4,0(a5)
20406322:	000207b7          	lui	a5,0x20
20406326:	8ff9                	and	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20406328:	c781                	beqz	a5,20406330 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040632a:	fec42783          	lw	a5,-20(s0)
2040632e:	a019                	j	20406334 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20406330:	fe842783          	lw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20406334:	853e                	mv	a0,a5
20406336:	19e010ef          	jal	ra,204074d4 <metal_clock_get_rate_hz>
2040633a:	fca42823          	sw	a0,-48(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2040633e:	fd042703          	lw	a4,-48(s0)
20406342:	87ba                	mv	a5,a4
20406344:	0786                	slli	a5,a5,0x1
20406346:	97ba                	add	a5,a5,a4
20406348:	41f7d713          	srai	a4,a5,0x1f
2040634c:	8b0d                	andi	a4,a4,3
2040634e:	97ba                	add	a5,a5,a4
20406350:	8789                	srai	a5,a5,0x2
20406352:	873e                	mv	a4,a5
20406354:	fb842783          	lw	a5,-72(s0)
20406358:	02e7cb63          	blt	a5,a4,2040638e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2040635c:	fd042703          	lw	a4,-48(s0)
20406360:	87ba                	mv	a5,a4
20406362:	078a                	slli	a5,a5,0x2
20406364:	97ba                	add	a5,a5,a4
20406366:	41f7d713          	srai	a4,a5,0x1f
2040636a:	8b0d                	andi	a4,a4,3
2040636c:	97ba                	add	a5,a5,a4
2040636e:	8789                	srai	a5,a5,0x2
20406370:	873e                	mv	a4,a5
20406372:	fb842783          	lw	a5,-72(s0)
20406376:	00f74c63          	blt	a4,a5,2040638e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2040637a:	fd842783          	lw	a5,-40(s0)
2040637e:	4398                	lw	a4,0(a5)
20406380:	000407b7          	lui	a5,0x40
20406384:	8f5d                	or	a4,a4,a5
20406386:	fd842783          	lw	a5,-40(s0)
2040638a:	c398                	sw	a4,0(a5)
2040638c:	a881                	j	204063dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2040638e:	fb842583          	lw	a1,-72(s0)
20406392:	fd042503          	lw	a0,-48(s0)
20406396:	ca9ff0ef          	jal	ra,2040603e <find_closest_config>
2040639a:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2040639e:	fcc42703          	lw	a4,-52(s0)
204063a2:	57fd                	li	a5,-1
204063a4:	02f70363          	beq	a4,a5,204063ca <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204063a8:	fcc42783          	lw	a5,-52(s0)
204063ac:	00579713          	slli	a4,a5,0x5
204063b0:	204017b7          	lui	a5,0x20401
204063b4:	c5478793          	addi	a5,a5,-940 # 20400c54 <pll_configs>
204063b8:	97ba                	add	a5,a5,a4
204063ba:	863e                	mv	a2,a5
204063bc:	fd442583          	lw	a1,-44(s0)
204063c0:	fd842503          	lw	a0,-40(s0)
204063c4:	d27ff0ef          	jal	ra,204060ea <configure_pll>
204063c8:	a811                	j	204063dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204063ca:	fd842783          	lw	a5,-40(s0)
204063ce:	4398                	lw	a4,0(a5)
204063d0:	000407b7          	lui	a5,0x40
204063d4:	8f5d                	or	a4,a4,a5
204063d6:	fd842783          	lw	a5,-40(s0)
204063da:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204063dc:	fd842783          	lw	a5,-40(s0)
204063e0:	4398                	lw	a4,0(a5)
204063e2:	67c1                	lui	a5,0x10
204063e4:	8f5d                	or	a4,a4,a5
204063e6:	fd842783          	lw	a5,-40(s0)
204063ea:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
204063ec:	fbc42503          	lw	a0,-68(s0)
204063f0:	adfff0ef          	jal	ra,20405ece <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
204063f4:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
204063f6:	853e                	mv	a0,a5
204063f8:	40b6                	lw	ra,76(sp)
204063fa:	4426                	lw	s0,72(sp)
204063fc:	6161                	addi	sp,sp,80
204063fe:	8082                	ret

20406400 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1159
{
20406400:	1141                	addi	sp,sp,-16
20406402:	c622                	sw	s0,12(sp)
20406404:	0800                	addi	s0,sp,16
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20406406:	100087b7          	lui	a5,0x10008
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:1161
}
2040640a:	853e                	mv	a0,a5
2040640c:	4432                	lw	s0,12(sp)
2040640e:	0141                	addi	sp,sp,16
20406410:	8082                	ret

20406412 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20406412:	7179                	addi	sp,sp,-48
20406414:	d606                	sw	ra,44(sp)
20406416:	d422                	sw	s0,40(sp)
20406418:	1800                	addi	s0,sp,48
2040641a:	fca42e23          	sw	a0,-36(s0)
2040641e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406422:	3ff9                	jal	20406400 <__metal_driver_sifive_fe310_g000_prci_base>
20406424:	87aa                	mv	a5,a0
20406426:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
2040642a:	fd842703          	lw	a4,-40(s0)
2040642e:	fec42783          	lw	a5,-20(s0)
20406432:	97ba                	add	a5,a5,a4
20406434:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20406436:	853e                	mv	a0,a5
20406438:	50b2                	lw	ra,44(sp)
2040643a:	5422                	lw	s0,40(sp)
2040643c:	6145                	addi	sp,sp,48
2040643e:	8082                	ret

20406440 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20406440:	7179                	addi	sp,sp,-48
20406442:	d606                	sw	ra,44(sp)
20406444:	d422                	sw	s0,40(sp)
20406446:	1800                	addi	s0,sp,48
20406448:	fca42e23          	sw	a0,-36(s0)
2040644c:	fcb42c23          	sw	a1,-40(s0)
20406450:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406454:	3775                	jal	20406400 <__metal_driver_sifive_fe310_g000_prci_base>
20406456:	87aa                	mv	a5,a0
20406458:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
2040645c:	fd842703          	lw	a4,-40(s0)
20406460:	fec42783          	lw	a5,-20(s0)
20406464:	97ba                	add	a5,a5,a4
20406466:	873e                	mv	a4,a5
20406468:	fd442783          	lw	a5,-44(s0)
2040646c:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2040646e:	853e                	mv	a0,a5
20406470:	50b2                	lw	ra,44(sp)
20406472:	5422                	lw	s0,40(sp)
20406474:	6145                	addi	sp,sp,48
20406476:	8082                	ret

20406478 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:474
{
20406478:	1101                	addi	sp,sp,-32
2040647a:	ce22                	sw	s0,28(sp)
2040647c:	1000                	addi	s0,sp,32
2040647e:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406482:	fec42703          	lw	a4,-20(s0)
20406486:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040648a:	00f71563          	bne	a4,a5,20406494 <__metal_driver_sifive_gpio0_base+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
2040648e:	100127b7          	lui	a5,0x10012
20406492:	a011                	j	20406496 <__metal_driver_sifive_gpio0_base+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:479
		return 0;
20406494:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:481
}
20406496:	853e                	mv	a0,a5
20406498:	4472                	lw	s0,28(sp)
2040649a:	6105                	addi	sp,sp,32
2040649c:	8082                	ret

2040649e <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:504
{
2040649e:	1101                	addi	sp,sp,-32
204064a0:	ce22                	sw	s0,28(sp)
204064a2:	1000                	addi	s0,sp,32
204064a4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204064a8:	fec42703          	lw	a4,-20(s0)
204064ac:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064b0:	00f71763          	bne	a4,a5,204064be <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204064b4:	800007b7          	lui	a5,0x80000
204064b8:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204064bc:	a011                	j	204064c0 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:509
		return 0;
204064be:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:511
}
204064c0:	853e                	mv	a0,a5
204064c2:	4472                	lw	s0,28(sp)
204064c4:	6105                	addi	sp,sp,32
204064c6:	8082                	ret

204064c8 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:514
{
204064c8:	1101                	addi	sp,sp,-32
204064ca:	ce22                	sw	s0,28(sp)
204064cc:	1000                	addi	s0,sp,32
204064ce:	fea42623          	sw	a0,-20(s0)
204064d2:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
204064d6:	fec42703          	lw	a4,-20(s0)
204064da:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064de:	00f71763          	bne	a4,a5,204064ec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:515 (discriminator 1)
204064e2:	fe842783          	lw	a5,-24(s0)
204064e6:	e399                	bnez	a5,204064ec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:516
		return 7;
204064e8:	479d                	li	a5,7
204064ea:	a269                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
204064ec:	fec42703          	lw	a4,-20(s0)
204064f0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064f4:	00f71963          	bne	a4,a5,20406506 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:518 (discriminator 1)
204064f8:	fe842703          	lw	a4,-24(s0)
204064fc:	4785                	li	a5,1
204064fe:	00f71463          	bne	a4,a5,20406506 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:519
		return 8;
20406502:	47a1                	li	a5,8
20406504:	aa85                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20406506:	fec42703          	lw	a4,-20(s0)
2040650a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040650e:	00f71963          	bne	a4,a5,20406520 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:521 (discriminator 1)
20406512:	fe842703          	lw	a4,-24(s0)
20406516:	4789                	li	a5,2
20406518:	00f71463          	bne	a4,a5,20406520 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:522
		return 9;
2040651c:	47a5                	li	a5,9
2040651e:	aa99                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20406520:	fec42703          	lw	a4,-20(s0)
20406524:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406528:	00f71963          	bne	a4,a5,2040653a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:524 (discriminator 1)
2040652c:	fe842703          	lw	a4,-24(s0)
20406530:	478d                	li	a5,3
20406532:	00f71463          	bne	a4,a5,2040653a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:525
		return 10;
20406536:	47a9                	li	a5,10
20406538:	aa35                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2040653a:	fec42703          	lw	a4,-20(s0)
2040653e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406542:	00f71963          	bne	a4,a5,20406554 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:527 (discriminator 1)
20406546:	fe842703          	lw	a4,-24(s0)
2040654a:	4791                	li	a5,4
2040654c:	00f71463          	bne	a4,a5,20406554 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:528
		return 11;
20406550:	47ad                	li	a5,11
20406552:	a20d                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20406554:	fec42703          	lw	a4,-20(s0)
20406558:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040655c:	00f71963          	bne	a4,a5,2040656e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:530 (discriminator 1)
20406560:	fe842703          	lw	a4,-24(s0)
20406564:	4795                	li	a5,5
20406566:	00f71463          	bne	a4,a5,2040656e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:531
		return 12;
2040656a:	47b1                	li	a5,12
2040656c:	a221                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2040656e:	fec42703          	lw	a4,-20(s0)
20406572:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406576:	00f71963          	bne	a4,a5,20406588 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:533 (discriminator 1)
2040657a:	fe842703          	lw	a4,-24(s0)
2040657e:	4799                	li	a5,6
20406580:	00f71463          	bne	a4,a5,20406588 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:534
		return 13;
20406584:	47b5                	li	a5,13
20406586:	a0fd                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20406588:	fec42703          	lw	a4,-20(s0)
2040658c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406590:	00f71963          	bne	a4,a5,204065a2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:536 (discriminator 1)
20406594:	fe842703          	lw	a4,-24(s0)
20406598:	479d                	li	a5,7
2040659a:	00f71463          	bne	a4,a5,204065a2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:537
		return 14;
2040659e:	47b9                	li	a5,14
204065a0:	a8d1                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204065a2:	fec42703          	lw	a4,-20(s0)
204065a6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065aa:	00f71963          	bne	a4,a5,204065bc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:539 (discriminator 1)
204065ae:	fe842703          	lw	a4,-24(s0)
204065b2:	47a1                	li	a5,8
204065b4:	00f71463          	bne	a4,a5,204065bc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:540
		return 15;
204065b8:	47bd                	li	a5,15
204065ba:	a86d                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204065bc:	fec42703          	lw	a4,-20(s0)
204065c0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065c4:	00f71963          	bne	a4,a5,204065d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:542 (discriminator 1)
204065c8:	fe842703          	lw	a4,-24(s0)
204065cc:	47a5                	li	a5,9
204065ce:	00f71463          	bne	a4,a5,204065d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:543
		return 16;
204065d2:	47c1                	li	a5,16
204065d4:	a045                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
204065d6:	fec42703          	lw	a4,-20(s0)
204065da:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065de:	00f71963          	bne	a4,a5,204065f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:545 (discriminator 1)
204065e2:	fe842703          	lw	a4,-24(s0)
204065e6:	47a9                	li	a5,10
204065e8:	00f71463          	bne	a4,a5,204065f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:546
		return 17;
204065ec:	47c5                	li	a5,17
204065ee:	a059                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
204065f0:	fec42703          	lw	a4,-20(s0)
204065f4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065f8:	00f71963          	bne	a4,a5,2040660a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:548 (discriminator 1)
204065fc:	fe842703          	lw	a4,-24(s0)
20406600:	47ad                	li	a5,11
20406602:	00f71463          	bne	a4,a5,2040660a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:549
		return 18;
20406606:	47c9                	li	a5,18
20406608:	a0b5                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2040660a:	fec42703          	lw	a4,-20(s0)
2040660e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406612:	00f71963          	bne	a4,a5,20406624 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:551 (discriminator 1)
20406616:	fe842703          	lw	a4,-24(s0)
2040661a:	47b1                	li	a5,12
2040661c:	00f71463          	bne	a4,a5,20406624 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:552
		return 19;
20406620:	47cd                	li	a5,19
20406622:	a889                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20406624:	fec42703          	lw	a4,-20(s0)
20406628:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040662c:	00f71963          	bne	a4,a5,2040663e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:554 (discriminator 1)
20406630:	fe842703          	lw	a4,-24(s0)
20406634:	47b5                	li	a5,13
20406636:	00f71463          	bne	a4,a5,2040663e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:555
		return 20;
2040663a:	47d1                	li	a5,20
2040663c:	a825                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2040663e:	fec42703          	lw	a4,-20(s0)
20406642:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406646:	00f71963          	bne	a4,a5,20406658 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:557 (discriminator 1)
2040664a:	fe842703          	lw	a4,-24(s0)
2040664e:	47b9                	li	a5,14
20406650:	00f71463          	bne	a4,a5,20406658 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:558
		return 21;
20406654:	47d5                	li	a5,21
20406656:	a839                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20406658:	fec42703          	lw	a4,-20(s0)
2040665c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406660:	00f71963          	bne	a4,a5,20406672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:560 (discriminator 1)
20406664:	fe842703          	lw	a4,-24(s0)
20406668:	47bd                	li	a5,15
2040666a:	00f71463          	bne	a4,a5,20406672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:561
		return 22;
2040666e:	47d9                	li	a5,22
20406670:	a011                	j	20406674 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:564
		return 0;
20406672:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:566
}
20406674:	853e                	mv	a0,a5
20406676:	4472                	lw	s0,28(sp)
20406678:	6105                	addi	sp,sp,32
2040667a:	8082                	ret

2040667c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
2040667c:	7179                	addi	sp,sp,-48
2040667e:	d606                	sw	ra,44(sp)
20406680:	d422                	sw	s0,40(sp)
20406682:	1800                	addi	s0,sp,48
20406684:	fca42e23          	sw	a0,-36(s0)
20406688:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040668c:	fdc42503          	lw	a0,-36(s0)
20406690:	de9ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406694:	87aa                	mv	a5,a0
20406696:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2040669a:	fec42783          	lw	a5,-20(s0)
2040669e:	0791                	addi	a5,a5,4
204066a0:	4398                	lw	a4,0(a5)
204066a2:	fd842783          	lw	a5,-40(s0)
204066a6:	fec42683          	lw	a3,-20(s0)
204066aa:	0691                	addi	a3,a3,4
204066ac:	8fd9                	or	a5,a5,a4
204066ae:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204066b0:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204066b2:	853e                	mv	a0,a5
204066b4:	50b2                	lw	ra,44(sp)
204066b6:	5422                	lw	s0,40(sp)
204066b8:	6145                	addi	sp,sp,48
204066ba:	8082                	ret

204066bc <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204066bc:	7179                	addi	sp,sp,-48
204066be:	d606                	sw	ra,44(sp)
204066c0:	d422                	sw	s0,40(sp)
204066c2:	1800                	addi	s0,sp,48
204066c4:	fca42e23          	sw	a0,-36(s0)
204066c8:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204066cc:	fdc42503          	lw	a0,-36(s0)
204066d0:	da9ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
204066d4:	87aa                	mv	a5,a0
204066d6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
204066da:	fec42783          	lw	a5,-20(s0)
204066de:	0791                	addi	a5,a5,4
204066e0:	439c                	lw	a5,0(a5)
204066e2:	fd842703          	lw	a4,-40(s0)
204066e6:	fff74713          	not	a4,a4
204066ea:	86ba                	mv	a3,a4
204066ec:	fec42703          	lw	a4,-20(s0)
204066f0:	0711                	addi	a4,a4,4
204066f2:	8ff5                	and	a5,a5,a3
204066f4:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
204066f6:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:30
}
204066f8:	853e                	mv	a0,a5
204066fa:	50b2                	lw	ra,44(sp)
204066fc:	5422                	lw	s0,40(sp)
204066fe:	6145                	addi	sp,sp,48
20406700:	8082                	ret

20406702 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406702:	7179                	addi	sp,sp,-48
20406704:	d606                	sw	ra,44(sp)
20406706:	d422                	sw	s0,40(sp)
20406708:	1800                	addi	s0,sp,48
2040670a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040670e:	fdc42503          	lw	a0,-36(s0)
20406712:	d67ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406716:	87aa                	mv	a5,a0
20406718:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2040671c:	fec42783          	lw	a5,-20(s0)
20406720:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20406722:	853e                	mv	a0,a5
20406724:	50b2                	lw	ra,44(sp)
20406726:	5422                	lw	s0,40(sp)
20406728:	6145                	addi	sp,sp,48
2040672a:	8082                	ret

2040672c <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2040672c:	7179                	addi	sp,sp,-48
2040672e:	d606                	sw	ra,44(sp)
20406730:	d422                	sw	s0,40(sp)
20406732:	1800                	addi	s0,sp,48
20406734:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406738:	fdc42503          	lw	a0,-36(s0)
2040673c:	d3dff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406740:	87aa                	mv	a5,a0
20406742:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20406746:	fec42783          	lw	a5,-20(s0)
2040674a:	07b1                	addi	a5,a5,12
2040674c:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2040674e:	853e                	mv	a0,a5
20406750:	50b2                	lw	ra,44(sp)
20406752:	5422                	lw	s0,40(sp)
20406754:	6145                	addi	sp,sp,48
20406756:	8082                	ret

20406758 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20406758:	7179                	addi	sp,sp,-48
2040675a:	d606                	sw	ra,44(sp)
2040675c:	d422                	sw	s0,40(sp)
2040675e:	1800                	addi	s0,sp,48
20406760:	fca42e23          	sw	a0,-36(s0)
20406764:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406768:	fdc42503          	lw	a0,-36(s0)
2040676c:	d0dff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406770:	87aa                	mv	a5,a0
20406772:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406776:	fec42783          	lw	a5,-20(s0)
2040677a:	07a1                	addi	a5,a5,8
2040677c:	439c                	lw	a5,0(a5)
2040677e:	fd842703          	lw	a4,-40(s0)
20406782:	fff74713          	not	a4,a4
20406786:	86ba                	mv	a3,a4
20406788:	fec42703          	lw	a4,-20(s0)
2040678c:	0721                	addi	a4,a4,8
2040678e:	8ff5                	and	a5,a5,a3
20406790:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406792:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406794:	853e                	mv	a0,a5
20406796:	50b2                	lw	ra,44(sp)
20406798:	5422                	lw	s0,40(sp)
2040679a:	6145                	addi	sp,sp,48
2040679c:	8082                	ret

2040679e <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2040679e:	7179                	addi	sp,sp,-48
204067a0:	d606                	sw	ra,44(sp)
204067a2:	d422                	sw	s0,40(sp)
204067a4:	1800                	addi	s0,sp,48
204067a6:	fca42e23          	sw	a0,-36(s0)
204067aa:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204067ae:	fdc42503          	lw	a0,-36(s0)
204067b2:	cc7ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
204067b6:	87aa                	mv	a5,a0
204067b8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204067bc:	fec42783          	lw	a5,-20(s0)
204067c0:	07a1                	addi	a5,a5,8
204067c2:	4398                	lw	a4,0(a5)
204067c4:	fd842783          	lw	a5,-40(s0)
204067c8:	fec42683          	lw	a3,-20(s0)
204067cc:	06a1                	addi	a3,a3,8
204067ce:	8fd9                	or	a5,a5,a4
204067d0:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
204067d2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:64
}
204067d4:	853e                	mv	a0,a5
204067d6:	50b2                	lw	ra,44(sp)
204067d8:	5422                	lw	s0,40(sp)
204067da:	6145                	addi	sp,sp,48
204067dc:	8082                	ret

204067de <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
204067de:	7179                	addi	sp,sp,-48
204067e0:	d606                	sw	ra,44(sp)
204067e2:	d422                	sw	s0,40(sp)
204067e4:	1800                	addi	s0,sp,48
204067e6:	fca42e23          	sw	a0,-36(s0)
204067ea:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204067ee:	fdc42503          	lw	a0,-36(s0)
204067f2:	c87ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
204067f6:	87aa                	mv	a5,a0
204067f8:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
204067fc:	fec42783          	lw	a5,-20(s0)
20406800:	07b1                	addi	a5,a5,12
20406802:	4398                	lw	a4,0(a5)
20406804:	fd842783          	lw	a5,-40(s0)
20406808:	fec42683          	lw	a3,-20(s0)
2040680c:	06b1                	addi	a3,a3,12
2040680e:	8fd9                	or	a5,a5,a4
20406810:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406812:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406814:	853e                	mv	a0,a5
20406816:	50b2                	lw	ra,44(sp)
20406818:	5422                	lw	s0,40(sp)
2040681a:	6145                	addi	sp,sp,48
2040681c:	8082                	ret

2040681e <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2040681e:	7179                	addi	sp,sp,-48
20406820:	d606                	sw	ra,44(sp)
20406822:	d422                	sw	s0,40(sp)
20406824:	1800                	addi	s0,sp,48
20406826:	fca42e23          	sw	a0,-36(s0)
2040682a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040682e:	fdc42503          	lw	a0,-36(s0)
20406832:	c47ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406836:	87aa                	mv	a5,a0
20406838:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040683c:	fec42783          	lw	a5,-20(s0)
20406840:	07b1                	addi	a5,a5,12
20406842:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406844:	fd842703          	lw	a4,-40(s0)
20406848:	fff74713          	not	a4,a4
2040684c:	86ba                	mv	a3,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040684e:	fec42703          	lw	a4,-20(s0)
20406852:	0731                	addi	a4,a4,12
20406854:	8ff5                	and	a5,a5,a3
20406856:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20406858:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:84
}
2040685a:	853e                	mv	a0,a5
2040685c:	50b2                	lw	ra,44(sp)
2040685e:	5422                	lw	s0,40(sp)
20406860:	6145                	addi	sp,sp,48
20406862:	8082                	ret

20406864 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406864:	7179                	addi	sp,sp,-48
20406866:	d606                	sw	ra,44(sp)
20406868:	d422                	sw	s0,40(sp)
2040686a:	1800                	addi	s0,sp,48
2040686c:	fca42e23          	sw	a0,-36(s0)
20406870:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406874:	fdc42503          	lw	a0,-36(s0)
20406878:	c01ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
2040687c:	87aa                	mv	a5,a0
2040687e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406882:	fec42783          	lw	a5,-20(s0)
20406886:	07b1                	addi	a5,a5,12
20406888:	4398                	lw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2040688a:	fd842783          	lw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040688e:	fec42683          	lw	a3,-20(s0)
20406892:	06b1                	addi	a3,a3,12
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406894:	8fb9                	xor	a5,a5,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406896:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406898:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2040689a:	853e                	mv	a0,a5
2040689c:	50b2                	lw	ra,44(sp)
2040689e:	5422                	lw	s0,40(sp)
204068a0:	6145                	addi	sp,sp,48
204068a2:	8082                	ret

204068a4 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204068a4:	7179                	addi	sp,sp,-48
204068a6:	d606                	sw	ra,44(sp)
204068a8:	d422                	sw	s0,40(sp)
204068aa:	1800                	addi	s0,sp,48
204068ac:	fca42e23          	sw	a0,-36(s0)
204068b0:	fcb42c23          	sw	a1,-40(s0)
204068b4:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204068b8:	fdc42503          	lw	a0,-36(s0)
204068bc:	bbdff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
204068c0:	87aa                	mv	a5,a0
204068c2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204068c6:	fec42783          	lw	a5,-20(s0)
204068ca:	03c78793          	addi	a5,a5,60
204068ce:	4398                	lw	a4,0(a5)
204068d0:	fd842783          	lw	a5,-40(s0)
204068d4:	fec42683          	lw	a3,-20(s0)
204068d8:	03c68693          	addi	a3,a3,60
204068dc:	8fd9                	or	a5,a5,a4
204068de:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
204068e0:	fec42783          	lw	a5,-20(s0)
204068e4:	03878793          	addi	a5,a5,56
204068e8:	4398                	lw	a4,0(a5)
204068ea:	fd442783          	lw	a5,-44(s0)
204068ee:	fec42683          	lw	a3,-20(s0)
204068f2:	03868693          	addi	a3,a3,56
204068f6:	8fd9                	or	a5,a5,a4
204068f8:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
204068fa:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:108
}
204068fc:	853e                	mv	a0,a5
204068fe:	50b2                	lw	ra,44(sp)
20406900:	5422                	lw	s0,40(sp)
20406902:	6145                	addi	sp,sp,48
20406904:	8082                	ret

20406906 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20406906:	7179                	addi	sp,sp,-48
20406908:	d606                	sw	ra,44(sp)
2040690a:	d422                	sw	s0,40(sp)
2040690c:	1800                	addi	s0,sp,48
2040690e:	fca42e23          	sw	a0,-36(s0)
20406912:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406916:	fdc42503          	lw	a0,-36(s0)
2040691a:	b5fff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
2040691e:	87aa                	mv	a5,a0
20406920:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406924:	fec42783          	lw	a5,-20(s0)
20406928:	03878793          	addi	a5,a5,56
2040692c:	439c                	lw	a5,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2040692e:	fd842703          	lw	a4,-40(s0)
20406932:	fff74713          	not	a4,a4
20406936:	86ba                	mv	a3,a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406938:	fec42703          	lw	a4,-20(s0)
2040693c:	03870713          	addi	a4,a4,56
20406940:	8ff5                	and	a5,a5,a3
20406942:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406944:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20406946:	853e                	mv	a0,a5
20406948:	50b2                	lw	ra,44(sp)
2040694a:	5422                	lw	s0,40(sp)
2040694c:	6145                	addi	sp,sp,48
2040694e:	8082                	ret

20406950 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406950:	7179                	addi	sp,sp,-48
20406952:	d606                	sw	ra,44(sp)
20406954:	d422                	sw	s0,40(sp)
20406956:	1800                	addi	s0,sp,48
20406958:	fca42e23          	sw	a0,-36(s0)
2040695c:	fcb42c23          	sw	a1,-40(s0)
20406960:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406964:	fdc42503          	lw	a0,-36(s0)
20406968:	b11ff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
2040696c:	87aa                	mv	a5,a0
2040696e:	fef42623          	sw	a5,-20(s0)
20406972:	fd442703          	lw	a4,-44(s0)
20406976:	479d                	li	a5,7
20406978:	1ce7e963          	bltu	a5,a4,20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
2040697c:	fd442783          	lw	a5,-44(s0)
20406980:	00279713          	slli	a4,a5,0x2
20406984:	204017b7          	lui	a5,0x20401
20406988:	4e078793          	addi	a5,a5,1248 # 204014e0 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2040698c:	97ba                	add	a5,a5,a4
2040698e:	439c                	lw	a5,0(a5)
20406990:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406992:	fec42783          	lw	a5,-20(s0)
20406996:	07e1                	addi	a5,a5,24
20406998:	439c                	lw	a5,0(a5)
2040699a:	fd842703          	lw	a4,-40(s0)
2040699e:	fff74713          	not	a4,a4
204069a2:	86ba                	mv	a3,a4
204069a4:	fec42703          	lw	a4,-20(s0)
204069a8:	0761                	addi	a4,a4,24
204069aa:	8ff5                	and	a5,a5,a3
204069ac:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204069ae:	fec42783          	lw	a5,-20(s0)
204069b2:	02078793          	addi	a5,a5,32
204069b6:	439c                	lw	a5,0(a5)
204069b8:	fd842703          	lw	a4,-40(s0)
204069bc:	fff74713          	not	a4,a4
204069c0:	86ba                	mv	a3,a4
204069c2:	fec42703          	lw	a4,-20(s0)
204069c6:	02070713          	addi	a4,a4,32
204069ca:	8ff5                	and	a5,a5,a3
204069cc:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204069ce:	fec42783          	lw	a5,-20(s0)
204069d2:	02878793          	addi	a5,a5,40
204069d6:	439c                	lw	a5,0(a5)
204069d8:	fd842703          	lw	a4,-40(s0)
204069dc:	fff74713          	not	a4,a4
204069e0:	86ba                	mv	a3,a4
204069e2:	fec42703          	lw	a4,-20(s0)
204069e6:	02870713          	addi	a4,a4,40
204069ea:	8ff5                	and	a5,a5,a3
204069ec:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
204069ee:	fec42783          	lw	a5,-20(s0)
204069f2:	03078793          	addi	a5,a5,48
204069f6:	439c                	lw	a5,0(a5)
204069f8:	fd842703          	lw	a4,-40(s0)
204069fc:	fff74713          	not	a4,a4
20406a00:	86ba                	mv	a3,a4
20406a02:	fec42703          	lw	a4,-20(s0)
20406a06:	03070713          	addi	a4,a4,48
20406a0a:	8ff5                	and	a5,a5,a3
20406a0c:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406a0e:	aa35                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406a10:	fec42783          	lw	a5,-20(s0)
20406a14:	07e1                	addi	a5,a5,24
20406a16:	4398                	lw	a4,0(a5)
20406a18:	fd842783          	lw	a5,-40(s0)
20406a1c:	fec42683          	lw	a3,-20(s0)
20406a20:	06e1                	addi	a3,a3,24
20406a22:	8fd9                	or	a5,a5,a4
20406a24:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20406a26:	a215                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406a28:	fec42783          	lw	a5,-20(s0)
20406a2c:	02078793          	addi	a5,a5,32
20406a30:	4398                	lw	a4,0(a5)
20406a32:	fd842783          	lw	a5,-40(s0)
20406a36:	fec42683          	lw	a3,-20(s0)
20406a3a:	02068693          	addi	a3,a3,32
20406a3e:	8fd9                	or	a5,a5,a4
20406a40:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406a42:	a221                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406a44:	fec42783          	lw	a5,-20(s0)
20406a48:	07e1                	addi	a5,a5,24
20406a4a:	4398                	lw	a4,0(a5)
20406a4c:	fd842783          	lw	a5,-40(s0)
20406a50:	fec42683          	lw	a3,-20(s0)
20406a54:	06e1                	addi	a3,a3,24
20406a56:	8fd9                	or	a5,a5,a4
20406a58:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406a5a:	fec42783          	lw	a5,-20(s0)
20406a5e:	02078793          	addi	a5,a5,32
20406a62:	4398                	lw	a4,0(a5)
20406a64:	fd842783          	lw	a5,-40(s0)
20406a68:	fec42683          	lw	a3,-20(s0)
20406a6c:	02068693          	addi	a3,a3,32
20406a70:	8fd9                	or	a5,a5,a4
20406a72:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406a74:	a8d9                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406a76:	fec42783          	lw	a5,-20(s0)
20406a7a:	02878793          	addi	a5,a5,40
20406a7e:	4398                	lw	a4,0(a5)
20406a80:	fd842783          	lw	a5,-40(s0)
20406a84:	fec42683          	lw	a3,-20(s0)
20406a88:	02868693          	addi	a3,a3,40
20406a8c:	8fd9                	or	a5,a5,a4
20406a8e:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406a90:	a86d                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406a92:	fec42783          	lw	a5,-20(s0)
20406a96:	03078793          	addi	a5,a5,48
20406a9a:	4398                	lw	a4,0(a5)
20406a9c:	fd842783          	lw	a5,-40(s0)
20406aa0:	fec42683          	lw	a3,-20(s0)
20406aa4:	03068693          	addi	a3,a3,48
20406aa8:	8fd9                	or	a5,a5,a4
20406aaa:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406aac:	a879                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406aae:	fec42783          	lw	a5,-20(s0)
20406ab2:	02878793          	addi	a5,a5,40
20406ab6:	4398                	lw	a4,0(a5)
20406ab8:	fd842783          	lw	a5,-40(s0)
20406abc:	fec42683          	lw	a3,-20(s0)
20406ac0:	02868693          	addi	a3,a3,40
20406ac4:	8fd9                	or	a5,a5,a4
20406ac6:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406ac8:	fec42783          	lw	a5,-20(s0)
20406acc:	03078793          	addi	a5,a5,48
20406ad0:	4398                	lw	a4,0(a5)
20406ad2:	fd842783          	lw	a5,-40(s0)
20406ad6:	fec42683          	lw	a3,-20(s0)
20406ada:	03068693          	addi	a3,a3,48
20406ade:	8fd9                	or	a5,a5,a4
20406ae0:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20406ae2:	a0a5                	j	20406b4a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406ae4:	fec42783          	lw	a5,-20(s0)
20406ae8:	07e1                	addi	a5,a5,24
20406aea:	4398                	lw	a4,0(a5)
20406aec:	fd842783          	lw	a5,-40(s0)
20406af0:	fec42683          	lw	a3,-20(s0)
20406af4:	06e1                	addi	a3,a3,24
20406af6:	8fd9                	or	a5,a5,a4
20406af8:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406afa:	fec42783          	lw	a5,-20(s0)
20406afe:	02078793          	addi	a5,a5,32
20406b02:	4398                	lw	a4,0(a5)
20406b04:	fd842783          	lw	a5,-40(s0)
20406b08:	fec42683          	lw	a3,-20(s0)
20406b0c:	02068693          	addi	a3,a3,32
20406b10:	8fd9                	or	a5,a5,a4
20406b12:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406b14:	fec42783          	lw	a5,-20(s0)
20406b18:	02878793          	addi	a5,a5,40
20406b1c:	4398                	lw	a4,0(a5)
20406b1e:	fd842783          	lw	a5,-40(s0)
20406b22:	fec42683          	lw	a3,-20(s0)
20406b26:	02868693          	addi	a3,a3,40
20406b2a:	8fd9                	or	a5,a5,a4
20406b2c:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406b2e:	fec42783          	lw	a5,-20(s0)
20406b32:	03078793          	addi	a5,a5,48
20406b36:	4398                	lw	a4,0(a5)
20406b38:	fd842783          	lw	a5,-40(s0)
20406b3c:	fec42683          	lw	a3,-20(s0)
20406b40:	03068693          	addi	a3,a3,48
20406b44:	8fd9                	or	a5,a5,a4
20406b46:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20406b48:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20406b4a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406b4c:	853e                	mv	a0,a5
20406b4e:	50b2                	lw	ra,44(sp)
20406b50:	5422                	lw	s0,40(sp)
20406b52:	6145                	addi	sp,sp,48
20406b54:	8082                	ret

20406b56 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20406b56:	7179                	addi	sp,sp,-48
20406b58:	d606                	sw	ra,44(sp)
20406b5a:	d422                	sw	s0,40(sp)
20406b5c:	1800                	addi	s0,sp,48
20406b5e:	fca42e23          	sw	a0,-36(s0)
20406b62:	fcb42c23          	sw	a1,-40(s0)
20406b66:	fcc42a23          	sw	a2,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406b6a:	fdc42503          	lw	a0,-36(s0)
20406b6e:	90bff0ef          	jal	ra,20406478 <__metal_driver_sifive_gpio0_base>
20406b72:	87aa                	mv	a5,a0
20406b74:	fef42623          	sw	a5,-20(s0)
20406b78:	fd442703          	lw	a4,-44(s0)
20406b7c:	479d                	li	a5,7
20406b7e:	14e7ea63          	bltu	a5,a4,20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406b82:	fd442783          	lw	a5,-44(s0)
20406b86:	00279713          	slli	a4,a5,0x2
20406b8a:	204017b7          	lui	a5,0x20401
20406b8e:	50078793          	addi	a5,a5,1280 # 20401500 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406b92:	97ba                	add	a5,a5,a4
20406b94:	439c                	lw	a5,0(a5)
20406b96:	8782                	jr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406b98:	fec42783          	lw	a5,-20(s0)
20406b9c:	07f1                	addi	a5,a5,28
20406b9e:	4398                	lw	a4,0(a5)
20406ba0:	fd842783          	lw	a5,-40(s0)
20406ba4:	fec42683          	lw	a3,-20(s0)
20406ba8:	06f1                	addi	a3,a3,28
20406baa:	8fd9                	or	a5,a5,a4
20406bac:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20406bae:	a215                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406bb0:	fec42783          	lw	a5,-20(s0)
20406bb4:	02478793          	addi	a5,a5,36
20406bb8:	4398                	lw	a4,0(a5)
20406bba:	fd842783          	lw	a5,-40(s0)
20406bbe:	fec42683          	lw	a3,-20(s0)
20406bc2:	02468693          	addi	a3,a3,36
20406bc6:	8fd9                	or	a5,a5,a4
20406bc8:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406bca:	a221                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406bcc:	fec42783          	lw	a5,-20(s0)
20406bd0:	07f1                	addi	a5,a5,28
20406bd2:	4398                	lw	a4,0(a5)
20406bd4:	fd842783          	lw	a5,-40(s0)
20406bd8:	fec42683          	lw	a3,-20(s0)
20406bdc:	06f1                	addi	a3,a3,28
20406bde:	8fd9                	or	a5,a5,a4
20406be0:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406be2:	fec42783          	lw	a5,-20(s0)
20406be6:	02478793          	addi	a5,a5,36
20406bea:	4398                	lw	a4,0(a5)
20406bec:	fd842783          	lw	a5,-40(s0)
20406bf0:	fec42683          	lw	a3,-20(s0)
20406bf4:	02468693          	addi	a3,a3,36
20406bf8:	8fd9                	or	a5,a5,a4
20406bfa:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406bfc:	a8d9                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406bfe:	fec42783          	lw	a5,-20(s0)
20406c02:	02c78793          	addi	a5,a5,44
20406c06:	4398                	lw	a4,0(a5)
20406c08:	fd842783          	lw	a5,-40(s0)
20406c0c:	fec42683          	lw	a3,-20(s0)
20406c10:	02c68693          	addi	a3,a3,44
20406c14:	8fd9                	or	a5,a5,a4
20406c16:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406c18:	a86d                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406c1a:	fec42783          	lw	a5,-20(s0)
20406c1e:	03478793          	addi	a5,a5,52
20406c22:	4398                	lw	a4,0(a5)
20406c24:	fd842783          	lw	a5,-40(s0)
20406c28:	fec42683          	lw	a3,-20(s0)
20406c2c:	03468693          	addi	a3,a3,52
20406c30:	8fd9                	or	a5,a5,a4
20406c32:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406c34:	a879                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406c36:	fec42783          	lw	a5,-20(s0)
20406c3a:	02c78793          	addi	a5,a5,44
20406c3e:	4398                	lw	a4,0(a5)
20406c40:	fd842783          	lw	a5,-40(s0)
20406c44:	fec42683          	lw	a3,-20(s0)
20406c48:	02c68693          	addi	a3,a3,44
20406c4c:	8fd9                	or	a5,a5,a4
20406c4e:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406c50:	fec42783          	lw	a5,-20(s0)
20406c54:	03478793          	addi	a5,a5,52
20406c58:	4398                	lw	a4,0(a5)
20406c5a:	fd842783          	lw	a5,-40(s0)
20406c5e:	fec42683          	lw	a3,-20(s0)
20406c62:	03468693          	addi	a3,a3,52
20406c66:	8fd9                	or	a5,a5,a4
20406c68:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406c6a:	a0a5                	j	20406cd2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406c6c:	fec42783          	lw	a5,-20(s0)
20406c70:	07f1                	addi	a5,a5,28
20406c72:	4398                	lw	a4,0(a5)
20406c74:	fd842783          	lw	a5,-40(s0)
20406c78:	fec42683          	lw	a3,-20(s0)
20406c7c:	06f1                	addi	a3,a3,28
20406c7e:	8fd9                	or	a5,a5,a4
20406c80:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406c82:	fec42783          	lw	a5,-20(s0)
20406c86:	02478793          	addi	a5,a5,36
20406c8a:	4398                	lw	a4,0(a5)
20406c8c:	fd842783          	lw	a5,-40(s0)
20406c90:	fec42683          	lw	a3,-20(s0)
20406c94:	02468693          	addi	a3,a3,36
20406c98:	8fd9                	or	a5,a5,a4
20406c9a:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406c9c:	fec42783          	lw	a5,-20(s0)
20406ca0:	02c78793          	addi	a5,a5,44
20406ca4:	4398                	lw	a4,0(a5)
20406ca6:	fd842783          	lw	a5,-40(s0)
20406caa:	fec42683          	lw	a3,-20(s0)
20406cae:	02c68693          	addi	a3,a3,44
20406cb2:	8fd9                	or	a5,a5,a4
20406cb4:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406cb6:	fec42783          	lw	a5,-20(s0)
20406cba:	03478793          	addi	a5,a5,52
20406cbe:	4398                	lw	a4,0(a5)
20406cc0:	fd842783          	lw	a5,-40(s0)
20406cc4:	fec42683          	lw	a3,-20(s0)
20406cc8:	03468693          	addi	a3,a3,52
20406ccc:	8fd9                	or	a5,a5,a4
20406cce:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20406cd0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20406cd2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20406cd4:	853e                	mv	a0,a5
20406cd6:	50b2                	lw	ra,44(sp)
20406cd8:	5422                	lw	s0,40(sp)
20406cda:	6145                	addi	sp,sp,48
20406cdc:	8082                	ret

20406cde <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20406cde:	1101                	addi	sp,sp,-32
20406ce0:	ce06                	sw	ra,28(sp)
20406ce2:	cc22                	sw	s0,24(sp)
20406ce4:	1000                	addi	s0,sp,32
20406ce6:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406cea:	fec42503          	lw	a0,-20(s0)
20406cee:	fb0ff0ef          	jal	ra,2040649e <__metal_driver_sifive_gpio0_interrupt_parent>
20406cf2:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20406cf4:	853e                	mv	a0,a5
20406cf6:	40f2                	lw	ra,28(sp)
20406cf8:	4462                	lw	s0,24(sp)
20406cfa:	6105                	addi	sp,sp,32
20406cfc:	8082                	ret

20406cfe <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406cfe:	7179                	addi	sp,sp,-48
20406d00:	d606                	sw	ra,44(sp)
20406d02:	d422                	sw	s0,40(sp)
20406d04:	1800                	addi	s0,sp,48
20406d06:	fca42e23          	sw	a0,-36(s0)
20406d0a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406d0e:	fd842583          	lw	a1,-40(s0)
20406d12:	fdc42503          	lw	a0,-36(s0)
20406d16:	fb2ff0ef          	jal	ra,204064c8 <__metal_driver_sifive_gpio0_interrupt_lines>
20406d1a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406d1e:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406d22:	853e                	mv	a0,a5
20406d24:	50b2                	lw	ra,44(sp)
20406d26:	5422                	lw	s0,40(sp)
20406d28:	6145                	addi	sp,sp,48
20406d2a:	8082                	ret

20406d2c <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:863
{
20406d2c:	1101                	addi	sp,sp,-32
20406d2e:	ce22                	sw	s0,28(sp)
20406d30:	1000                	addi	s0,sp,32
20406d32:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406d36:	fec42703          	lw	a4,-20(s0)
20406d3a:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406d3e:	00f71563          	bne	a4,a5,20406d48 <__metal_driver_sifive_test0_base+0x1c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406d42:	001007b7          	lui	a5,0x100
20406d46:	a011                	j	20406d4a <__metal_driver_sifive_test0_base+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:868
		return 0;
20406d48:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:870
}
20406d4a:	853e                	mv	a0,a5
20406d4c:	4472                	lw	s0,28(sp)
20406d4e:	6105                	addi	sp,sp,32
20406d50:	8082                	ret

20406d52 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406d52:	7179                	addi	sp,sp,-48
20406d54:	d606                	sw	ra,44(sp)
20406d56:	d422                	sw	s0,40(sp)
20406d58:	1800                	addi	s0,sp,48
20406d5a:	fca42e23          	sw	a0,-36(s0)
20406d5e:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406d62:	fdc42503          	lw	a0,-36(s0)
20406d66:	37d9                	jal	20406d2c <__metal_driver_sifive_test0_base>
20406d68:	87aa                	mv	a5,a0
20406d6a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406d6e:	fd842783          	lw	a5,-40(s0)
20406d72:	01079713          	slli	a4,a5,0x10
20406d76:	fd842783          	lw	a5,-40(s0)
20406d7a:	e789                	bnez	a5,20406d84 <__metal_driver_sifive_test0_exit+0x32>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406d7c:	6795                	lui	a5,0x5
20406d7e:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406d82:	a021                	j	20406d8a <__metal_driver_sifive_test0_exit+0x38>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406d84:	678d                	lui	a5,0x3
20406d86:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406d8a:	97ba                	add	a5,a5,a4
20406d8c:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406d90:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406d94:	fe842703          	lw	a4,-24(s0)
20406d98:	c398                	sw	a4,0(a5)
20406d9a:	bfdd                	j	20406d90 <__metal_driver_sifive_test0_exit+0x3e>

20406d9c <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:888
{
20406d9c:	1101                	addi	sp,sp,-32
20406d9e:	ce22                	sw	s0,28(sp)
20406da0:	1000                	addi	s0,sp,32
20406da2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406da6:	fec42703          	lw	a4,-20(s0)
20406daa:	800007b7          	lui	a5,0x80000
20406dae:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406db2:	00f71563          	bne	a4,a5,20406dbc <__metal_driver_sifive_uart0_control_base+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406db6:	100137b7          	lui	a5,0x10013
20406dba:	a011                	j	20406dbe <__metal_driver_sifive_uart0_control_base+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:893
		return 0;
20406dbc:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:895
}
20406dbe:	853e                	mv	a0,a5
20406dc0:	4472                	lw	s0,28(sp)
20406dc2:	6105                	addi	sp,sp,32
20406dc4:	8082                	ret

20406dc6 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:918
{
20406dc6:	1101                	addi	sp,sp,-32
20406dc8:	ce22                	sw	s0,28(sp)
20406dca:	1000                	addi	s0,sp,32
20406dcc:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406dd0:	fec42703          	lw	a4,-20(s0)
20406dd4:	800007b7          	lui	a5,0x80000
20406dd8:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406ddc:	00f71763          	bne	a4,a5,20406dea <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406de0:	800007b7          	lui	a5,0x80000
20406de4:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20406de8:	a011                	j	20406dec <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:923
		return 0;
20406dea:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:925
}
20406dec:	853e                	mv	a0,a5
20406dee:	4472                	lw	s0,28(sp)
20406df0:	6105                	addi	sp,sp,32
20406df2:	8082                	ret

20406df4 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:928
{
20406df4:	1101                	addi	sp,sp,-32
20406df6:	ce22                	sw	s0,28(sp)
20406df8:	1000                	addi	s0,sp,32
20406dfa:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406dfe:	fec42703          	lw	a4,-20(s0)
20406e02:	800007b7          	lui	a5,0x80000
20406e06:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406e0a:	00f71463          	bne	a4,a5,20406e12 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:930
		return 5;
20406e0e:	4795                	li	a5,5
20406e10:	a011                	j	20406e14 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:933
		return 0;
20406e12:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:935
}
20406e14:	853e                	mv	a0,a5
20406e16:	4472                	lw	s0,28(sp)
20406e18:	6105                	addi	sp,sp,32
20406e1a:	8082                	ret

20406e1c <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:938
{
20406e1c:	1101                	addi	sp,sp,-32
20406e1e:	ce22                	sw	s0,28(sp)
20406e20:	1000                	addi	s0,sp,32
20406e22:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e26:	fec42703          	lw	a4,-20(s0)
20406e2a:	800007b7          	lui	a5,0x80000
20406e2e:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406e32:	00f71763          	bne	a4,a5,20406e40 <__metal_driver_sifive_uart0_clock+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406e36:	800007b7          	lui	a5,0x80000
20406e3a:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20406e3e:	a011                	j	20406e42 <__metal_driver_sifive_uart0_clock+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:943
		return 0;
20406e40:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:945
}
20406e42:	853e                	mv	a0,a5
20406e44:	4472                	lw	s0,28(sp)
20406e46:	6105                	addi	sp,sp,32
20406e48:	8082                	ret

20406e4a <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:948
{
20406e4a:	1101                	addi	sp,sp,-32
20406e4c:	ce22                	sw	s0,28(sp)
20406e4e:	1000                	addi	s0,sp,32
20406e50:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e54:	fec42703          	lw	a4,-20(s0)
20406e58:	800007b7          	lui	a5,0x80000
20406e5c:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406e60:	00f71563          	bne	a4,a5,20406e6a <__metal_driver_sifive_uart0_pinmux+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406e64:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406e68:	a011                	j	20406e6c <__metal_driver_sifive_uart0_pinmux+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:953
		return 0;
20406e6a:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:955
}
20406e6c:	853e                	mv	a0,a5
20406e6e:	4472                	lw	s0,28(sp)
20406e70:	6105                	addi	sp,sp,32
20406e72:	8082                	ret

20406e74 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:958
{
20406e74:	1101                	addi	sp,sp,-32
20406e76:	ce22                	sw	s0,28(sp)
20406e78:	1000                	addi	s0,sp,32
20406e7a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e7e:	fec42703          	lw	a4,-20(s0)
20406e82:	800007b7          	lui	a5,0x80000
20406e86:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406e8a:	00f71463          	bne	a4,a5,20406e92 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:960
		return 0;
20406e8e:	4781                	li	a5,0
20406e90:	a011                	j	20406e94 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:963
		return 0;
20406e92:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:965
}
20406e94:	853e                	mv	a0,a5
20406e96:	4472                	lw	s0,28(sp)
20406e98:	6105                	addi	sp,sp,32
20406e9a:	8082                	ret

20406e9c <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:968
{
20406e9c:	1101                	addi	sp,sp,-32
20406e9e:	ce22                	sw	s0,28(sp)
20406ea0:	1000                	addi	s0,sp,32
20406ea2:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406ea6:	fec42703          	lw	a4,-20(s0)
20406eaa:	800007b7          	lui	a5,0x80000
20406eae:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20406eb2:	00f71563          	bne	a4,a5,20406ebc <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:970
		return 196608;
20406eb6:	000307b7          	lui	a5,0x30
20406eba:	a011                	j	20406ebe <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:973
		return 0;
20406ebc:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:975
}
20406ebe:	853e                	mv	a0,a5
20406ec0:	4472                	lw	s0,28(sp)
20406ec2:	6105                	addi	sp,sp,32
20406ec4:	8082                	ret

20406ec6 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406ec6:	1101                	addi	sp,sp,-32
20406ec8:	ce06                	sw	ra,28(sp)
20406eca:	cc22                	sw	s0,24(sp)
20406ecc:	1000                	addi	s0,sp,32
20406ece:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406ed2:	fec42503          	lw	a0,-20(s0)
20406ed6:	3dc5                	jal	20406dc6 <__metal_driver_sifive_uart0_interrupt_parent>
20406ed8:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406eda:	853e                	mv	a0,a5
20406edc:	40f2                	lw	ra,28(sp)
20406ede:	4462                	lw	s0,24(sp)
20406ee0:	6105                	addi	sp,sp,32
20406ee2:	8082                	ret

20406ee4 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406ee4:	1101                	addi	sp,sp,-32
20406ee6:	ce06                	sw	ra,28(sp)
20406ee8:	cc22                	sw	s0,24(sp)
20406eea:	1000                	addi	s0,sp,32
20406eec:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406ef0:	fec42503          	lw	a0,-20(s0)
20406ef4:	3701                	jal	20406df4 <__metal_driver_sifive_uart0_interrupt_line>
20406ef6:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406ef8:	853e                	mv	a0,a5
20406efa:	40f2                	lw	ra,28(sp)
20406efc:	4462                	lw	s0,24(sp)
20406efe:	6105                	addi	sp,sp,32
20406f00:	8082                	ret

20406f02 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406f02:	7179                	addi	sp,sp,-48
20406f04:	d606                	sw	ra,44(sp)
20406f06:	d422                	sw	s0,40(sp)
20406f08:	1800                	addi	s0,sp,48
20406f0a:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f0e:	fdc42503          	lw	a0,-36(s0)
20406f12:	e8bff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20406f16:	87aa                	mv	a5,a0
20406f18:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406f1c:	fec42783          	lw	a5,-20(s0)
20406f20:	07c1                	addi	a5,a5,16
20406f22:	439c                	lw	a5,0(a5)
20406f24:	fec42703          	lw	a4,-20(s0)
20406f28:	0741                	addi	a4,a4,16
20406f2a:	0017e793          	ori	a5,a5,1
20406f2e:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406f30:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406f32:	853e                	mv	a0,a5
20406f34:	50b2                	lw	ra,44(sp)
20406f36:	5422                	lw	s0,40(sp)
20406f38:	6145                	addi	sp,sp,48
20406f3a:	8082                	ret

20406f3c <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406f3c:	7179                	addi	sp,sp,-48
20406f3e:	d606                	sw	ra,44(sp)
20406f40:	d422                	sw	s0,40(sp)
20406f42:	1800                	addi	s0,sp,48
20406f44:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f48:	fdc42503          	lw	a0,-36(s0)
20406f4c:	e51ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20406f50:	87aa                	mv	a5,a0
20406f52:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406f56:	fec42783          	lw	a5,-20(s0)
20406f5a:	07c1                	addi	a5,a5,16
20406f5c:	439c                	lw	a5,0(a5)
20406f5e:	fec42703          	lw	a4,-20(s0)
20406f62:	0741                	addi	a4,a4,16
20406f64:	9bf9                	andi	a5,a5,-2
20406f66:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406f68:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406f6a:	853e                	mv	a0,a5
20406f6c:	50b2                	lw	ra,44(sp)
20406f6e:	5422                	lw	s0,40(sp)
20406f70:	6145                	addi	sp,sp,48
20406f72:	8082                	ret

20406f74 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406f74:	7179                	addi	sp,sp,-48
20406f76:	d606                	sw	ra,44(sp)
20406f78:	d422                	sw	s0,40(sp)
20406f7a:	1800                	addi	s0,sp,48
20406f7c:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f80:	fdc42503          	lw	a0,-36(s0)
20406f84:	e19ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20406f88:	87aa                	mv	a5,a0
20406f8a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406f8e:	fec42783          	lw	a5,-20(s0)
20406f92:	07c1                	addi	a5,a5,16
20406f94:	439c                	lw	a5,0(a5)
20406f96:	fec42703          	lw	a4,-20(s0)
20406f9a:	0741                	addi	a4,a4,16
20406f9c:	0027e793          	ori	a5,a5,2
20406fa0:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406fa2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406fa4:	853e                	mv	a0,a5
20406fa6:	50b2                	lw	ra,44(sp)
20406fa8:	5422                	lw	s0,40(sp)
20406faa:	6145                	addi	sp,sp,48
20406fac:	8082                	ret

20406fae <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406fae:	7179                	addi	sp,sp,-48
20406fb0:	d606                	sw	ra,44(sp)
20406fb2:	d422                	sw	s0,40(sp)
20406fb4:	1800                	addi	s0,sp,48
20406fb6:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406fba:	fdc42503          	lw	a0,-36(s0)
20406fbe:	ddfff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20406fc2:	87aa                	mv	a5,a0
20406fc4:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406fc8:	fec42783          	lw	a5,-20(s0)
20406fcc:	07c1                	addi	a5,a5,16
20406fce:	439c                	lw	a5,0(a5)
20406fd0:	fec42703          	lw	a4,-20(s0)
20406fd4:	0741                	addi	a4,a4,16
20406fd6:	9bf5                	andi	a5,a5,-3
20406fd8:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406fda:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406fdc:	853e                	mv	a0,a5
20406fde:	50b2                	lw	ra,44(sp)
20406fe0:	5422                	lw	s0,40(sp)
20406fe2:	6145                	addi	sp,sp,48
20406fe4:	8082                	ret

20406fe6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406fe6:	7179                	addi	sp,sp,-48
20406fe8:	d606                	sw	ra,44(sp)
20406fea:	d422                	sw	s0,40(sp)
20406fec:	1800                	addi	s0,sp,48
20406fee:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406ff2:	fdc42503          	lw	a0,-36(s0)
20406ff6:	da7ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20406ffa:	87aa                	mv	a5,a0
20406ffc:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20407000:	fec42783          	lw	a5,-20(s0)
20407004:	439c                	lw	a5,0(a5)
20407006:	83fd                	srli	a5,a5,0x1f
20407008:	0ff7f793          	zext.b	a5,a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:77
}
2040700c:	853e                	mv	a0,a5
2040700e:	50b2                	lw	ra,44(sp)
20407010:	5422                	lw	s0,40(sp)
20407012:	6145                	addi	sp,sp,48
20407014:	8082                	ret

20407016 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20407016:	7179                	addi	sp,sp,-48
20407018:	d606                	sw	ra,44(sp)
2040701a:	d422                	sw	s0,40(sp)
2040701c:	1800                	addi	s0,sp,48
2040701e:	fca42e23          	sw	a0,-36(s0)
20407022:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407026:	fdc42503          	lw	a0,-36(s0)
2040702a:	d73ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
2040702e:	87aa                	mv	a5,a0
20407030:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20407034:	fec42783          	lw	a5,-20(s0)
20407038:	07a1                	addi	a5,a5,8
2040703a:	4398                	lw	a4,0(a5)
2040703c:	fd842783          	lw	a5,-40(s0)
20407040:	01079693          	slli	a3,a5,0x10
20407044:	000707b7          	lui	a5,0x70
20407048:	8ff5                	and	a5,a5,a3
2040704a:	fec42683          	lw	a3,-20(s0)
2040704e:	06a1                	addi	a3,a3,8
20407050:	8fd9                	or	a5,a5,a4
20407052:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20407054:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:85
}
20407056:	853e                	mv	a0,a5
20407058:	50b2                	lw	ra,44(sp)
2040705a:	5422                	lw	s0,40(sp)
2040705c:	6145                	addi	sp,sp,48
2040705e:	8082                	ret

20407060 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20407060:	7179                	addi	sp,sp,-48
20407062:	d606                	sw	ra,44(sp)
20407064:	d422                	sw	s0,40(sp)
20407066:	1800                	addi	s0,sp,48
20407068:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040706c:	fdc42503          	lw	a0,-36(s0)
20407070:	d2dff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20407074:	87aa                	mv	a5,a0
20407076:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2040707a:	fec42783          	lw	a5,-20(s0)
2040707e:	07a1                	addi	a5,a5,8
20407080:	439c                	lw	a5,0(a5)
20407082:	83c1                	srli	a5,a5,0x10
20407084:	8b9d                	andi	a5,a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:91
}
20407086:	853e                	mv	a0,a5
20407088:	50b2                	lw	ra,44(sp)
2040708a:	5422                	lw	s0,40(sp)
2040708c:	6145                	addi	sp,sp,48
2040708e:	8082                	ret

20407090 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20407090:	7179                	addi	sp,sp,-48
20407092:	d606                	sw	ra,44(sp)
20407094:	d422                	sw	s0,40(sp)
20407096:	1800                	addi	s0,sp,48
20407098:	fca42e23          	sw	a0,-36(s0)
2040709c:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204070a0:	fdc42503          	lw	a0,-36(s0)
204070a4:	cf9ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
204070a8:	87aa                	mv	a5,a0
204070aa:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
204070ae:	fec42783          	lw	a5,-20(s0)
204070b2:	07b1                	addi	a5,a5,12
204070b4:	4398                	lw	a4,0(a5)
204070b6:	fd842783          	lw	a5,-40(s0)
204070ba:	01079693          	slli	a3,a5,0x10
204070be:	000707b7          	lui	a5,0x70
204070c2:	8ff5                	and	a5,a5,a3
204070c4:	fec42683          	lw	a3,-20(s0)
204070c8:	06b1                	addi	a3,a3,12
204070ca:	8fd9                	or	a5,a5,a4
204070cc:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
204070ce:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:99
}
204070d0:	853e                	mv	a0,a5
204070d2:	50b2                	lw	ra,44(sp)
204070d4:	5422                	lw	s0,40(sp)
204070d6:	6145                	addi	sp,sp,48
204070d8:	8082                	ret

204070da <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
204070da:	7179                	addi	sp,sp,-48
204070dc:	d606                	sw	ra,44(sp)
204070de:	d422                	sw	s0,40(sp)
204070e0:	1800                	addi	s0,sp,48
204070e2:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204070e6:	fdc42503          	lw	a0,-36(s0)
204070ea:	cb3ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
204070ee:	87aa                	mv	a5,a0
204070f0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
204070f4:	fec42783          	lw	a5,-20(s0)
204070f8:	07b1                	addi	a5,a5,12
204070fa:	439c                	lw	a5,0(a5)
204070fc:	83c1                	srli	a5,a5,0x10
204070fe:	8b9d                	andi	a5,a5,7
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:105
}
20407100:	853e                	mv	a0,a5
20407102:	50b2                	lw	ra,44(sp)
20407104:	5422                	lw	s0,40(sp)
20407106:	6145                	addi	sp,sp,48
20407108:	8082                	ret

2040710a <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
2040710a:	7179                	addi	sp,sp,-48
2040710c:	d606                	sw	ra,44(sp)
2040710e:	d422                	sw	s0,40(sp)
20407110:	1800                	addi	s0,sp,48
20407112:	fca42e23          	sw	a0,-36(s0)
20407116:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040711a:	fdc42503          	lw	a0,-36(s0)
2040711e:	c7fff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20407122:	87aa                	mv	a5,a0
20407124:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20407128:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
2040712a:	fdc42503          	lw	a0,-36(s0)
2040712e:	eb9ff0ef          	jal	ra,20406fe6 <__metal_driver_sifive_uart0_txready>
20407132:	87aa                	mv	a5,a0
20407134:	fbfd                	bnez	a5,2040712a <__metal_driver_sifive_uart0_putc+0x20>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20407136:	fec42783          	lw	a5,-20(s0)
2040713a:	fd842703          	lw	a4,-40(s0)
2040713e:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20407140:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:115
}
20407142:	853e                	mv	a0,a5
20407144:	50b2                	lw	ra,44(sp)
20407146:	5422                	lw	s0,40(sp)
20407148:	6145                	addi	sp,sp,48
2040714a:	8082                	ret

2040714c <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2040714c:	7179                	addi	sp,sp,-48
2040714e:	d606                	sw	ra,44(sp)
20407150:	d422                	sw	s0,40(sp)
20407152:	1800                	addi	s0,sp,48
20407154:	fca42e23          	sw	a0,-36(s0)
20407158:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040715c:	fdc42503          	lw	a0,-36(s0)
20407160:	c3dff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
20407164:	87aa                	mv	a5,a0
20407166:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2040716a:	fec42783          	lw	a5,-20(s0)
2040716e:	0791                	addi	a5,a5,4
20407170:	439c                	lw	a5,0(a5)
20407172:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20407176:	fe842783          	lw	a5,-24(s0)
2040717a:	0007d763          	bgez	a5,20407188 <__metal_driver_sifive_uart0_getc+0x3c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2040717e:	fd842783          	lw	a5,-40(s0)
20407182:	577d                	li	a4,-1
20407184:	c398                	sw	a4,0(a5)
20407186:	a801                	j	20407196 <__metal_driver_sifive_uart0_getc+0x4a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20407188:	fe842783          	lw	a5,-24(s0)
2040718c:	0ff7f713          	zext.b	a4,a5
20407190:	fd842783          	lw	a5,-40(s0)
20407194:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20407196:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:129
}
20407198:	853e                	mv	a0,a5
2040719a:	50b2                	lw	ra,44(sp)
2040719c:	5422                	lw	s0,40(sp)
2040719e:	6145                	addi	sp,sp,48
204071a0:	8082                	ret

204071a2 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
204071a2:	7179                	addi	sp,sp,-48
204071a4:	d622                	sw	s0,44(sp)
204071a6:	1800                	addi	s0,sp,48
204071a8:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204071ac:	fdc42783          	lw	a5,-36(s0)
204071b0:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
204071b4:	fec42783          	lw	a5,-20(s0)
204071b8:	43dc                	lw	a5,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:134
}
204071ba:	853e                	mv	a0,a5
204071bc:	5432                	lw	s0,44(sp)
204071be:	6145                	addi	sp,sp,48
204071c0:	8082                	ret

204071c2 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
204071c2:	7179                	addi	sp,sp,-48
204071c4:	d606                	sw	ra,44(sp)
204071c6:	d422                	sw	s0,40(sp)
204071c8:	1800                	addi	s0,sp,48
204071ca:	fca42e23          	sw	a0,-36(s0)
204071ce:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204071d2:	fdc42783          	lw	a5,-36(s0)
204071d6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
204071da:	fdc42503          	lw	a0,-36(s0)
204071de:	bbfff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
204071e2:	87aa                	mv	a5,a0
204071e4:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204071e8:	fdc42503          	lw	a0,-36(s0)
204071ec:	c31ff0ef          	jal	ra,20406e1c <__metal_driver_sifive_uart0_clock>
204071f0:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
204071f4:	fd842703          	lw	a4,-40(s0)
204071f8:	fec42783          	lw	a5,-20(s0)
204071fc:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
204071fe:	fe442783          	lw	a5,-28(s0)
20407202:	cbb1                	beqz	a5,20407256 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20407204:	fe442783          	lw	a5,-28(s0)
20407208:	439c                	lw	a5,0(a5)
2040720a:	439c                	lw	a5,0(a5)
2040720c:	fe442503          	lw	a0,-28(s0)
20407210:	9782                	jalr	a5
20407212:	fea42023          	sw	a0,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20407216:	fe042703          	lw	a4,-32(s0)
2040721a:	fd842783          	lw	a5,-40(s0)
2040721e:	02f747b3          	div	a5,a4,a5
20407222:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20407226:	fe842783          	lw	a5,-24(s0)
2040722a:	07e1                	addi	a5,a5,24
2040722c:	c398                	sw	a4,0(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2040722e:	fe842783          	lw	a5,-24(s0)
20407232:	07a1                	addi	a5,a5,8
20407234:	439c                	lw	a5,0(a5)
20407236:	fe842703          	lw	a4,-24(s0)
2040723a:	0721                	addi	a4,a4,8
2040723c:	0017e793          	ori	a5,a5,1
20407240:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20407242:	fe842783          	lw	a5,-24(s0)
20407246:	07b1                	addi	a5,a5,12
20407248:	439c                	lw	a5,0(a5)
2040724a:	fe842703          	lw	a4,-24(s0)
2040724e:	0731                	addi	a4,a4,12
20407250:	0017e793          	ori	a5,a5,1
20407254:	c31c                	sw	a5,0(a4)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20407256:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:151
}
20407258:	853e                	mv	a0,a5
2040725a:	50b2                	lw	ra,44(sp)
2040725c:	5422                	lw	s0,40(sp)
2040725e:	6145                	addi	sp,sp,48
20407260:	8082                	ret

20407262 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20407262:	7139                	addi	sp,sp,-64
20407264:	de06                	sw	ra,60(sp)
20407266:	dc22                	sw	s0,56(sp)
20407268:	0080                	addi	s0,sp,64
2040726a:	fca42623          	sw	a0,-52(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2040726e:	fcc42783          	lw	a5,-52(s0)
20407272:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20407276:	fcc42503          	lw	a0,-52(s0)
2040727a:	b23ff0ef          	jal	ra,20406d9c <__metal_driver_sifive_uart0_control_base>
2040727e:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20407280:	fef42423          	sw	a5,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20407284:	fcc42503          	lw	a0,-52(s0)
20407288:	b95ff0ef          	jal	ra,20406e1c <__metal_driver_sifive_uart0_clock>
2040728c:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20407290:	fe842783          	lw	a5,-24(s0)
20407294:	07a1                	addi	a5,a5,8
20407296:	4398                	lw	a4,0(a5)
20407298:	fe842783          	lw	a5,-24(s0)
2040729c:	07a1                	addi	a5,a5,8
2040729e:	86be                	mv	a3,a5
204072a0:	fff907b7          	lui	a5,0xfff90
204072a4:	17fd                	addi	a5,a5,-1
204072a6:	8ff9                	and	a5,a5,a4
204072a8:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
204072aa:	fe842783          	lw	a5,-24(s0)
204072ae:	07a1                	addi	a5,a5,8
204072b0:	4398                	lw	a4,0(a5)
204072b2:	fe842783          	lw	a5,-24(s0)
204072b6:	07a1                	addi	a5,a5,8
204072b8:	86be                	mv	a3,a5
204072ba:	67c1                	lui	a5,0x10
204072bc:	8fd9                	or	a5,a5,a4
204072be:	c29c                	sw	a5,0(a3)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
204072c0:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
204072c2:	fe842783          	lw	a5,-24(s0)
204072c6:	07d1                	addi	a5,a5,20
204072c8:	439c                	lw	a5,0(a5)
204072ca:	8b85                	andi	a5,a5,1
204072cc:	dbfd                	beqz	a5,204072c2 <pre_rate_change_callback_func+0x60>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
204072ce:	fe842783          	lw	a5,-24(s0)
204072d2:	07a1                	addi	a5,a5,8
204072d4:	439c                	lw	a5,0(a5)
204072d6:	8b89                	andi	a5,a5,2
204072d8:	c399                	beqz	a5,204072de <pre_rate_change_callback_func+0x7c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
204072da:	47a5                	li	a5,9
204072dc:	a011                	j	204072e0 <pre_rate_change_callback_func+0x7e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
204072de:	47a9                	li	a5,10
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
204072e0:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
204072e4:	fe442783          	lw	a5,-28(s0)
204072e8:	439c                	lw	a5,0(a5)
204072ea:	439c                	lw	a5,0(a5)
204072ec:	fe442503          	lw	a0,-28(s0)
204072f0:	9782                	jalr	a5
204072f2:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
204072f6:	fe042703          	lw	a4,-32(s0)
204072fa:	fdc42783          	lw	a5,-36(s0)
204072fe:	02f707b3          	mul	a5,a4,a5
20407302:	873e                	mv	a4,a5
20407304:	fec42783          	lw	a5,-20(s0)
20407308:	43dc                	lw	a5,4(a5)
2040730a:	02f757b3          	divu	a5,a4,a5
2040730e:	fcf42c23          	sw	a5,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20407312:	fc042a23          	sw	zero,-44(s0)
20407316:	a039                	j	20407324 <pre_rate_change_callback_func+0xc2>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20407318:	0001                	nop
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
2040731a:	fd442783          	lw	a5,-44(s0)
2040731e:	0785                	addi	a5,a5,1
20407320:	fcf42a23          	sw	a5,-44(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20407324:	fd442783          	lw	a5,-44(s0)
20407328:	fd842703          	lw	a4,-40(s0)
2040732c:	fee7c6e3          	blt	a5,a4,20407318 <pre_rate_change_callback_func+0xb6>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:180
}
20407330:	0001                	nop
20407332:	0001                	nop
20407334:	50f2                	lw	ra,60(sp)
20407336:	5462                	lw	s0,56(sp)
20407338:	6121                	addi	sp,sp,64
2040733a:	8082                	ret

2040733c <post_rate_change_callback_func>:
post_rate_change_callback_func():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2040733c:	7179                	addi	sp,sp,-48
2040733e:	d606                	sw	ra,44(sp)
20407340:	d422                	sw	s0,40(sp)
20407342:	1800                	addi	s0,sp,48
20407344:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20407348:	fdc42783          	lw	a5,-36(s0)
2040734c:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20407350:	fec42703          	lw	a4,-20(s0)
20407354:	fec42783          	lw	a5,-20(s0)
20407358:	43dc                	lw	a5,4(a5)
2040735a:	85be                	mv	a1,a5
2040735c:	853a                	mv	a0,a4
2040735e:	d7bfb0ef          	jal	ra,204030d8 <metal_uart_set_baud_rate>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:185
}
20407362:	0001                	nop
20407364:	50b2                	lw	ra,44(sp)
20407366:	5422                	lw	s0,40(sp)
20407368:	6145                	addi	sp,sp,48
2040736a:	8082                	ret

2040736c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040736c:	7139                	addi	sp,sp,-64
2040736e:	de06                	sw	ra,60(sp)
20407370:	dc22                	sw	s0,56(sp)
20407372:	0080                	addi	s0,sp,64
20407374:	fca42623          	sw	a0,-52(s0)
20407378:	fcb42423          	sw	a1,-56(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040737c:	fcc42783          	lw	a5,-52(s0)
20407380:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407384:	fcc42503          	lw	a0,-52(s0)
20407388:	a95ff0ef          	jal	ra,20406e1c <__metal_driver_sifive_uart0_clock>
2040738c:	fea42423          	sw	a0,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407390:	fcc42503          	lw	a0,-52(s0)
20407394:	ab7ff0ef          	jal	ra,20406e4a <__metal_driver_sifive_uart0_pinmux>
20407398:	fea42223          	sw	a0,-28(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040739c:	fe842783          	lw	a5,-24(s0)
204073a0:	c7b9                	beqz	a5,204073ee <__metal_driver_sifive_uart0_init+0x82>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
204073a2:	fec42783          	lw	a5,-20(s0)
204073a6:	20407737          	lui	a4,0x20407
204073aa:	26270713          	addi	a4,a4,610 # 20407262 <pre_rate_change_callback_func>
204073ae:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
204073b0:	fec42783          	lw	a5,-20(s0)
204073b4:	fcc42703          	lw	a4,-52(s0)
204073b8:	c7d8                	sw	a4,12(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
204073ba:	fec42783          	lw	a5,-20(s0)
204073be:	07a1                	addi	a5,a5,8
204073c0:	85be                	mv	a1,a5
204073c2:	fe842503          	lw	a0,-24(s0)
204073c6:	2abd                	jal	20407544 <metal_clock_register_pre_rate_change_callback>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
204073c8:	fec42783          	lw	a5,-20(s0)
204073cc:	20407737          	lui	a4,0x20407
204073d0:	33c70713          	addi	a4,a4,828 # 2040733c <post_rate_change_callback_func>
204073d4:	cbd8                	sw	a4,20(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
204073d6:	fec42783          	lw	a5,-20(s0)
204073da:	fcc42703          	lw	a4,-52(s0)
204073de:	cf98                	sw	a4,24(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
204073e0:	fec42783          	lw	a5,-20(s0)
204073e4:	07d1                	addi	a5,a5,20
204073e6:	85be                	mv	a1,a5
204073e8:	fe842503          	lw	a0,-24(s0)
204073ec:	2269                	jal	20407576 <metal_clock_register_post_rate_change_callback>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
204073ee:	fec42783          	lw	a5,-20(s0)
204073f2:	fc842583          	lw	a1,-56(s0)
204073f6:	853e                	mv	a0,a5
204073f8:	ce1fb0ef          	jal	ra,204030d8 <metal_uart_set_baud_rate>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
204073fc:	fe442783          	lw	a5,-28(s0)
20407400:	cb95                	beqz	a5,20407434 <__metal_driver_sifive_uart0_init+0xc8>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20407402:	fcc42503          	lw	a0,-52(s0)
20407406:	a6fff0ef          	jal	ra,20406e74 <__metal_driver_sifive_uart0_pinmux_output_selector>
2040740a:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2040740c:	fef42023          	sw	a5,-32(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20407410:	fcc42503          	lw	a0,-52(s0)
20407414:	a89ff0ef          	jal	ra,20406e9c <__metal_driver_sifive_uart0_pinmux_source_selector>
20407418:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2040741a:	fcf42e23          	sw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040741e:	fe442783          	lw	a5,-28(s0)
20407422:	439c                	lw	a5,0(a5)
20407424:	53dc                	lw	a5,36(a5)
20407426:	fdc42603          	lw	a2,-36(s0)
2040742a:	fe042583          	lw	a1,-32(s0)
2040742e:	fe442503          	lw	a0,-28(s0)
20407432:	9782                	jalr	a5
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20407434:	0001                	nop
20407436:	50f2                	lw	ra,60(sp)
20407438:	5462                	lw	s0,56(sp)
2040743a:	6121                	addi	sp,sp,64
2040743c:	8082                	ret

2040743e <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2040743e:	7179                	addi	sp,sp,-48
20407440:	d606                	sw	ra,44(sp)
20407442:	d422                	sw	s0,40(sp)
20407444:	1800                	addi	s0,sp,48
20407446:	fca42e23          	sw	a0,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2040744a:	fdc42783          	lw	a5,-36(s0)
2040744e:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:52
    while (current) {
20407452:	a831                	j	2040746e <_metal_clock_call_all_callbacks+0x30>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20407454:	fec42783          	lw	a5,-20(s0)
20407458:	4398                	lw	a4,0(a5)
2040745a:	fec42783          	lw	a5,-20(s0)
2040745e:	43dc                	lw	a5,4(a5)
20407460:	853e                	mv	a0,a5
20407462:	9702                	jalr	a4
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:54
        current = current->_next;
20407464:	fec42783          	lw	a5,-20(s0)
20407468:	479c                	lw	a5,8(a5)
2040746a:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:52
    while (current) {
2040746e:	fec42783          	lw	a5,-20(s0)
20407472:	f3ed                	bnez	a5,20407454 <_metal_clock_call_all_callbacks+0x16>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:56
    }
}
20407474:	0001                	nop
20407476:	0001                	nop
20407478:	50b2                	lw	ra,44(sp)
2040747a:	5422                	lw	s0,40(sp)
2040747c:	6145                	addi	sp,sp,48
2040747e:	8082                	ret

20407480 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407480:	7179                	addi	sp,sp,-48
20407482:	d622                	sw	s0,44(sp)
20407484:	1800                	addi	s0,sp,48
20407486:	fca42e23          	sw	a0,-36(s0)
2040748a:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2040748e:	fd842783          	lw	a5,-40(s0)
20407492:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:66

    if (!list) {
20407496:	fdc42783          	lw	a5,-36(s0)
2040749a:	e781                	bnez	a5,204074a2 <_metal_clock_append_to_callbacks+0x22>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:67
        return cb;
2040749c:	fd842783          	lw	a5,-40(s0)
204074a0:	a035                	j	204074cc <_metal_clock_append_to_callbacks+0x4c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
204074a2:	fdc42783          	lw	a5,-36(s0)
204074a6:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
204074aa:	a031                	j	204074b6 <_metal_clock_append_to_callbacks+0x36>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:73
        current = current->_next;
204074ac:	fec42783          	lw	a5,-20(s0)
204074b0:	479c                	lw	a5,8(a5)
204074b2:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
204074b6:	fec42783          	lw	a5,-20(s0)
204074ba:	479c                	lw	a5,8(a5)
204074bc:	fbe5                	bnez	a5,204074ac <_metal_clock_append_to_callbacks+0x2c>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
204074be:	fec42783          	lw	a5,-20(s0)
204074c2:	fd842703          	lw	a4,-40(s0)
204074c6:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:78

    return list;
204074c8:	fdc42783          	lw	a5,-36(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:79
}
204074cc:	853e                	mv	a0,a5
204074ce:	5432                	lw	s0,44(sp)
204074d0:	6145                	addi	sp,sp,48
204074d2:	8082                	ret

204074d4 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
204074d4:	1101                	addi	sp,sp,-32
204074d6:	ce06                	sw	ra,28(sp)
204074d8:	cc22                	sw	s0,24(sp)
204074da:	1000                	addi	s0,sp,32
204074dc:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
204074e0:	fec42783          	lw	a5,-20(s0)
204074e4:	439c                	lw	a5,0(a5)
204074e6:	439c                	lw	a5,0(a5)
204074e8:	fec42503          	lw	a0,-20(s0)
204074ec:	9782                	jalr	a5
204074ee:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:112
}
204074f0:	853e                	mv	a0,a5
204074f2:	40f2                	lw	ra,28(sp)
204074f4:	4462                	lw	s0,24(sp)
204074f6:	6105                	addi	sp,sp,32
204074f8:	8082                	ret

204074fa <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
204074fa:	7179                	addi	sp,sp,-48
204074fc:	d606                	sw	ra,44(sp)
204074fe:	d422                	sw	s0,40(sp)
20407500:	1800                	addi	s0,sp,48
20407502:	fca42e23          	sw	a0,-36(s0)
20407506:	fcb42c23          	sw	a1,-40(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2040750a:	fdc42783          	lw	a5,-36(s0)
2040750e:	43dc                	lw	a5,4(a5)
20407510:	853e                	mv	a0,a5
20407512:	3735                	jal	2040743e <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20407514:	fdc42783          	lw	a5,-36(s0)
20407518:	439c                	lw	a5,0(a5)
2040751a:	43dc                	lw	a5,4(a5)
2040751c:	fd842583          	lw	a1,-40(s0)
20407520:	fdc42503          	lw	a0,-36(s0)
20407524:	9782                	jalr	a5
20407526:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2040752a:	fdc42783          	lw	a5,-36(s0)
2040752e:	479c                	lw	a5,8(a5)
20407530:	853e                	mv	a0,a5
20407532:	f0dff0ef          	jal	ra,2040743e <_metal_clock_call_all_callbacks>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:135

    return out;
20407536:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:136
}
2040753a:	853e                	mv	a0,a5
2040753c:	50b2                	lw	ra,44(sp)
2040753e:	5422                	lw	s0,40(sp)
20407540:	6145                	addi	sp,sp,48
20407542:	8082                	ret

20407544 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20407544:	1101                	addi	sp,sp,-32
20407546:	ce06                	sw	ra,28(sp)
20407548:	cc22                	sw	s0,24(sp)
2040754a:	1000                	addi	s0,sp,32
2040754c:	fea42623          	sw	a0,-20(s0)
20407550:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20407554:	fec42783          	lw	a5,-20(s0)
20407558:	43dc                	lw	a5,4(a5)
2040755a:	fe842583          	lw	a1,-24(s0)
2040755e:	853e                	mv	a0,a5
20407560:	f21ff0ef          	jal	ra,20407480 <_metal_clock_append_to_callbacks>
20407564:	872a                	mv	a4,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407566:	fec42783          	lw	a5,-20(s0)
2040756a:	c3d8                	sw	a4,4(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:149
}
2040756c:	0001                	nop
2040756e:	40f2                	lw	ra,28(sp)
20407570:	4462                	lw	s0,24(sp)
20407572:	6105                	addi	sp,sp,32
20407574:	8082                	ret

20407576 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407576:	1101                	addi	sp,sp,-32
20407578:	ce06                	sw	ra,28(sp)
2040757a:	cc22                	sw	s0,24(sp)
2040757c:	1000                	addi	s0,sp,32
2040757e:	fea42623          	sw	a0,-20(s0)
20407582:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407586:	fec42783          	lw	a5,-20(s0)
2040758a:	479c                	lw	a5,8(a5)
2040758c:	fe842583          	lw	a1,-24(s0)
20407590:	853e                	mv	a0,a5
20407592:	eefff0ef          	jal	ra,20407480 <_metal_clock_append_to_callbacks>
20407596:	872a                	mv	a4,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20407598:	fec42783          	lw	a5,-20(s0)
2040759c:	c798                	sw	a4,8(a5)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/clock.h:162
}
2040759e:	0001                	nop
204075a0:	40f2                	lw	ra,28(sp)
204075a2:	4462                	lw	s0,24(sp)
204075a4:	6105                	addi	sp,sp,32
204075a6:	8082                	ret

204075a8 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
204075a8:	1101                	addi	sp,sp,-32
204075aa:	ce06                	sw	ra,28(sp)
204075ac:	cc22                	sw	s0,24(sp)
204075ae:	1000                	addi	s0,sp,32
204075b0:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
204075b4:	fec42783          	lw	a5,-20(s0)
204075b8:	439c                	lw	a5,0(a5)
204075ba:	57dc                	lw	a5,44(a5)
204075bc:	fec42503          	lw	a0,-20(s0)
204075c0:	9782                	jalr	a5
204075c2:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/metal/cpu.h:226
}
204075c4:	853e                	mv	a0,a5
204075c6:	40f2                	lw	ra,28(sp)
204075c8:	4462                	lw	s0,24(sp)
204075ca:	6105                	addi	sp,sp,32
204075cc:	8082                	ret

204075ce <metal_cpu_get>:
metal_cpu_get():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
204075ce:	1101                	addi	sp,sp,-32
204075d0:	ce22                	sw	s0,28(sp)
204075d2:	1000                	addi	s0,sp,32
204075d4:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
204075d8:	fec42783          	lw	a5,-20(s0)
204075dc:	eb99                	bnez	a5,204075f2 <metal_cpu_get+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
204075de:	800007b7          	lui	a5,0x80000
204075e2:	fec42703          	lw	a4,-20(s0)
204075e6:	070a                	slli	a4,a4,0x2
204075e8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204075ec:	97ba                	add	a5,a5,a4
204075ee:	439c                	lw	a5,0(a5)
204075f0:	a011                	j	204075f4 <metal_cpu_get+0x26>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:11
    }
    return NULL;
204075f2:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:12
}
204075f4:	853e                	mv	a0,a5
204075f6:	4472                	lw	s0,28(sp)
204075f8:	6105                	addi	sp,sp,32
204075fa:	8082                	ret

204075fc <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
204075fc:	1101                	addi	sp,sp,-32
204075fe:	ce22                	sw	s0,28(sp)
20407600:	1000                	addi	s0,sp,32
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20407602:	f14027f3          	csrr	a5,mhartid
20407606:	fef42623          	sw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:18
    return mhartid;
2040760a:	fec42783          	lw	a5,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/cpu.c:20
#endif
}
2040760e:	853e                	mv	a0,a5
20407610:	4472                	lw	s0,28(sp)
20407612:	6105                	addi	sp,sp,32
20407614:	8082                	ret
	...

20407680 <__metal_vector_table>:
IRQ_0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407680:	bf2fc06f          	j	20403a72 <metal_interrupt_vector_handler>

20407684 <IRQ_1>:
IRQ_1():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407684:	beefc06f          	j	20403a72 <metal_interrupt_vector_handler>

20407688 <IRQ_2>:
IRQ_2():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407688:	beafc06f          	j	20403a72 <metal_interrupt_vector_handler>

2040768c <IRQ_3>:
IRQ_3():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040768c:	c14fc06f          	j	20403aa0 <metal_software_interrupt_vector_handler>

20407690 <IRQ_4>:
IRQ_4():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407690:	be2fc06f          	j	20403a72 <metal_interrupt_vector_handler>

20407694 <IRQ_5>:
IRQ_5():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407694:	bdefc06f          	j	20403a72 <metal_interrupt_vector_handler>

20407698 <IRQ_6>:
IRQ_6():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407698:	bdafc06f          	j	20403a72 <metal_interrupt_vector_handler>

2040769c <IRQ_7>:
IRQ_7():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040769c:	cfefc06f          	j	20403b9a <metal_timer_interrupt_vector_handler>

204076a0 <IRQ_8>:
IRQ_8():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204076a0:	bd2fc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076a4 <IRQ_9>:
IRQ_9():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204076a4:	bcefc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076a8 <IRQ_10>:
IRQ_10():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204076a8:	bcafc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076ac <IRQ_11>:
IRQ_11():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204076ac:	bc6fc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076b0 <IRQ_12>:
IRQ_12():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204076b0:	bc2fc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076b4 <IRQ_13>:
IRQ_13():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204076b4:	bbefc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076b8 <IRQ_14>:
IRQ_14():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204076b8:	bbafc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076bc <IRQ_15>:
IRQ_15():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204076bc:	bb6fc06f          	j	20403a72 <metal_interrupt_vector_handler>

204076c0 <IRQ_LC0>:
IRQ_LC0():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204076c0:	83bfc06f          	j	20403efa <metal_lc0_interrupt_vector_handler>

204076c4 <IRQ_LC1>:
IRQ_LC1():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204076c4:	8cdfc06f          	j	20403f90 <metal_lc1_interrupt_vector_handler>

204076c8 <IRQ_LC2>:
IRQ_LC2():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204076c8:	95ffc06f          	j	20404026 <metal_lc2_interrupt_vector_handler>

204076cc <IRQ_LC3>:
IRQ_LC3():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204076cc:	9f1fc06f          	j	204040bc <metal_lc3_interrupt_vector_handler>

204076d0 <IRQ_LC4>:
IRQ_LC4():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204076d0:	a83fc06f          	j	20404152 <metal_lc4_interrupt_vector_handler>

204076d4 <IRQ_LC5>:
IRQ_LC5():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204076d4:	b15fc06f          	j	204041e8 <metal_lc5_interrupt_vector_handler>

204076d8 <IRQ_LC6>:
IRQ_LC6():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204076d8:	ba7fc06f          	j	2040427e <metal_lc6_interrupt_vector_handler>

204076dc <IRQ_LC7>:
IRQ_LC7():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204076dc:	c39fc06f          	j	20404314 <metal_lc7_interrupt_vector_handler>

204076e0 <IRQ_LC8>:
IRQ_LC8():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204076e0:	ccbfc06f          	j	204043aa <metal_lc8_interrupt_vector_handler>

204076e4 <IRQ_LC9>:
IRQ_LC9():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204076e4:	d5dfc06f          	j	20404440 <metal_lc9_interrupt_vector_handler>

204076e8 <IRQ_LC10>:
IRQ_LC10():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204076e8:	deffc06f          	j	204044d6 <metal_lc10_interrupt_vector_handler>

204076ec <IRQ_LC11>:
IRQ_LC11():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204076ec:	e81fc06f          	j	2040456c <metal_lc11_interrupt_vector_handler>

204076f0 <IRQ_LC12>:
IRQ_LC12():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204076f0:	f13fc06f          	j	20404602 <metal_lc12_interrupt_vector_handler>

204076f4 <IRQ_LC13>:
IRQ_LC13():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204076f4:	fa5fc06f          	j	20404698 <metal_lc13_interrupt_vector_handler>

204076f8 <IRQ_LC14>:
IRQ_LC14():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204076f8:	836fd06f          	j	2040472e <metal_lc14_interrupt_vector_handler>

204076fc <IRQ_LC15>:
IRQ_LC15():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204076fc:	8c8fd06f          	j	204047c4 <metal_lc15_interrupt_vector_handler>

20407700 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:180
{
20407700:	1101                	addi	sp,sp,-32
20407702:	ce22                	sw	s0,28(sp)
20407704:	1000                	addi	s0,sp,32
20407706:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040770a:	fec42703          	lw	a4,-20(s0)
2040770e:	800007b7          	lui	a5,0x80000
20407712:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
20407716:	00f71763          	bne	a4,a5,20407724 <__metal_driver_fixed_clock_rate+0x24>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040771a:	00f427b7          	lui	a5,0xf42
2040771e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407722:	a825                	j	2040775a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407724:	fec42703          	lw	a4,-20(s0)
20407728:	800007b7          	lui	a5,0x80000
2040772c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
20407730:	00f71763          	bne	a4,a5,2040773e <__metal_driver_fixed_clock_rate+0x3e>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407734:	044aa7b7          	lui	a5,0x44aa
20407738:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2040773c:	a839                	j	2040775a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040773e:	fec42703          	lw	a4,-20(s0)
20407742:	800007b7          	lui	a5,0x80000
20407746:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffec08>
2040774a:	00f71763          	bne	a4,a5,20407758 <__metal_driver_fixed_clock_rate+0x58>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040774e:	01e857b7          	lui	a5,0x1e85
20407752:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407756:	a011                	j	2040775a <__metal_driver_fixed_clock_rate+0x5a>
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:191
		return 0;
20407758:	4781                	li	a5,0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/bsp/build/debug/./metal/machine.h:193
}
2040775a:	853e                	mv	a0,a5
2040775c:	4472                	lw	s0,28(sp)
2040775e:	6105                	addi	sp,sp,32
20407760:	8082                	ret

20407762 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407762:	1101                	addi	sp,sp,-32
20407764:	ce06                	sw	ra,28(sp)
20407766:	cc22                	sw	s0,24(sp)
20407768:	1000                	addi	s0,sp,32
2040776a:	fea42623          	sw	a0,-20(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040776e:	fec42503          	lw	a0,-20(s0)
20407772:	3779                	jal	20407700 <__metal_driver_fixed_clock_rate>
20407774:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:14
}
20407776:	853e                	mv	a0,a5
20407778:	40f2                	lw	ra,28(sp)
2040777a:	4462                	lw	s0,24(sp)
2040777c:	6105                	addi	sp,sp,32
2040777e:	8082                	ret

20407780 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407780:	1101                	addi	sp,sp,-32
20407782:	ce06                	sw	ra,28(sp)
20407784:	cc22                	sw	s0,24(sp)
20407786:	1000                	addi	s0,sp,32
20407788:	fea42623          	sw	a0,-20(s0)
2040778c:	feb42423          	sw	a1,-24(s0)
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407790:	fec42503          	lw	a0,-20(s0)
20407794:	37f9                	jal	20407762 <__metal_driver_fixed_clock_get_rate_hz>
20407796:	87aa                	mv	a5,a0
/mnt/sata_data/qemu/freedom_wb/qemu_sifive_e31_sifive_welcome/freedom-metal/src/drivers/fixed-clock.c:19
}
20407798:	853e                	mv	a0,a5
2040779a:	40f2                	lw	ra,28(sp)
2040779c:	4462                	lw	s0,24(sp)
2040779e:	6105                	addi	sp,sp,32
204077a0:	8082                	ret
